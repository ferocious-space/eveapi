// Code generated by YAML2GO. DO NOT EDIT.

package sde

import (
	yamlv3 "gopkg.in/yaml.v3"
	"os"
)

type AgentMap map[int32]Agent

func (x *AgentMap) Load(path string) error {
	f, err := os.Open(path)
	if err != nil {
		return err
	}
	defer f.Close()
	return yamlv3.NewDecoder(f).Decode(x)
}
func (x AgentMap) Get(ID int32) *Agent {
	if a, ok := x[ID]; ok {
		return &a
	}
	return nil
}

type Agent struct {
	AgentTypeID   *int32 `bson:"agentTypeID,omitempty" db:"agentTypeID,omitempty" json:"agentTypeID,omitempty" yaml:"agentTypeID,omitempty"`
	CorporationID *int32 `bson:"corporationID,omitempty" db:"corporationID,omitempty" json:"corporationID,omitempty" yaml:"corporationID,omitempty"`
	DivisionID    *int32 `bson:"divisionID,omitempty" db:"divisionID,omitempty" json:"divisionID,omitempty" yaml:"divisionID,omitempty"`
	IsLocator     *bool  `bson:"isLocator,omitempty" db:"isLocator,omitempty" json:"isLocator,omitempty" yaml:"isLocator,omitempty"`
	Level         *int32 `bson:"level,omitempty" db:"level,omitempty" json:"level,omitempty" yaml:"level,omitempty"`
	LocationID    *int64 `bson:"locationID,omitempty" db:"locationID,omitempty" json:"locationID,omitempty" yaml:"locationID,omitempty"`
}
