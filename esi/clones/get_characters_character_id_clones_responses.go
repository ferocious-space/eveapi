// Code generated by go-swagger; DO NOT EDIT.

package clones

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCharactersCharacterIDClonesReader is a Reader for the GetCharactersCharacterIDClones structure.
type GetCharactersCharacterIDClonesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDClonesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCharactersCharacterIDClonesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCharactersCharacterIDClonesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCharactersCharacterIDClonesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCharactersCharacterIDClonesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCharactersCharacterIDClonesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCharactersCharacterIDClonesEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCharactersCharacterIDClonesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCharactersCharacterIDClonesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCharactersCharacterIDClonesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCharactersCharacterIDClonesOK creates a GetCharactersCharacterIDClonesOK with default headers values
func NewGetCharactersCharacterIDClonesOK() *GetCharactersCharacterIDClonesOK {
	return &GetCharactersCharacterIDClonesOK{}
}

/*
GetCharactersCharacterIDClonesOK describes a response with status code 200, with default header values.

Clone information for the given character
*/
type GetCharactersCharacterIDClonesOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetCharactersCharacterIDClonesOKBody
}

// IsSuccess returns true when this get characters character Id clones o k response has a 2xx status code
func (o *GetCharactersCharacterIDClonesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get characters character Id clones o k response has a 3xx status code
func (o *GetCharactersCharacterIDClonesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id clones o k response has a 4xx status code
func (o *GetCharactersCharacterIDClonesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id clones o k response has a 5xx status code
func (o *GetCharactersCharacterIDClonesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id clones o k response a status code equal to that given
func (o *GetCharactersCharacterIDClonesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCharactersCharacterIDClonesOK) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDClonesOK) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDClonesOK) GetPayload() *GetCharactersCharacterIDClonesOKBody {
	return o.Payload
}

func (o *GetCharactersCharacterIDClonesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetCharactersCharacterIDClonesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDClonesNotModified creates a GetCharactersCharacterIDClonesNotModified with default headers values
func NewGetCharactersCharacterIDClonesNotModified() *GetCharactersCharacterIDClonesNotModified {
	return &GetCharactersCharacterIDClonesNotModified{}
}

/*
GetCharactersCharacterIDClonesNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCharactersCharacterIDClonesNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get characters character Id clones not modified response has a 2xx status code
func (o *GetCharactersCharacterIDClonesNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id clones not modified response has a 3xx status code
func (o *GetCharactersCharacterIDClonesNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get characters character Id clones not modified response has a 4xx status code
func (o *GetCharactersCharacterIDClonesNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id clones not modified response has a 5xx status code
func (o *GetCharactersCharacterIDClonesNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id clones not modified response a status code equal to that given
func (o *GetCharactersCharacterIDClonesNotModified) IsCode(code int) bool {
	return code == 304
}

func (o *GetCharactersCharacterIDClonesNotModified) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesNotModified ", 304)
}

func (o *GetCharactersCharacterIDClonesNotModified) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesNotModified ", 304)
}

func (o *GetCharactersCharacterIDClonesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCharactersCharacterIDClonesBadRequest creates a GetCharactersCharacterIDClonesBadRequest with default headers values
func NewGetCharactersCharacterIDClonesBadRequest() *GetCharactersCharacterIDClonesBadRequest {
	return &GetCharactersCharacterIDClonesBadRequest{}
}

/*
GetCharactersCharacterIDClonesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCharactersCharacterIDClonesBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get characters character Id clones bad request response has a 2xx status code
func (o *GetCharactersCharacterIDClonesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id clones bad request response has a 3xx status code
func (o *GetCharactersCharacterIDClonesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id clones bad request response has a 4xx status code
func (o *GetCharactersCharacterIDClonesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id clones bad request response has a 5xx status code
func (o *GetCharactersCharacterIDClonesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id clones bad request response a status code equal to that given
func (o *GetCharactersCharacterIDClonesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetCharactersCharacterIDClonesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDClonesBadRequest) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDClonesBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCharactersCharacterIDClonesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDClonesUnauthorized creates a GetCharactersCharacterIDClonesUnauthorized with default headers values
func NewGetCharactersCharacterIDClonesUnauthorized() *GetCharactersCharacterIDClonesUnauthorized {
	return &GetCharactersCharacterIDClonesUnauthorized{}
}

/*
GetCharactersCharacterIDClonesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCharactersCharacterIDClonesUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get characters character Id clones unauthorized response has a 2xx status code
func (o *GetCharactersCharacterIDClonesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id clones unauthorized response has a 3xx status code
func (o *GetCharactersCharacterIDClonesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id clones unauthorized response has a 4xx status code
func (o *GetCharactersCharacterIDClonesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id clones unauthorized response has a 5xx status code
func (o *GetCharactersCharacterIDClonesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id clones unauthorized response a status code equal to that given
func (o *GetCharactersCharacterIDClonesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetCharactersCharacterIDClonesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDClonesUnauthorized) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDClonesUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCharactersCharacterIDClonesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDClonesForbidden creates a GetCharactersCharacterIDClonesForbidden with default headers values
func NewGetCharactersCharacterIDClonesForbidden() *GetCharactersCharacterIDClonesForbidden {
	return &GetCharactersCharacterIDClonesForbidden{}
}

/*
GetCharactersCharacterIDClonesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCharactersCharacterIDClonesForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get characters character Id clones forbidden response has a 2xx status code
func (o *GetCharactersCharacterIDClonesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id clones forbidden response has a 3xx status code
func (o *GetCharactersCharacterIDClonesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id clones forbidden response has a 4xx status code
func (o *GetCharactersCharacterIDClonesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id clones forbidden response has a 5xx status code
func (o *GetCharactersCharacterIDClonesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id clones forbidden response a status code equal to that given
func (o *GetCharactersCharacterIDClonesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetCharactersCharacterIDClonesForbidden) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDClonesForbidden) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDClonesForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCharactersCharacterIDClonesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDClonesEnhanceYourCalm creates a GetCharactersCharacterIDClonesEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDClonesEnhanceYourCalm() *GetCharactersCharacterIDClonesEnhanceYourCalm {
	return &GetCharactersCharacterIDClonesEnhanceYourCalm{}
}

/*
GetCharactersCharacterIDClonesEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCharactersCharacterIDClonesEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get characters character Id clones enhance your calm response has a 2xx status code
func (o *GetCharactersCharacterIDClonesEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id clones enhance your calm response has a 3xx status code
func (o *GetCharactersCharacterIDClonesEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id clones enhance your calm response has a 4xx status code
func (o *GetCharactersCharacterIDClonesEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id clones enhance your calm response has a 5xx status code
func (o *GetCharactersCharacterIDClonesEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id clones enhance your calm response a status code equal to that given
func (o *GetCharactersCharacterIDClonesEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

func (o *GetCharactersCharacterIDClonesEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDClonesEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDClonesEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCharactersCharacterIDClonesEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDClonesInternalServerError creates a GetCharactersCharacterIDClonesInternalServerError with default headers values
func NewGetCharactersCharacterIDClonesInternalServerError() *GetCharactersCharacterIDClonesInternalServerError {
	return &GetCharactersCharacterIDClonesInternalServerError{}
}

/*
GetCharactersCharacterIDClonesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCharactersCharacterIDClonesInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get characters character Id clones internal server error response has a 2xx status code
func (o *GetCharactersCharacterIDClonesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id clones internal server error response has a 3xx status code
func (o *GetCharactersCharacterIDClonesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id clones internal server error response has a 4xx status code
func (o *GetCharactersCharacterIDClonesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id clones internal server error response has a 5xx status code
func (o *GetCharactersCharacterIDClonesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id clones internal server error response a status code equal to that given
func (o *GetCharactersCharacterIDClonesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCharactersCharacterIDClonesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDClonesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDClonesInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCharactersCharacterIDClonesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDClonesServiceUnavailable creates a GetCharactersCharacterIDClonesServiceUnavailable with default headers values
func NewGetCharactersCharacterIDClonesServiceUnavailable() *GetCharactersCharacterIDClonesServiceUnavailable {
	return &GetCharactersCharacterIDClonesServiceUnavailable{}
}

/*
GetCharactersCharacterIDClonesServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCharactersCharacterIDClonesServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get characters character Id clones service unavailable response has a 2xx status code
func (o *GetCharactersCharacterIDClonesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id clones service unavailable response has a 3xx status code
func (o *GetCharactersCharacterIDClonesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id clones service unavailable response has a 4xx status code
func (o *GetCharactersCharacterIDClonesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id clones service unavailable response has a 5xx status code
func (o *GetCharactersCharacterIDClonesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id clones service unavailable response a status code equal to that given
func (o *GetCharactersCharacterIDClonesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetCharactersCharacterIDClonesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDClonesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDClonesServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCharactersCharacterIDClonesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDClonesGatewayTimeout creates a GetCharactersCharacterIDClonesGatewayTimeout with default headers values
func NewGetCharactersCharacterIDClonesGatewayTimeout() *GetCharactersCharacterIDClonesGatewayTimeout {
	return &GetCharactersCharacterIDClonesGatewayTimeout{}
}

/*
GetCharactersCharacterIDClonesGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDClonesGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get characters character Id clones gateway timeout response has a 2xx status code
func (o *GetCharactersCharacterIDClonesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id clones gateway timeout response has a 3xx status code
func (o *GetCharactersCharacterIDClonesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id clones gateway timeout response has a 4xx status code
func (o *GetCharactersCharacterIDClonesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id clones gateway timeout response has a 5xx status code
func (o *GetCharactersCharacterIDClonesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id clones gateway timeout response a status code equal to that given
func (o *GetCharactersCharacterIDClonesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetCharactersCharacterIDClonesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDClonesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/clones/][%d] getCharactersCharacterIdClonesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDClonesGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCharactersCharacterIDClonesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCharactersCharacterIDClonesOKBody get_characters_character_id_clones_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDClonesOKBody
*/
type GetCharactersCharacterIDClonesOKBody struct {

	// home location
	HomeLocation *GetCharactersCharacterIDClonesOKBodyHomeLocation `json:"home_location,omitempty"`

	// get_characters_character_id_clones_jump_clones
	//
	// jump_clones array
	// Required: true
	// Max Items: 64
	JumpClones []*GetCharactersCharacterIDClonesOKBodyJumpClonesItems0 `json:"jump_clones"`

	// get_characters_character_id_clones_last_clone_jump_date
	//
	// last_clone_jump_date string
	// Format: date-time
	LastCloneJumpDate strfmt.DateTime `json:"last_clone_jump_date,omitempty"`

	// get_characters_character_id_clones_last_station_change_date
	//
	// last_station_change_date string
	// Format: date-time
	LastStationChangeDate strfmt.DateTime `json:"last_station_change_date,omitempty"`
}

// Validate validates this get characters character ID clones o k body
func (o *GetCharactersCharacterIDClonesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHomeLocation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateJumpClones(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastCloneJumpDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastStationChangeDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDClonesOKBody) validateHomeLocation(formats strfmt.Registry) error {
	if swag.IsZero(o.HomeLocation) { // not required
		return nil
	}

	if o.HomeLocation != nil {
		if err := o.HomeLocation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCharactersCharacterIdClonesOK" + "." + "home_location")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCharactersCharacterIdClonesOK" + "." + "home_location")
			}
			return err
		}
	}

	return nil
}

func (o *GetCharactersCharacterIDClonesOKBody) validateJumpClones(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdClonesOK"+"."+"jump_clones", "body", o.JumpClones); err != nil {
		return err
	}

	iJumpClonesSize := int64(len(o.JumpClones))

	if err := validate.MaxItems("getCharactersCharacterIdClonesOK"+"."+"jump_clones", "body", iJumpClonesSize, 64); err != nil {
		return err
	}

	for i := 0; i < len(o.JumpClones); i++ {
		if swag.IsZero(o.JumpClones[i]) { // not required
			continue
		}

		if o.JumpClones[i] != nil {
			if err := o.JumpClones[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCharactersCharacterIdClonesOK" + "." + "jump_clones" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCharactersCharacterIdClonesOK" + "." + "jump_clones" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetCharactersCharacterIDClonesOKBody) validateLastCloneJumpDate(formats strfmt.Registry) error {
	if swag.IsZero(o.LastCloneJumpDate) { // not required
		return nil
	}

	if err := validate.FormatOf("getCharactersCharacterIdClonesOK"+"."+"last_clone_jump_date", "body", "date-time", o.LastCloneJumpDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDClonesOKBody) validateLastStationChangeDate(formats strfmt.Registry) error {
	if swag.IsZero(o.LastStationChangeDate) { // not required
		return nil
	}

	if err := validate.FormatOf("getCharactersCharacterIdClonesOK"+"."+"last_station_change_date", "body", "date-time", o.LastStationChangeDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this get characters character ID clones o k body based on the context it is used
func (o *GetCharactersCharacterIDClonesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHomeLocation(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateJumpClones(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDClonesOKBody) contextValidateHomeLocation(ctx context.Context, formats strfmt.Registry) error {

	if o.HomeLocation != nil {
		if err := o.HomeLocation.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCharactersCharacterIdClonesOK" + "." + "home_location")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCharactersCharacterIdClonesOK" + "." + "home_location")
			}
			return err
		}
	}

	return nil
}

func (o *GetCharactersCharacterIDClonesOKBody) contextValidateJumpClones(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.JumpClones); i++ {

		if o.JumpClones[i] != nil {
			if err := o.JumpClones[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCharactersCharacterIdClonesOK" + "." + "jump_clones" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCharactersCharacterIdClonesOK" + "." + "jump_clones" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDClonesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDClonesOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDClonesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCharactersCharacterIDClonesOKBodyHomeLocation get_characters_character_id_clones_home_location
//
// home_location object
swagger:model GetCharactersCharacterIDClonesOKBodyHomeLocation
*/
type GetCharactersCharacterIDClonesOKBodyHomeLocation struct {

	// get_characters_character_id_clones_location_id
	//
	// location_id integer
	LocationID int64 `json:"location_id,omitempty"`

	// get_characters_character_id_clones_location_type
	//
	// location_type string
	// Enum: [station structure]
	LocationType string `json:"location_type,omitempty"`
}

// Validate validates this get characters character ID clones o k body home location
func (o *GetCharactersCharacterIDClonesOKBodyHomeLocation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLocationType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getCharactersCharacterIdClonesOKBodyHomeLocationTypeLocationTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["station","structure"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCharactersCharacterIdClonesOKBodyHomeLocationTypeLocationTypePropEnum = append(getCharactersCharacterIdClonesOKBodyHomeLocationTypeLocationTypePropEnum, v)
	}
}

const (

	// GetCharactersCharacterIDClonesOKBodyHomeLocationLocationTypeStation captures enum value "station"
	GetCharactersCharacterIDClonesOKBodyHomeLocationLocationTypeStation string = "station"

	// GetCharactersCharacterIDClonesOKBodyHomeLocationLocationTypeStructure captures enum value "structure"
	GetCharactersCharacterIDClonesOKBodyHomeLocationLocationTypeStructure string = "structure"
)

// prop value enum
func (o *GetCharactersCharacterIDClonesOKBodyHomeLocation) validateLocationTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCharactersCharacterIdClonesOKBodyHomeLocationTypeLocationTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCharactersCharacterIDClonesOKBodyHomeLocation) validateLocationType(formats strfmt.Registry) error {
	if swag.IsZero(o.LocationType) { // not required
		return nil
	}

	// value enum
	if err := o.validateLocationTypeEnum("getCharactersCharacterIdClonesOK"+"."+"home_location"+"."+"location_type", "body", o.LocationType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID clones o k body home location based on context it is used
func (o *GetCharactersCharacterIDClonesOKBodyHomeLocation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDClonesOKBodyHomeLocation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDClonesOKBodyHomeLocation) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDClonesOKBodyHomeLocation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCharactersCharacterIDClonesOKBodyJumpClonesItems0 get_characters_character_id_clones_jump_clone
//
// jump_clone object
swagger:model GetCharactersCharacterIDClonesOKBodyJumpClonesItems0
*/
type GetCharactersCharacterIDClonesOKBodyJumpClonesItems0 struct {

	// get_characters_character_id_clones_implants
	//
	// implants array
	// Required: true
	// Max Items: 64
	Implants []int32 `json:"implants"`

	// get_characters_character_id_clones_jump_clone_id
	//
	// jump_clone_id integer
	// Required: true
	JumpCloneID *int32 `json:"jump_clone_id"`

	// get_characters_character_id_clones_jump_clone_location_id
	//
	// location_id integer
	// Required: true
	LocationID *int64 `json:"location_id"`

	// get_characters_character_id_clones_jump_clone_location_type
	//
	// location_type string
	// Required: true
	// Enum: [station structure]
	LocationType *string `json:"location_type"`

	// get_characters_character_id_clones_name
	//
	// name string
	Name string `json:"name,omitempty"`
}

// Validate validates this get characters character ID clones o k body jump clones items0
func (o *GetCharactersCharacterIDClonesOKBodyJumpClonesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateImplants(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateJumpCloneID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocationID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocationType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDClonesOKBodyJumpClonesItems0) validateImplants(formats strfmt.Registry) error {

	if err := validate.Required("implants", "body", o.Implants); err != nil {
		return err
	}

	iImplantsSize := int64(len(o.Implants))

	if err := validate.MaxItems("implants", "body", iImplantsSize, 64); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDClonesOKBodyJumpClonesItems0) validateJumpCloneID(formats strfmt.Registry) error {

	if err := validate.Required("jump_clone_id", "body", o.JumpCloneID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDClonesOKBodyJumpClonesItems0) validateLocationID(formats strfmt.Registry) error {

	if err := validate.Required("location_id", "body", o.LocationID); err != nil {
		return err
	}

	return nil
}

var getCharactersCharacterIdClonesOKBodyJumpClonesItems0TypeLocationTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["station","structure"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCharactersCharacterIdClonesOKBodyJumpClonesItems0TypeLocationTypePropEnum = append(getCharactersCharacterIdClonesOKBodyJumpClonesItems0TypeLocationTypePropEnum, v)
	}
}

const (

	// GetCharactersCharacterIDClonesOKBodyJumpClonesItems0LocationTypeStation captures enum value "station"
	GetCharactersCharacterIDClonesOKBodyJumpClonesItems0LocationTypeStation string = "station"

	// GetCharactersCharacterIDClonesOKBodyJumpClonesItems0LocationTypeStructure captures enum value "structure"
	GetCharactersCharacterIDClonesOKBodyJumpClonesItems0LocationTypeStructure string = "structure"
)

// prop value enum
func (o *GetCharactersCharacterIDClonesOKBodyJumpClonesItems0) validateLocationTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCharactersCharacterIdClonesOKBodyJumpClonesItems0TypeLocationTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCharactersCharacterIDClonesOKBodyJumpClonesItems0) validateLocationType(formats strfmt.Registry) error {

	if err := validate.Required("location_type", "body", o.LocationType); err != nil {
		return err
	}

	// value enum
	if err := o.validateLocationTypeEnum("location_type", "body", *o.LocationType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID clones o k body jump clones items0 based on context it is used
func (o *GetCharactersCharacterIDClonesOKBodyJumpClonesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDClonesOKBodyJumpClonesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDClonesOKBodyJumpClonesItems0) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDClonesOKBodyJumpClonesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
