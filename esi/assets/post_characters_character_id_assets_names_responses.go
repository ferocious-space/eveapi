// Code generated by go-swagger; DO NOT EDIT.

package assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// PostCharactersCharacterIDAssetsNamesReader is a Reader for the PostCharactersCharacterIDAssetsNames structure.
type PostCharactersCharacterIDAssetsNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCharactersCharacterIDAssetsNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostCharactersCharacterIDAssetsNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostCharactersCharacterIDAssetsNamesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostCharactersCharacterIDAssetsNamesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostCharactersCharacterIDAssetsNamesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewPostCharactersCharacterIDAssetsNamesEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostCharactersCharacterIDAssetsNamesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostCharactersCharacterIDAssetsNamesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostCharactersCharacterIDAssetsNamesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostCharactersCharacterIDAssetsNamesOK creates a PostCharactersCharacterIDAssetsNamesOK with default headers values
func NewPostCharactersCharacterIDAssetsNamesOK() *PostCharactersCharacterIDAssetsNamesOK {
	return &PostCharactersCharacterIDAssetsNamesOK{}
}

/*
PostCharactersCharacterIDAssetsNamesOK describes a response with status code 200, with default header values.

List of asset names
*/
type PostCharactersCharacterIDAssetsNamesOK struct {
	Payload []*PostCharactersCharacterIDAssetsNamesOKBodyItems0
}

// IsSuccess returns true when this post characters character Id assets names o k response has a 2xx status code
func (o *PostCharactersCharacterIDAssetsNamesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post characters character Id assets names o k response has a 3xx status code
func (o *PostCharactersCharacterIDAssetsNamesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id assets names o k response has a 4xx status code
func (o *PostCharactersCharacterIDAssetsNamesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post characters character Id assets names o k response has a 5xx status code
func (o *PostCharactersCharacterIDAssetsNamesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters character Id assets names o k response a status code equal to that given
func (o *PostCharactersCharacterIDAssetsNamesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostCharactersCharacterIDAssetsNamesOK) Error() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesOK  %+v", 200, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesOK) String() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesOK  %+v", 200, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesOK) GetPayload() []*PostCharactersCharacterIDAssetsNamesOKBodyItems0 {
	return o.Payload
}

func (o *PostCharactersCharacterIDAssetsNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDAssetsNamesBadRequest creates a PostCharactersCharacterIDAssetsNamesBadRequest with default headers values
func NewPostCharactersCharacterIDAssetsNamesBadRequest() *PostCharactersCharacterIDAssetsNamesBadRequest {
	return &PostCharactersCharacterIDAssetsNamesBadRequest{}
}

/*
PostCharactersCharacterIDAssetsNamesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostCharactersCharacterIDAssetsNamesBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this post characters character Id assets names bad request response has a 2xx status code
func (o *PostCharactersCharacterIDAssetsNamesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id assets names bad request response has a 3xx status code
func (o *PostCharactersCharacterIDAssetsNamesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id assets names bad request response has a 4xx status code
func (o *PostCharactersCharacterIDAssetsNamesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post characters character Id assets names bad request response has a 5xx status code
func (o *PostCharactersCharacterIDAssetsNamesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters character Id assets names bad request response a status code equal to that given
func (o *PostCharactersCharacterIDAssetsNamesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostCharactersCharacterIDAssetsNamesBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesBadRequest  %+v", 400, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesBadRequest  %+v", 400, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *PostCharactersCharacterIDAssetsNamesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDAssetsNamesUnauthorized creates a PostCharactersCharacterIDAssetsNamesUnauthorized with default headers values
func NewPostCharactersCharacterIDAssetsNamesUnauthorized() *PostCharactersCharacterIDAssetsNamesUnauthorized {
	return &PostCharactersCharacterIDAssetsNamesUnauthorized{}
}

/*
PostCharactersCharacterIDAssetsNamesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostCharactersCharacterIDAssetsNamesUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this post characters character Id assets names unauthorized response has a 2xx status code
func (o *PostCharactersCharacterIDAssetsNamesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id assets names unauthorized response has a 3xx status code
func (o *PostCharactersCharacterIDAssetsNamesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id assets names unauthorized response has a 4xx status code
func (o *PostCharactersCharacterIDAssetsNamesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post characters character Id assets names unauthorized response has a 5xx status code
func (o *PostCharactersCharacterIDAssetsNamesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters character Id assets names unauthorized response a status code equal to that given
func (o *PostCharactersCharacterIDAssetsNamesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostCharactersCharacterIDAssetsNamesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *PostCharactersCharacterIDAssetsNamesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDAssetsNamesForbidden creates a PostCharactersCharacterIDAssetsNamesForbidden with default headers values
func NewPostCharactersCharacterIDAssetsNamesForbidden() *PostCharactersCharacterIDAssetsNamesForbidden {
	return &PostCharactersCharacterIDAssetsNamesForbidden{}
}

/*
PostCharactersCharacterIDAssetsNamesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostCharactersCharacterIDAssetsNamesForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this post characters character Id assets names forbidden response has a 2xx status code
func (o *PostCharactersCharacterIDAssetsNamesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id assets names forbidden response has a 3xx status code
func (o *PostCharactersCharacterIDAssetsNamesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id assets names forbidden response has a 4xx status code
func (o *PostCharactersCharacterIDAssetsNamesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post characters character Id assets names forbidden response has a 5xx status code
func (o *PostCharactersCharacterIDAssetsNamesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters character Id assets names forbidden response a status code equal to that given
func (o *PostCharactersCharacterIDAssetsNamesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostCharactersCharacterIDAssetsNamesForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesForbidden  %+v", 403, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesForbidden) String() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesForbidden  %+v", 403, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *PostCharactersCharacterIDAssetsNamesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDAssetsNamesEnhanceYourCalm creates a PostCharactersCharacterIDAssetsNamesEnhanceYourCalm with default headers values
func NewPostCharactersCharacterIDAssetsNamesEnhanceYourCalm() *PostCharactersCharacterIDAssetsNamesEnhanceYourCalm {
	return &PostCharactersCharacterIDAssetsNamesEnhanceYourCalm{}
}

/*
PostCharactersCharacterIDAssetsNamesEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type PostCharactersCharacterIDAssetsNamesEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this post characters character Id assets names enhance your calm response has a 2xx status code
func (o *PostCharactersCharacterIDAssetsNamesEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id assets names enhance your calm response has a 3xx status code
func (o *PostCharactersCharacterIDAssetsNamesEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id assets names enhance your calm response has a 4xx status code
func (o *PostCharactersCharacterIDAssetsNamesEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this post characters character Id assets names enhance your calm response has a 5xx status code
func (o *PostCharactersCharacterIDAssetsNamesEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters character Id assets names enhance your calm response a status code equal to that given
func (o *PostCharactersCharacterIDAssetsNamesEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

func (o *PostCharactersCharacterIDAssetsNamesEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesEnhanceYourCalm) String() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *PostCharactersCharacterIDAssetsNamesEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDAssetsNamesInternalServerError creates a PostCharactersCharacterIDAssetsNamesInternalServerError with default headers values
func NewPostCharactersCharacterIDAssetsNamesInternalServerError() *PostCharactersCharacterIDAssetsNamesInternalServerError {
	return &PostCharactersCharacterIDAssetsNamesInternalServerError{}
}

/*
PostCharactersCharacterIDAssetsNamesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostCharactersCharacterIDAssetsNamesInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this post characters character Id assets names internal server error response has a 2xx status code
func (o *PostCharactersCharacterIDAssetsNamesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id assets names internal server error response has a 3xx status code
func (o *PostCharactersCharacterIDAssetsNamesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id assets names internal server error response has a 4xx status code
func (o *PostCharactersCharacterIDAssetsNamesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post characters character Id assets names internal server error response has a 5xx status code
func (o *PostCharactersCharacterIDAssetsNamesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post characters character Id assets names internal server error response a status code equal to that given
func (o *PostCharactersCharacterIDAssetsNamesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostCharactersCharacterIDAssetsNamesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *PostCharactersCharacterIDAssetsNamesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDAssetsNamesServiceUnavailable creates a PostCharactersCharacterIDAssetsNamesServiceUnavailable with default headers values
func NewPostCharactersCharacterIDAssetsNamesServiceUnavailable() *PostCharactersCharacterIDAssetsNamesServiceUnavailable {
	return &PostCharactersCharacterIDAssetsNamesServiceUnavailable{}
}

/*
PostCharactersCharacterIDAssetsNamesServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type PostCharactersCharacterIDAssetsNamesServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this post characters character Id assets names service unavailable response has a 2xx status code
func (o *PostCharactersCharacterIDAssetsNamesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id assets names service unavailable response has a 3xx status code
func (o *PostCharactersCharacterIDAssetsNamesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id assets names service unavailable response has a 4xx status code
func (o *PostCharactersCharacterIDAssetsNamesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post characters character Id assets names service unavailable response has a 5xx status code
func (o *PostCharactersCharacterIDAssetsNamesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post characters character Id assets names service unavailable response a status code equal to that given
func (o *PostCharactersCharacterIDAssetsNamesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PostCharactersCharacterIDAssetsNamesServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *PostCharactersCharacterIDAssetsNamesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDAssetsNamesGatewayTimeout creates a PostCharactersCharacterIDAssetsNamesGatewayTimeout with default headers values
func NewPostCharactersCharacterIDAssetsNamesGatewayTimeout() *PostCharactersCharacterIDAssetsNamesGatewayTimeout {
	return &PostCharactersCharacterIDAssetsNamesGatewayTimeout{}
}

/*
PostCharactersCharacterIDAssetsNamesGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type PostCharactersCharacterIDAssetsNamesGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this post characters character Id assets names gateway timeout response has a 2xx status code
func (o *PostCharactersCharacterIDAssetsNamesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id assets names gateway timeout response has a 3xx status code
func (o *PostCharactersCharacterIDAssetsNamesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id assets names gateway timeout response has a 4xx status code
func (o *PostCharactersCharacterIDAssetsNamesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post characters character Id assets names gateway timeout response has a 5xx status code
func (o *PostCharactersCharacterIDAssetsNamesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post characters character Id assets names gateway timeout response a status code equal to that given
func (o *PostCharactersCharacterIDAssetsNamesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PostCharactersCharacterIDAssetsNamesGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /v1/characters/{character_id}/assets/names/][%d] postCharactersCharacterIdAssetsNamesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostCharactersCharacterIDAssetsNamesGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *PostCharactersCharacterIDAssetsNamesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PostCharactersCharacterIDAssetsNamesOKBodyItems0 post_characters_character_id_assets_names_200_ok
//
// 200 ok object
swagger:model PostCharactersCharacterIDAssetsNamesOKBodyItems0
*/
type PostCharactersCharacterIDAssetsNamesOKBodyItems0 struct {

	// post_characters_character_id_assets_names_item_id
	//
	// item_id integer
	// Required: true
	ItemID *int64 `json:"item_id"`

	// post_characters_character_id_assets_names_name
	//
	// name string
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this post characters character ID assets names o k body items0
func (o *PostCharactersCharacterIDAssetsNamesOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItemID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCharactersCharacterIDAssetsNamesOKBodyItems0) validateItemID(formats strfmt.Registry) error {

	if err := validate.Required("item_id", "body", o.ItemID); err != nil {
		return err
	}

	return nil
}

func (o *PostCharactersCharacterIDAssetsNamesOKBodyItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post characters character ID assets names o k body items0 based on context it is used
func (o *PostCharactersCharacterIDAssetsNamesOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCharactersCharacterIDAssetsNamesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCharactersCharacterIDAssetsNamesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res PostCharactersCharacterIDAssetsNamesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
