// Code generated by go-swagger; DO NOT EDIT.

package opportunities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetOpportunitiesTasksTaskIDReader is a Reader for the GetOpportunitiesTasksTaskID structure.
type GetOpportunitiesTasksTaskIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOpportunitiesTasksTaskIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOpportunitiesTasksTaskIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetOpportunitiesTasksTaskIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetOpportunitiesTasksTaskIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetOpportunitiesTasksTaskIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOpportunitiesTasksTaskIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOpportunitiesTasksTaskIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOpportunitiesTasksTaskIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOpportunitiesTasksTaskIDOK creates a GetOpportunitiesTasksTaskIDOK with default headers values
func NewGetOpportunitiesTasksTaskIDOK() *GetOpportunitiesTasksTaskIDOK {
	return &GetOpportunitiesTasksTaskIDOK{}
}

/* GetOpportunitiesTasksTaskIDOK describes a response with status code 200, with default header values.

Details of an opportunities task
*/
type GetOpportunitiesTasksTaskIDOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetOpportunitiesTasksTaskIDOKBody
}

func (o *GetOpportunitiesTasksTaskIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/tasks/{task_id}/][%d] getOpportunitiesTasksTaskIdOK  %+v", 200, o.Payload)
}
func (o *GetOpportunitiesTasksTaskIDOK) GetPayload() *GetOpportunitiesTasksTaskIDOKBody {
	return o.Payload
}

func (o *GetOpportunitiesTasksTaskIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetOpportunitiesTasksTaskIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOpportunitiesTasksTaskIDNotModified creates a GetOpportunitiesTasksTaskIDNotModified with default headers values
func NewGetOpportunitiesTasksTaskIDNotModified() *GetOpportunitiesTasksTaskIDNotModified {
	return &GetOpportunitiesTasksTaskIDNotModified{}
}

/* GetOpportunitiesTasksTaskIDNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetOpportunitiesTasksTaskIDNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetOpportunitiesTasksTaskIDNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/tasks/{task_id}/][%d] getOpportunitiesTasksTaskIdNotModified ", 304)
}

func (o *GetOpportunitiesTasksTaskIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetOpportunitiesTasksTaskIDBadRequest creates a GetOpportunitiesTasksTaskIDBadRequest with default headers values
func NewGetOpportunitiesTasksTaskIDBadRequest() *GetOpportunitiesTasksTaskIDBadRequest {
	return &GetOpportunitiesTasksTaskIDBadRequest{}
}

/* GetOpportunitiesTasksTaskIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetOpportunitiesTasksTaskIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetOpportunitiesTasksTaskIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/tasks/{task_id}/][%d] getOpportunitiesTasksTaskIdBadRequest  %+v", 400, o.Payload)
}
func (o *GetOpportunitiesTasksTaskIDBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetOpportunitiesTasksTaskIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOpportunitiesTasksTaskIDEnhanceYourCalm creates a GetOpportunitiesTasksTaskIDEnhanceYourCalm with default headers values
func NewGetOpportunitiesTasksTaskIDEnhanceYourCalm() *GetOpportunitiesTasksTaskIDEnhanceYourCalm {
	return &GetOpportunitiesTasksTaskIDEnhanceYourCalm{}
}

/* GetOpportunitiesTasksTaskIDEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetOpportunitiesTasksTaskIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetOpportunitiesTasksTaskIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/tasks/{task_id}/][%d] getOpportunitiesTasksTaskIdEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetOpportunitiesTasksTaskIDEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetOpportunitiesTasksTaskIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOpportunitiesTasksTaskIDInternalServerError creates a GetOpportunitiesTasksTaskIDInternalServerError with default headers values
func NewGetOpportunitiesTasksTaskIDInternalServerError() *GetOpportunitiesTasksTaskIDInternalServerError {
	return &GetOpportunitiesTasksTaskIDInternalServerError{}
}

/* GetOpportunitiesTasksTaskIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetOpportunitiesTasksTaskIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetOpportunitiesTasksTaskIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/tasks/{task_id}/][%d] getOpportunitiesTasksTaskIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetOpportunitiesTasksTaskIDInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetOpportunitiesTasksTaskIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOpportunitiesTasksTaskIDServiceUnavailable creates a GetOpportunitiesTasksTaskIDServiceUnavailable with default headers values
func NewGetOpportunitiesTasksTaskIDServiceUnavailable() *GetOpportunitiesTasksTaskIDServiceUnavailable {
	return &GetOpportunitiesTasksTaskIDServiceUnavailable{}
}

/* GetOpportunitiesTasksTaskIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetOpportunitiesTasksTaskIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetOpportunitiesTasksTaskIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/tasks/{task_id}/][%d] getOpportunitiesTasksTaskIdServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetOpportunitiesTasksTaskIDServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetOpportunitiesTasksTaskIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOpportunitiesTasksTaskIDGatewayTimeout creates a GetOpportunitiesTasksTaskIDGatewayTimeout with default headers values
func NewGetOpportunitiesTasksTaskIDGatewayTimeout() *GetOpportunitiesTasksTaskIDGatewayTimeout {
	return &GetOpportunitiesTasksTaskIDGatewayTimeout{}
}

/* GetOpportunitiesTasksTaskIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetOpportunitiesTasksTaskIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetOpportunitiesTasksTaskIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/tasks/{task_id}/][%d] getOpportunitiesTasksTaskIdGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetOpportunitiesTasksTaskIDGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetOpportunitiesTasksTaskIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetOpportunitiesTasksTaskIDOKBody get_opportunities_tasks_task_id_ok
//
// 200 ok object
swagger:model GetOpportunitiesTasksTaskIDOKBody
*/
type GetOpportunitiesTasksTaskIDOKBody struct {

	// get_opportunities_tasks_task_id_description
	//
	// description string
	// Required: true
	Description *string `json:"description"`

	// get_opportunities_tasks_task_id_name
	//
	// name string
	// Required: true
	Name *string `json:"name"`

	// get_opportunities_tasks_task_id_notification
	//
	// notification string
	// Required: true
	Notification *string `json:"notification"`

	// get_opportunities_tasks_task_id_task_id
	//
	// task_id integer
	// Required: true
	TaskID *int32 `json:"task_id"`
}

// Validate validates this get opportunities tasks task ID o k body
func (o *GetOpportunitiesTasksTaskIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNotification(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTaskID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOpportunitiesTasksTaskIDOKBody) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("getOpportunitiesTasksTaskIdOK"+"."+"description", "body", o.Description); err != nil {
		return err
	}

	return nil
}

func (o *GetOpportunitiesTasksTaskIDOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("getOpportunitiesTasksTaskIdOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetOpportunitiesTasksTaskIDOKBody) validateNotification(formats strfmt.Registry) error {

	if err := validate.Required("getOpportunitiesTasksTaskIdOK"+"."+"notification", "body", o.Notification); err != nil {
		return err
	}

	return nil
}

func (o *GetOpportunitiesTasksTaskIDOKBody) validateTaskID(formats strfmt.Registry) error {

	if err := validate.Required("getOpportunitiesTasksTaskIdOK"+"."+"task_id", "body", o.TaskID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get opportunities tasks task ID o k body based on context it is used
func (o *GetOpportunitiesTasksTaskIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOpportunitiesTasksTaskIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOpportunitiesTasksTaskIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetOpportunitiesTasksTaskIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
