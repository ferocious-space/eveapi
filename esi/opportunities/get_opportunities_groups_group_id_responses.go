// Code generated by go-swagger; DO NOT EDIT.

package opportunities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetOpportunitiesGroupsGroupIDReader is a Reader for the GetOpportunitiesGroupsGroupID structure.
type GetOpportunitiesGroupsGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOpportunitiesGroupsGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOpportunitiesGroupsGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetOpportunitiesGroupsGroupIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetOpportunitiesGroupsGroupIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetOpportunitiesGroupsGroupIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOpportunitiesGroupsGroupIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOpportunitiesGroupsGroupIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetOpportunitiesGroupsGroupIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOpportunitiesGroupsGroupIDOK creates a GetOpportunitiesGroupsGroupIDOK with default headers values
func NewGetOpportunitiesGroupsGroupIDOK() *GetOpportunitiesGroupsGroupIDOK {
	return &GetOpportunitiesGroupsGroupIDOK{}
}

/*
GetOpportunitiesGroupsGroupIDOK describes a response with status code 200, with default header values.

Details of an opportunities group
*/
type GetOpportunitiesGroupsGroupIDOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* The language used in the response
	 */
	ContentLanguage string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetOpportunitiesGroupsGroupIDOKBody
}

// IsSuccess returns true when this get opportunities groups group Id o k response has a 2xx status code
func (o *GetOpportunitiesGroupsGroupIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get opportunities groups group Id o k response has a 3xx status code
func (o *GetOpportunitiesGroupsGroupIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get opportunities groups group Id o k response has a 4xx status code
func (o *GetOpportunitiesGroupsGroupIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get opportunities groups group Id o k response has a 5xx status code
func (o *GetOpportunitiesGroupsGroupIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get opportunities groups group Id o k response a status code equal to that given
func (o *GetOpportunitiesGroupsGroupIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get opportunities groups group Id o k response
func (o *GetOpportunitiesGroupsGroupIDOK) Code() int {
	return 200
}

func (o *GetOpportunitiesGroupsGroupIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdOK  %+v", 200, o.Payload)
}

func (o *GetOpportunitiesGroupsGroupIDOK) String() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdOK  %+v", 200, o.Payload)
}

func (o *GetOpportunitiesGroupsGroupIDOK) GetPayload() *GetOpportunitiesGroupsGroupIDOKBody {
	return o.Payload
}

func (o *GetOpportunitiesGroupsGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header Content-Language
	hdrContentLanguage := response.GetHeader("Content-Language")

	if hdrContentLanguage != "" {
		o.ContentLanguage = hdrContentLanguage
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetOpportunitiesGroupsGroupIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOpportunitiesGroupsGroupIDNotModified creates a GetOpportunitiesGroupsGroupIDNotModified with default headers values
func NewGetOpportunitiesGroupsGroupIDNotModified() *GetOpportunitiesGroupsGroupIDNotModified {
	return &GetOpportunitiesGroupsGroupIDNotModified{}
}

/*
GetOpportunitiesGroupsGroupIDNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetOpportunitiesGroupsGroupIDNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get opportunities groups group Id not modified response has a 2xx status code
func (o *GetOpportunitiesGroupsGroupIDNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get opportunities groups group Id not modified response has a 3xx status code
func (o *GetOpportunitiesGroupsGroupIDNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get opportunities groups group Id not modified response has a 4xx status code
func (o *GetOpportunitiesGroupsGroupIDNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get opportunities groups group Id not modified response has a 5xx status code
func (o *GetOpportunitiesGroupsGroupIDNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get opportunities groups group Id not modified response a status code equal to that given
func (o *GetOpportunitiesGroupsGroupIDNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get opportunities groups group Id not modified response
func (o *GetOpportunitiesGroupsGroupIDNotModified) Code() int {
	return 304
}

func (o *GetOpportunitiesGroupsGroupIDNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdNotModified ", 304)
}

func (o *GetOpportunitiesGroupsGroupIDNotModified) String() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdNotModified ", 304)
}

func (o *GetOpportunitiesGroupsGroupIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetOpportunitiesGroupsGroupIDBadRequest creates a GetOpportunitiesGroupsGroupIDBadRequest with default headers values
func NewGetOpportunitiesGroupsGroupIDBadRequest() *GetOpportunitiesGroupsGroupIDBadRequest {
	return &GetOpportunitiesGroupsGroupIDBadRequest{}
}

/*
GetOpportunitiesGroupsGroupIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetOpportunitiesGroupsGroupIDBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get opportunities groups group Id bad request response has a 2xx status code
func (o *GetOpportunitiesGroupsGroupIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get opportunities groups group Id bad request response has a 3xx status code
func (o *GetOpportunitiesGroupsGroupIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get opportunities groups group Id bad request response has a 4xx status code
func (o *GetOpportunitiesGroupsGroupIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get opportunities groups group Id bad request response has a 5xx status code
func (o *GetOpportunitiesGroupsGroupIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get opportunities groups group Id bad request response a status code equal to that given
func (o *GetOpportunitiesGroupsGroupIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get opportunities groups group Id bad request response
func (o *GetOpportunitiesGroupsGroupIDBadRequest) Code() int {
	return 400
}

func (o *GetOpportunitiesGroupsGroupIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetOpportunitiesGroupsGroupIDBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetOpportunitiesGroupsGroupIDBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetOpportunitiesGroupsGroupIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOpportunitiesGroupsGroupIDEnhanceYourCalm creates a GetOpportunitiesGroupsGroupIDEnhanceYourCalm with default headers values
func NewGetOpportunitiesGroupsGroupIDEnhanceYourCalm() *GetOpportunitiesGroupsGroupIDEnhanceYourCalm {
	return &GetOpportunitiesGroupsGroupIDEnhanceYourCalm{}
}

/*
GetOpportunitiesGroupsGroupIDEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetOpportunitiesGroupsGroupIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get opportunities groups group Id enhance your calm response has a 2xx status code
func (o *GetOpportunitiesGroupsGroupIDEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get opportunities groups group Id enhance your calm response has a 3xx status code
func (o *GetOpportunitiesGroupsGroupIDEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get opportunities groups group Id enhance your calm response has a 4xx status code
func (o *GetOpportunitiesGroupsGroupIDEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get opportunities groups group Id enhance your calm response has a 5xx status code
func (o *GetOpportunitiesGroupsGroupIDEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get opportunities groups group Id enhance your calm response a status code equal to that given
func (o *GetOpportunitiesGroupsGroupIDEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get opportunities groups group Id enhance your calm response
func (o *GetOpportunitiesGroupsGroupIDEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetOpportunitiesGroupsGroupIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetOpportunitiesGroupsGroupIDEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetOpportunitiesGroupsGroupIDEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetOpportunitiesGroupsGroupIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOpportunitiesGroupsGroupIDInternalServerError creates a GetOpportunitiesGroupsGroupIDInternalServerError with default headers values
func NewGetOpportunitiesGroupsGroupIDInternalServerError() *GetOpportunitiesGroupsGroupIDInternalServerError {
	return &GetOpportunitiesGroupsGroupIDInternalServerError{}
}

/*
GetOpportunitiesGroupsGroupIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetOpportunitiesGroupsGroupIDInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get opportunities groups group Id internal server error response has a 2xx status code
func (o *GetOpportunitiesGroupsGroupIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get opportunities groups group Id internal server error response has a 3xx status code
func (o *GetOpportunitiesGroupsGroupIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get opportunities groups group Id internal server error response has a 4xx status code
func (o *GetOpportunitiesGroupsGroupIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get opportunities groups group Id internal server error response has a 5xx status code
func (o *GetOpportunitiesGroupsGroupIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get opportunities groups group Id internal server error response a status code equal to that given
func (o *GetOpportunitiesGroupsGroupIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get opportunities groups group Id internal server error response
func (o *GetOpportunitiesGroupsGroupIDInternalServerError) Code() int {
	return 500
}

func (o *GetOpportunitiesGroupsGroupIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOpportunitiesGroupsGroupIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOpportunitiesGroupsGroupIDInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetOpportunitiesGroupsGroupIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOpportunitiesGroupsGroupIDServiceUnavailable creates a GetOpportunitiesGroupsGroupIDServiceUnavailable with default headers values
func NewGetOpportunitiesGroupsGroupIDServiceUnavailable() *GetOpportunitiesGroupsGroupIDServiceUnavailable {
	return &GetOpportunitiesGroupsGroupIDServiceUnavailable{}
}

/*
GetOpportunitiesGroupsGroupIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetOpportunitiesGroupsGroupIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get opportunities groups group Id service unavailable response has a 2xx status code
func (o *GetOpportunitiesGroupsGroupIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get opportunities groups group Id service unavailable response has a 3xx status code
func (o *GetOpportunitiesGroupsGroupIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get opportunities groups group Id service unavailable response has a 4xx status code
func (o *GetOpportunitiesGroupsGroupIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get opportunities groups group Id service unavailable response has a 5xx status code
func (o *GetOpportunitiesGroupsGroupIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get opportunities groups group Id service unavailable response a status code equal to that given
func (o *GetOpportunitiesGroupsGroupIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get opportunities groups group Id service unavailable response
func (o *GetOpportunitiesGroupsGroupIDServiceUnavailable) Code() int {
	return 503
}

func (o *GetOpportunitiesGroupsGroupIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOpportunitiesGroupsGroupIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOpportunitiesGroupsGroupIDServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetOpportunitiesGroupsGroupIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOpportunitiesGroupsGroupIDGatewayTimeout creates a GetOpportunitiesGroupsGroupIDGatewayTimeout with default headers values
func NewGetOpportunitiesGroupsGroupIDGatewayTimeout() *GetOpportunitiesGroupsGroupIDGatewayTimeout {
	return &GetOpportunitiesGroupsGroupIDGatewayTimeout{}
}

/*
GetOpportunitiesGroupsGroupIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetOpportunitiesGroupsGroupIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get opportunities groups group Id gateway timeout response has a 2xx status code
func (o *GetOpportunitiesGroupsGroupIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get opportunities groups group Id gateway timeout response has a 3xx status code
func (o *GetOpportunitiesGroupsGroupIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get opportunities groups group Id gateway timeout response has a 4xx status code
func (o *GetOpportunitiesGroupsGroupIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get opportunities groups group Id gateway timeout response has a 5xx status code
func (o *GetOpportunitiesGroupsGroupIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get opportunities groups group Id gateway timeout response a status code equal to that given
func (o *GetOpportunitiesGroupsGroupIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get opportunities groups group Id gateway timeout response
func (o *GetOpportunitiesGroupsGroupIDGatewayTimeout) Code() int {
	return 504
}

func (o *GetOpportunitiesGroupsGroupIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOpportunitiesGroupsGroupIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/opportunities/groups/{group_id}/][%d] getOpportunitiesGroupsGroupIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetOpportunitiesGroupsGroupIDGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetOpportunitiesGroupsGroupIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetOpportunitiesGroupsGroupIDOKBody get_opportunities_groups_group_id_ok
//
// 200 ok object
swagger:model GetOpportunitiesGroupsGroupIDOKBody
*/
type GetOpportunitiesGroupsGroupIDOKBody struct {

	// get_opportunities_groups_group_id_connected_groups
	//
	// The groups that are connected to this group on the opportunities map
	// Required: true
	// Max Items: 50
	ConnectedGroups []int32 `json:"connected_groups"`

	// get_opportunities_groups_group_id_description
	//
	// description string
	// Required: true
	Description *string `json:"description"`

	// get_opportunities_groups_group_id_group_id
	//
	// group_id integer
	// Required: true
	GroupID *int32 `json:"group_id"`

	// get_opportunities_groups_group_id_name
	//
	// name string
	// Required: true
	Name *string `json:"name"`

	// get_opportunities_groups_group_id_notification
	//
	// notification string
	// Required: true
	Notification *string `json:"notification"`

	// get_opportunities_groups_group_id_required_tasks
	//
	// Tasks need to complete for this group
	// Required: true
	// Max Items: 100
	RequiredTasks []int32 `json:"required_tasks"`
}

// Validate validates this get opportunities groups group ID o k body
func (o *GetOpportunitiesGroupsGroupIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateConnectedGroups(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGroupID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNotification(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRequiredTasks(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOpportunitiesGroupsGroupIDOKBody) validateConnectedGroups(formats strfmt.Registry) error {

	if err := validate.Required("getOpportunitiesGroupsGroupIdOK"+"."+"connected_groups", "body", o.ConnectedGroups); err != nil {
		return err
	}

	iConnectedGroupsSize := int64(len(o.ConnectedGroups))

	if err := validate.MaxItems("getOpportunitiesGroupsGroupIdOK"+"."+"connected_groups", "body", iConnectedGroupsSize, 50); err != nil {
		return err
	}

	return nil
}

func (o *GetOpportunitiesGroupsGroupIDOKBody) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("getOpportunitiesGroupsGroupIdOK"+"."+"description", "body", o.Description); err != nil {
		return err
	}

	return nil
}

func (o *GetOpportunitiesGroupsGroupIDOKBody) validateGroupID(formats strfmt.Registry) error {

	if err := validate.Required("getOpportunitiesGroupsGroupIdOK"+"."+"group_id", "body", o.GroupID); err != nil {
		return err
	}

	return nil
}

func (o *GetOpportunitiesGroupsGroupIDOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("getOpportunitiesGroupsGroupIdOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetOpportunitiesGroupsGroupIDOKBody) validateNotification(formats strfmt.Registry) error {

	if err := validate.Required("getOpportunitiesGroupsGroupIdOK"+"."+"notification", "body", o.Notification); err != nil {
		return err
	}

	return nil
}

func (o *GetOpportunitiesGroupsGroupIDOKBody) validateRequiredTasks(formats strfmt.Registry) error {

	if err := validate.Required("getOpportunitiesGroupsGroupIdOK"+"."+"required_tasks", "body", o.RequiredTasks); err != nil {
		return err
	}

	iRequiredTasksSize := int64(len(o.RequiredTasks))

	if err := validate.MaxItems("getOpportunitiesGroupsGroupIdOK"+"."+"required_tasks", "body", iRequiredTasksSize, 100); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get opportunities groups group ID o k body based on context it is used
func (o *GetOpportunitiesGroupsGroupIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOpportunitiesGroupsGroupIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOpportunitiesGroupsGroupIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetOpportunitiesGroupsGroupIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
