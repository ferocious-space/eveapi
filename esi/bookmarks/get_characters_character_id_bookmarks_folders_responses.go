// Code generated by go-swagger; DO NOT EDIT.

package bookmarks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCharactersCharacterIDBookmarksFoldersReader is a Reader for the GetCharactersCharacterIDBookmarksFolders structure.
type GetCharactersCharacterIDBookmarksFoldersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDBookmarksFoldersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCharactersCharacterIDBookmarksFoldersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCharactersCharacterIDBookmarksFoldersNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCharactersCharacterIDBookmarksFoldersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCharactersCharacterIDBookmarksFoldersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCharactersCharacterIDBookmarksFoldersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCharactersCharacterIDBookmarksFoldersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCharactersCharacterIDBookmarksFoldersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCharactersCharacterIDBookmarksFoldersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCharactersCharacterIDBookmarksFoldersOK creates a GetCharactersCharacterIDBookmarksFoldersOK with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersOK() *GetCharactersCharacterIDBookmarksFoldersOK {
	var (
		// initialize headers with default values
		xPagesDefault = int32(1)
	)

	return &GetCharactersCharacterIDBookmarksFoldersOK{

		XPages: xPagesDefault,
	}
}

/* GetCharactersCharacterIDBookmarksFoldersOK describes a response with status code 200, with default header values.

List of bookmark folders
*/
type GetCharactersCharacterIDBookmarksFoldersOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	/* Maximum page number

	   Format: int32
	   Default: 1
	*/
	XPages int32

	Payload []*GetCharactersCharacterIDBookmarksFoldersOKBodyItems0
}

func (o *GetCharactersCharacterIDBookmarksFoldersOK) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersOK  %+v", 200, o.Payload)
}
func (o *GetCharactersCharacterIDBookmarksFoldersOK) GetPayload() []*GetCharactersCharacterIDBookmarksFoldersOKBodyItems0 {
	return o.Payload
}

func (o *GetCharactersCharacterIDBookmarksFoldersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header X-Pages
	hdrXPages := response.GetHeader("X-Pages")

	if hdrXPages != "" {
		valxPages, err := swag.ConvertInt32(hdrXPages)
		if err != nil {
			return errors.InvalidType("X-Pages", "header", "int32", hdrXPages)
		}
		o.XPages = valxPages
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersNotModified creates a GetCharactersCharacterIDBookmarksFoldersNotModified with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersNotModified() *GetCharactersCharacterIDBookmarksFoldersNotModified {
	return &GetCharactersCharacterIDBookmarksFoldersNotModified{}
}

/* GetCharactersCharacterIDBookmarksFoldersNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCharactersCharacterIDBookmarksFoldersNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDBookmarksFoldersNotModified) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersNotModified ", 304)
}

func (o *GetCharactersCharacterIDBookmarksFoldersNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersBadRequest creates a GetCharactersCharacterIDBookmarksFoldersBadRequest with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersBadRequest() *GetCharactersCharacterIDBookmarksFoldersBadRequest {
	return &GetCharactersCharacterIDBookmarksFoldersBadRequest{}
}

/* GetCharactersCharacterIDBookmarksFoldersBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCharactersCharacterIDBookmarksFoldersBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDBookmarksFoldersBadRequest) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersBadRequest  %+v", 400, o.Payload)
}
func (o *GetCharactersCharacterIDBookmarksFoldersBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCharactersCharacterIDBookmarksFoldersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersUnauthorized creates a GetCharactersCharacterIDBookmarksFoldersUnauthorized with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersUnauthorized() *GetCharactersCharacterIDBookmarksFoldersUnauthorized {
	return &GetCharactersCharacterIDBookmarksFoldersUnauthorized{}
}

/* GetCharactersCharacterIDBookmarksFoldersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCharactersCharacterIDBookmarksFoldersUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDBookmarksFoldersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCharactersCharacterIDBookmarksFoldersUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCharactersCharacterIDBookmarksFoldersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersForbidden creates a GetCharactersCharacterIDBookmarksFoldersForbidden with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersForbidden() *GetCharactersCharacterIDBookmarksFoldersForbidden {
	return &GetCharactersCharacterIDBookmarksFoldersForbidden{}
}

/* GetCharactersCharacterIDBookmarksFoldersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCharactersCharacterIDBookmarksFoldersForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDBookmarksFoldersForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersForbidden  %+v", 403, o.Payload)
}
func (o *GetCharactersCharacterIDBookmarksFoldersForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCharactersCharacterIDBookmarksFoldersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm creates a GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm() *GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm {
	return &GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm{}
}

/* GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersInternalServerError creates a GetCharactersCharacterIDBookmarksFoldersInternalServerError with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersInternalServerError() *GetCharactersCharacterIDBookmarksFoldersInternalServerError {
	return &GetCharactersCharacterIDBookmarksFoldersInternalServerError{}
}

/* GetCharactersCharacterIDBookmarksFoldersInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCharactersCharacterIDBookmarksFoldersInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDBookmarksFoldersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCharactersCharacterIDBookmarksFoldersInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCharactersCharacterIDBookmarksFoldersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersServiceUnavailable creates a GetCharactersCharacterIDBookmarksFoldersServiceUnavailable with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersServiceUnavailable() *GetCharactersCharacterIDBookmarksFoldersServiceUnavailable {
	return &GetCharactersCharacterIDBookmarksFoldersServiceUnavailable{}
}

/* GetCharactersCharacterIDBookmarksFoldersServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCharactersCharacterIDBookmarksFoldersServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDBookmarksFoldersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetCharactersCharacterIDBookmarksFoldersServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCharactersCharacterIDBookmarksFoldersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersGatewayTimeout creates a GetCharactersCharacterIDBookmarksFoldersGatewayTimeout with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersGatewayTimeout() *GetCharactersCharacterIDBookmarksFoldersGatewayTimeout {
	return &GetCharactersCharacterIDBookmarksFoldersGatewayTimeout{}
}

/* GetCharactersCharacterIDBookmarksFoldersGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDBookmarksFoldersGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDBookmarksFoldersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetCharactersCharacterIDBookmarksFoldersGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCharactersCharacterIDBookmarksFoldersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDBookmarksFoldersOKBodyItems0 get_characters_character_id_bookmarks_folders_200_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDBookmarksFoldersOKBodyItems0
*/
type GetCharactersCharacterIDBookmarksFoldersOKBodyItems0 struct {

	// get_characters_character_id_bookmarks_folders_folder_id
	//
	// folder_id integer
	// Required: true
	FolderID *int32 `json:"folder_id"`

	// get_characters_character_id_bookmarks_folders_name
	//
	// name string
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this get characters character ID bookmarks folders o k body items0
func (o *GetCharactersCharacterIDBookmarksFoldersOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFolderID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDBookmarksFoldersOKBodyItems0) validateFolderID(formats strfmt.Registry) error {

	if err := validate.Required("folder_id", "body", o.FolderID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDBookmarksFoldersOKBodyItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID bookmarks folders o k body items0 based on context it is used
func (o *GetCharactersCharacterIDBookmarksFoldersOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDBookmarksFoldersOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDBookmarksFoldersOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDBookmarksFoldersOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
