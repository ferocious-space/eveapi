// Code generated by go-swagger; DO NOT EDIT.

package bookmarks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCorporationsCorporationIDBookmarksReader is a Reader for the GetCorporationsCorporationIDBookmarks structure.
type GetCorporationsCorporationIDBookmarksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDBookmarksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCorporationsCorporationIDBookmarksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCorporationsCorporationIDBookmarksNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCorporationsCorporationIDBookmarksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCorporationsCorporationIDBookmarksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCorporationsCorporationIDBookmarksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCorporationsCorporationIDBookmarksEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCorporationsCorporationIDBookmarksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCorporationsCorporationIDBookmarksServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCorporationsCorporationIDBookmarksGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDBookmarksOK creates a GetCorporationsCorporationIDBookmarksOK with default headers values
func NewGetCorporationsCorporationIDBookmarksOK() *GetCorporationsCorporationIDBookmarksOK {
	var (
		// initialize headers with default values
		xPagesDefault = int32(1)
	)

	return &GetCorporationsCorporationIDBookmarksOK{

		XPages: xPagesDefault,
	}
}

/* GetCorporationsCorporationIDBookmarksOK describes a response with status code 200, with default header values.

List of corporation owned bookmarks
*/
type GetCorporationsCorporationIDBookmarksOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	/* Maximum page number

	   Format: int32
	   Default: 1
	*/
	XPages int32

	Payload []*GetCorporationsCorporationIDBookmarksOKBodyItems0
}

func (o *GetCorporationsCorporationIDBookmarksOK) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/bookmarks/][%d] getCorporationsCorporationIdBookmarksOK  %+v", 200, o.Payload)
}
func (o *GetCorporationsCorporationIDBookmarksOK) GetPayload() []*GetCorporationsCorporationIDBookmarksOKBodyItems0 {
	return o.Payload
}

func (o *GetCorporationsCorporationIDBookmarksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header X-Pages
	hdrXPages := response.GetHeader("X-Pages")

	if hdrXPages != "" {
		valxPages, err := swag.ConvertInt32(hdrXPages)
		if err != nil {
			return errors.InvalidType("X-Pages", "header", "int32", hdrXPages)
		}
		o.XPages = valxPages
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksNotModified creates a GetCorporationsCorporationIDBookmarksNotModified with default headers values
func NewGetCorporationsCorporationIDBookmarksNotModified() *GetCorporationsCorporationIDBookmarksNotModified {
	return &GetCorporationsCorporationIDBookmarksNotModified{}
}

/* GetCorporationsCorporationIDBookmarksNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCorporationsCorporationIDBookmarksNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationsCorporationIDBookmarksNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/bookmarks/][%d] getCorporationsCorporationIdBookmarksNotModified ", 304)
}

func (o *GetCorporationsCorporationIDBookmarksNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksBadRequest creates a GetCorporationsCorporationIDBookmarksBadRequest with default headers values
func NewGetCorporationsCorporationIDBookmarksBadRequest() *GetCorporationsCorporationIDBookmarksBadRequest {
	return &GetCorporationsCorporationIDBookmarksBadRequest{}
}

/* GetCorporationsCorporationIDBookmarksBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCorporationsCorporationIDBookmarksBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationsCorporationIDBookmarksBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/bookmarks/][%d] getCorporationsCorporationIdBookmarksBadRequest  %+v", 400, o.Payload)
}
func (o *GetCorporationsCorporationIDBookmarksBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCorporationsCorporationIDBookmarksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksUnauthorized creates a GetCorporationsCorporationIDBookmarksUnauthorized with default headers values
func NewGetCorporationsCorporationIDBookmarksUnauthorized() *GetCorporationsCorporationIDBookmarksUnauthorized {
	return &GetCorporationsCorporationIDBookmarksUnauthorized{}
}

/* GetCorporationsCorporationIDBookmarksUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDBookmarksUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCorporationsCorporationIDBookmarksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/bookmarks/][%d] getCorporationsCorporationIdBookmarksUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCorporationsCorporationIDBookmarksUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCorporationsCorporationIDBookmarksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksForbidden creates a GetCorporationsCorporationIDBookmarksForbidden with default headers values
func NewGetCorporationsCorporationIDBookmarksForbidden() *GetCorporationsCorporationIDBookmarksForbidden {
	return &GetCorporationsCorporationIDBookmarksForbidden{}
}

/* GetCorporationsCorporationIDBookmarksForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCorporationsCorporationIDBookmarksForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCorporationsCorporationIDBookmarksForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/bookmarks/][%d] getCorporationsCorporationIdBookmarksForbidden  %+v", 403, o.Payload)
}
func (o *GetCorporationsCorporationIDBookmarksForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCorporationsCorporationIDBookmarksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksEnhanceYourCalm creates a GetCorporationsCorporationIDBookmarksEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDBookmarksEnhanceYourCalm() *GetCorporationsCorporationIDBookmarksEnhanceYourCalm {
	return &GetCorporationsCorporationIDBookmarksEnhanceYourCalm{}
}

/* GetCorporationsCorporationIDBookmarksEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCorporationsCorporationIDBookmarksEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationsCorporationIDBookmarksEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/bookmarks/][%d] getCorporationsCorporationIdBookmarksEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetCorporationsCorporationIDBookmarksEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCorporationsCorporationIDBookmarksEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksInternalServerError creates a GetCorporationsCorporationIDBookmarksInternalServerError with default headers values
func NewGetCorporationsCorporationIDBookmarksInternalServerError() *GetCorporationsCorporationIDBookmarksInternalServerError {
	return &GetCorporationsCorporationIDBookmarksInternalServerError{}
}

/* GetCorporationsCorporationIDBookmarksInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCorporationsCorporationIDBookmarksInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationsCorporationIDBookmarksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/bookmarks/][%d] getCorporationsCorporationIdBookmarksInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCorporationsCorporationIDBookmarksInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCorporationsCorporationIDBookmarksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksServiceUnavailable creates a GetCorporationsCorporationIDBookmarksServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDBookmarksServiceUnavailable() *GetCorporationsCorporationIDBookmarksServiceUnavailable {
	return &GetCorporationsCorporationIDBookmarksServiceUnavailable{}
}

/* GetCorporationsCorporationIDBookmarksServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDBookmarksServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationsCorporationIDBookmarksServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/bookmarks/][%d] getCorporationsCorporationIdBookmarksServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetCorporationsCorporationIDBookmarksServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCorporationsCorporationIDBookmarksServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksGatewayTimeout creates a GetCorporationsCorporationIDBookmarksGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDBookmarksGatewayTimeout() *GetCorporationsCorporationIDBookmarksGatewayTimeout {
	return &GetCorporationsCorporationIDBookmarksGatewayTimeout{}
}

/* GetCorporationsCorporationIDBookmarksGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDBookmarksGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationsCorporationIDBookmarksGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/bookmarks/][%d] getCorporationsCorporationIdBookmarksGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetCorporationsCorporationIDBookmarksGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCorporationsCorporationIDBookmarksGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCorporationsCorporationIDBookmarksOKBodyItems0 get_corporations_corporation_id_bookmarks_200_ok
//
// 200 ok object
swagger:model GetCorporationsCorporationIDBookmarksOKBodyItems0
*/
type GetCorporationsCorporationIDBookmarksOKBodyItems0 struct {

	// get_corporations_corporation_id_bookmarks_bookmark_id
	//
	// bookmark_id integer
	// Required: true
	BookmarkID *int32 `json:"bookmark_id"`

	// coordinates
	Coordinates *GetCorporationsCorporationIDBookmarksOKBodyItems0Coordinates `json:"coordinates,omitempty"`

	// get_corporations_corporation_id_bookmarks_created
	//
	// created string
	// Required: true
	// Format: date-time
	Created *strfmt.DateTime `json:"created"`

	// get_corporations_corporation_id_bookmarks_creator_id
	//
	// creator_id integer
	// Required: true
	CreatorID *int32 `json:"creator_id"`

	// get_corporations_corporation_id_bookmarks_folder_id
	//
	// folder_id integer
	FolderID int32 `json:"folder_id,omitempty"`

	// item
	Item *GetCorporationsCorporationIDBookmarksOKBodyItems0Item `json:"item,omitempty"`

	// get_corporations_corporation_id_bookmarks_label
	//
	// label string
	// Required: true
	Label *string `json:"label"`

	// get_corporations_corporation_id_bookmarks_location_id
	//
	// location_id integer
	// Required: true
	LocationID *int32 `json:"location_id"`

	// get_corporations_corporation_id_bookmarks_notes
	//
	// notes string
	// Required: true
	Notes *string `json:"notes"`
}

// Validate validates this get corporations corporation ID bookmarks o k body items0
func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBookmarkID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCoordinates(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreated(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatorID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateItem(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocationID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNotes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) validateBookmarkID(formats strfmt.Registry) error {

	if err := validate.Required("bookmark_id", "body", o.BookmarkID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) validateCoordinates(formats strfmt.Registry) error {
	if swag.IsZero(o.Coordinates) { // not required
		return nil
	}

	if o.Coordinates != nil {
		if err := o.Coordinates.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("coordinates")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("coordinates")
			}
			return err
		}
	}

	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) validateCreated(formats strfmt.Registry) error {

	if err := validate.Required("created", "body", o.Created); err != nil {
		return err
	}

	if err := validate.FormatOf("created", "body", "date-time", o.Created.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) validateCreatorID(formats strfmt.Registry) error {

	if err := validate.Required("creator_id", "body", o.CreatorID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) validateItem(formats strfmt.Registry) error {
	if swag.IsZero(o.Item) { // not required
		return nil
	}

	if o.Item != nil {
		if err := o.Item.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("item")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("item")
			}
			return err
		}
	}

	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) validateLabel(formats strfmt.Registry) error {

	if err := validate.Required("label", "body", o.Label); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) validateLocationID(formats strfmt.Registry) error {

	if err := validate.Required("location_id", "body", o.LocationID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) validateNotes(formats strfmt.Registry) error {

	if err := validate.Required("notes", "body", o.Notes); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this get corporations corporation ID bookmarks o k body items0 based on the context it is used
func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCoordinates(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateItem(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) contextValidateCoordinates(ctx context.Context, formats strfmt.Registry) error {

	if o.Coordinates != nil {
		if err := o.Coordinates.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("coordinates")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("coordinates")
			}
			return err
		}
	}

	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) contextValidateItem(ctx context.Context, formats strfmt.Registry) error {

	if o.Item != nil {
		if err := o.Item.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("item")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("item")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDBookmarksOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCorporationsCorporationIDBookmarksOKBodyItems0Coordinates get_corporations_corporation_id_bookmarks_coordinates
//
// Optional object that is returned if a bookmark was made on a planet or a random location in space.
swagger:model GetCorporationsCorporationIDBookmarksOKBodyItems0Coordinates
*/
type GetCorporationsCorporationIDBookmarksOKBodyItems0Coordinates struct {

	// get_corporations_corporation_id_bookmarks_x
	//
	// x number
	// Required: true
	X *float64 `json:"x"`

	// get_corporations_corporation_id_bookmarks_y
	//
	// y number
	// Required: true
	Y *float64 `json:"y"`

	// get_corporations_corporation_id_bookmarks_z
	//
	// z number
	// Required: true
	Z *float64 `json:"z"`
}

// Validate validates this get corporations corporation ID bookmarks o k body items0 coordinates
func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Coordinates) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateX(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateY(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateZ(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Coordinates) validateX(formats strfmt.Registry) error {

	if err := validate.Required("coordinates"+"."+"x", "body", o.X); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Coordinates) validateY(formats strfmt.Registry) error {

	if err := validate.Required("coordinates"+"."+"y", "body", o.Y); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Coordinates) validateZ(formats strfmt.Registry) error {

	if err := validate.Required("coordinates"+"."+"z", "body", o.Z); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get corporations corporation ID bookmarks o k body items0 coordinates based on context it is used
func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Coordinates) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Coordinates) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Coordinates) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDBookmarksOKBodyItems0Coordinates
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCorporationsCorporationIDBookmarksOKBodyItems0Item get_corporations_corporation_id_bookmarks_item
//
// Optional object that is returned if a bookmark was made on a particular item.
swagger:model GetCorporationsCorporationIDBookmarksOKBodyItems0Item
*/
type GetCorporationsCorporationIDBookmarksOKBodyItems0Item struct {

	// get_corporations_corporation_id_bookmarks_item_id
	//
	// item_id integer
	// Required: true
	ItemID *int64 `json:"item_id"`

	// get_corporations_corporation_id_bookmarks_type_id
	//
	// type_id integer
	// Required: true
	TypeID *int32 `json:"type_id"`
}

// Validate validates this get corporations corporation ID bookmarks o k body items0 item
func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Item) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItemID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTypeID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Item) validateItemID(formats strfmt.Registry) error {

	if err := validate.Required("item"+"."+"item_id", "body", o.ItemID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Item) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("item"+"."+"type_id", "body", o.TypeID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get corporations corporation ID bookmarks o k body items0 item based on context it is used
func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Item) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Item) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDBookmarksOKBodyItems0Item) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDBookmarksOKBodyItems0Item
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
