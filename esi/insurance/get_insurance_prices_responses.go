// Code generated by go-swagger; DO NOT EDIT.

package insurance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetInsurancePricesReader is a Reader for the GetInsurancePrices structure.
type GetInsurancePricesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInsurancePricesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInsurancePricesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetInsurancePricesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetInsurancePricesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetInsurancePricesEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInsurancePricesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetInsurancePricesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetInsurancePricesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetInsurancePricesOK creates a GetInsurancePricesOK with default headers values
func NewGetInsurancePricesOK() *GetInsurancePricesOK {
	return &GetInsurancePricesOK{}
}

/* GetInsurancePricesOK describes a response with status code 200, with default header values.

A list of insurance levels for all ship types
*/
type GetInsurancePricesOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* The language used in the response
	 */
	ContentLanguage string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetInsurancePricesOKBodyItems0
}

func (o *GetInsurancePricesOK) Error() string {
	return fmt.Sprintf("[GET /v1/insurance/prices/][%d] getInsurancePricesOK  %+v", 200, o.Payload)
}
func (o *GetInsurancePricesOK) GetPayload() []*GetInsurancePricesOKBodyItems0 {
	return o.Payload
}

func (o *GetInsurancePricesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header Content-Language
	hdrContentLanguage := response.GetHeader("Content-Language")

	if hdrContentLanguage != "" {
		o.ContentLanguage = hdrContentLanguage
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsurancePricesNotModified creates a GetInsurancePricesNotModified with default headers values
func NewGetInsurancePricesNotModified() *GetInsurancePricesNotModified {
	return &GetInsurancePricesNotModified{}
}

/* GetInsurancePricesNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetInsurancePricesNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetInsurancePricesNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/insurance/prices/][%d] getInsurancePricesNotModified ", 304)
}

func (o *GetInsurancePricesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetInsurancePricesBadRequest creates a GetInsurancePricesBadRequest with default headers values
func NewGetInsurancePricesBadRequest() *GetInsurancePricesBadRequest {
	return &GetInsurancePricesBadRequest{}
}

/* GetInsurancePricesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetInsurancePricesBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetInsurancePricesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/insurance/prices/][%d] getInsurancePricesBadRequest  %+v", 400, o.Payload)
}
func (o *GetInsurancePricesBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetInsurancePricesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsurancePricesEnhanceYourCalm creates a GetInsurancePricesEnhanceYourCalm with default headers values
func NewGetInsurancePricesEnhanceYourCalm() *GetInsurancePricesEnhanceYourCalm {
	return &GetInsurancePricesEnhanceYourCalm{}
}

/* GetInsurancePricesEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetInsurancePricesEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetInsurancePricesEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/insurance/prices/][%d] getInsurancePricesEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetInsurancePricesEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetInsurancePricesEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsurancePricesInternalServerError creates a GetInsurancePricesInternalServerError with default headers values
func NewGetInsurancePricesInternalServerError() *GetInsurancePricesInternalServerError {
	return &GetInsurancePricesInternalServerError{}
}

/* GetInsurancePricesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetInsurancePricesInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetInsurancePricesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/insurance/prices/][%d] getInsurancePricesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetInsurancePricesInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetInsurancePricesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsurancePricesServiceUnavailable creates a GetInsurancePricesServiceUnavailable with default headers values
func NewGetInsurancePricesServiceUnavailable() *GetInsurancePricesServiceUnavailable {
	return &GetInsurancePricesServiceUnavailable{}
}

/* GetInsurancePricesServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetInsurancePricesServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetInsurancePricesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/insurance/prices/][%d] getInsurancePricesServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetInsurancePricesServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetInsurancePricesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsurancePricesGatewayTimeout creates a GetInsurancePricesGatewayTimeout with default headers values
func NewGetInsurancePricesGatewayTimeout() *GetInsurancePricesGatewayTimeout {
	return &GetInsurancePricesGatewayTimeout{}
}

/* GetInsurancePricesGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetInsurancePricesGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetInsurancePricesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/insurance/prices/][%d] getInsurancePricesGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetInsurancePricesGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetInsurancePricesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetInsurancePricesOKBodyItems0 get_insurance_prices_200_ok
//
// 200 ok object
swagger:model GetInsurancePricesOKBodyItems0
*/
type GetInsurancePricesOKBodyItems0 struct {

	// get_insurance_prices_levels
	//
	// A list of a available insurance levels for this ship type
	// Required: true
	// Max Items: 6
	Levels []*GetInsurancePricesOKBodyItems0LevelsItems0 `json:"levels"`

	// get_insurance_prices_type_id
	//
	// type_id integer
	// Required: true
	TypeID *int32 `json:"type_id"`
}

// Validate validates this get insurance prices o k body items0
func (o *GetInsurancePricesOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLevels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTypeID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetInsurancePricesOKBodyItems0) validateLevels(formats strfmt.Registry) error {

	if err := validate.Required("levels", "body", o.Levels); err != nil {
		return err
	}

	iLevelsSize := int64(len(o.Levels))

	if err := validate.MaxItems("levels", "body", iLevelsSize, 6); err != nil {
		return err
	}

	for i := 0; i < len(o.Levels); i++ {
		if swag.IsZero(o.Levels[i]) { // not required
			continue
		}

		if o.Levels[i] != nil {
			if err := o.Levels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("levels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetInsurancePricesOKBodyItems0) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("type_id", "body", o.TypeID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this get insurance prices o k body items0 based on the context it is used
func (o *GetInsurancePricesOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLevels(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetInsurancePricesOKBodyItems0) contextValidateLevels(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Levels); i++ {

		if o.Levels[i] != nil {
			if err := o.Levels[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("levels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetInsurancePricesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetInsurancePricesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetInsurancePricesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetInsurancePricesOKBodyItems0LevelsItems0 get_insurance_prices_level
//
// level object
swagger:model GetInsurancePricesOKBodyItems0LevelsItems0
*/
type GetInsurancePricesOKBodyItems0LevelsItems0 struct {

	// get_insurance_prices_cost
	//
	// cost number
	// Required: true
	Cost *float32 `json:"cost"`

	// get_insurance_prices_name
	//
	// Localized insurance level
	// Required: true
	Name *string `json:"name"`

	// get_insurance_prices_payout
	//
	// payout number
	// Required: true
	Payout *float32 `json:"payout"`
}

// Validate validates this get insurance prices o k body items0 levels items0
func (o *GetInsurancePricesOKBodyItems0LevelsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCost(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePayout(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetInsurancePricesOKBodyItems0LevelsItems0) validateCost(formats strfmt.Registry) error {

	if err := validate.Required("cost", "body", o.Cost); err != nil {
		return err
	}

	return nil
}

func (o *GetInsurancePricesOKBodyItems0LevelsItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetInsurancePricesOKBodyItems0LevelsItems0) validatePayout(formats strfmt.Registry) error {

	if err := validate.Required("payout", "body", o.Payout); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get insurance prices o k body items0 levels items0 based on context it is used
func (o *GetInsurancePricesOKBodyItems0LevelsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetInsurancePricesOKBodyItems0LevelsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetInsurancePricesOKBodyItems0LevelsItems0) UnmarshalBinary(b []byte) error {
	var res GetInsurancePricesOKBodyItems0LevelsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
