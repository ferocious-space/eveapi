// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetMarketsRegionIDOrdersReader is a Reader for the GetMarketsRegionIDOrders structure.
type GetMarketsRegionIDOrdersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMarketsRegionIDOrdersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMarketsRegionIDOrdersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetMarketsRegionIDOrdersNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetMarketsRegionIDOrdersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMarketsRegionIDOrdersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetMarketsRegionIDOrdersEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetMarketsRegionIDOrdersUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMarketsRegionIDOrdersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetMarketsRegionIDOrdersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetMarketsRegionIDOrdersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetMarketsRegionIDOrdersOK creates a GetMarketsRegionIDOrdersOK with default headers values
func NewGetMarketsRegionIDOrdersOK() *GetMarketsRegionIDOrdersOK {
	var (
		// initialize headers with default values
		xPagesDefault = int32(1)
	)

	return &GetMarketsRegionIDOrdersOK{

		XPages: xPagesDefault,
	}
}

/*
GetMarketsRegionIDOrdersOK describes a response with status code 200, with default header values.

A list of orders
*/
type GetMarketsRegionIDOrdersOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	/* Maximum page number

	   Format: int32
	   Default: 1
	*/
	XPages int32

	Payload []*GetMarketsRegionIDOrdersOKBodyItems0
}

// IsSuccess returns true when this get markets region Id orders o k response has a 2xx status code
func (o *GetMarketsRegionIDOrdersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get markets region Id orders o k response has a 3xx status code
func (o *GetMarketsRegionIDOrdersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id orders o k response has a 4xx status code
func (o *GetMarketsRegionIDOrdersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get markets region Id orders o k response has a 5xx status code
func (o *GetMarketsRegionIDOrdersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get markets region Id orders o k response a status code equal to that given
func (o *GetMarketsRegionIDOrdersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get markets region Id orders o k response
func (o *GetMarketsRegionIDOrdersOK) Code() int {
	return 200
}

func (o *GetMarketsRegionIDOrdersOK) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersOK  %+v", 200, o.Payload)
}

func (o *GetMarketsRegionIDOrdersOK) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersOK  %+v", 200, o.Payload)
}

func (o *GetMarketsRegionIDOrdersOK) GetPayload() []*GetMarketsRegionIDOrdersOKBodyItems0 {
	return o.Payload
}

func (o *GetMarketsRegionIDOrdersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header X-Pages
	hdrXPages := response.GetHeader("X-Pages")

	if hdrXPages != "" {
		valxPages, err := swag.ConvertInt32(hdrXPages)
		if err != nil {
			return errors.InvalidType("X-Pages", "header", "int32", hdrXPages)
		}
		o.XPages = valxPages
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersNotModified creates a GetMarketsRegionIDOrdersNotModified with default headers values
func NewGetMarketsRegionIDOrdersNotModified() *GetMarketsRegionIDOrdersNotModified {
	return &GetMarketsRegionIDOrdersNotModified{}
}

/*
GetMarketsRegionIDOrdersNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetMarketsRegionIDOrdersNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get markets region Id orders not modified response has a 2xx status code
func (o *GetMarketsRegionIDOrdersNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id orders not modified response has a 3xx status code
func (o *GetMarketsRegionIDOrdersNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get markets region Id orders not modified response has a 4xx status code
func (o *GetMarketsRegionIDOrdersNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get markets region Id orders not modified response has a 5xx status code
func (o *GetMarketsRegionIDOrdersNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get markets region Id orders not modified response a status code equal to that given
func (o *GetMarketsRegionIDOrdersNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get markets region Id orders not modified response
func (o *GetMarketsRegionIDOrdersNotModified) Code() int {
	return 304
}

func (o *GetMarketsRegionIDOrdersNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersNotModified ", 304)
}

func (o *GetMarketsRegionIDOrdersNotModified) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersNotModified ", 304)
}

func (o *GetMarketsRegionIDOrdersNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetMarketsRegionIDOrdersBadRequest creates a GetMarketsRegionIDOrdersBadRequest with default headers values
func NewGetMarketsRegionIDOrdersBadRequest() *GetMarketsRegionIDOrdersBadRequest {
	return &GetMarketsRegionIDOrdersBadRequest{}
}

/*
GetMarketsRegionIDOrdersBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetMarketsRegionIDOrdersBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get markets region Id orders bad request response has a 2xx status code
func (o *GetMarketsRegionIDOrdersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id orders bad request response has a 3xx status code
func (o *GetMarketsRegionIDOrdersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id orders bad request response has a 4xx status code
func (o *GetMarketsRegionIDOrdersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get markets region Id orders bad request response has a 5xx status code
func (o *GetMarketsRegionIDOrdersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get markets region Id orders bad request response a status code equal to that given
func (o *GetMarketsRegionIDOrdersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get markets region Id orders bad request response
func (o *GetMarketsRegionIDOrdersBadRequest) Code() int {
	return 400
}

func (o *GetMarketsRegionIDOrdersBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersBadRequest  %+v", 400, o.Payload)
}

func (o *GetMarketsRegionIDOrdersBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersBadRequest  %+v", 400, o.Payload)
}

func (o *GetMarketsRegionIDOrdersBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetMarketsRegionIDOrdersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersNotFound creates a GetMarketsRegionIDOrdersNotFound with default headers values
func NewGetMarketsRegionIDOrdersNotFound() *GetMarketsRegionIDOrdersNotFound {
	return &GetMarketsRegionIDOrdersNotFound{}
}

/*
GetMarketsRegionIDOrdersNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetMarketsRegionIDOrdersNotFound struct {
	Payload *GetMarketsRegionIDOrdersNotFoundBody
}

// IsSuccess returns true when this get markets region Id orders not found response has a 2xx status code
func (o *GetMarketsRegionIDOrdersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id orders not found response has a 3xx status code
func (o *GetMarketsRegionIDOrdersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id orders not found response has a 4xx status code
func (o *GetMarketsRegionIDOrdersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get markets region Id orders not found response has a 5xx status code
func (o *GetMarketsRegionIDOrdersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get markets region Id orders not found response a status code equal to that given
func (o *GetMarketsRegionIDOrdersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get markets region Id orders not found response
func (o *GetMarketsRegionIDOrdersNotFound) Code() int {
	return 404
}

func (o *GetMarketsRegionIDOrdersNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersNotFound  %+v", 404, o.Payload)
}

func (o *GetMarketsRegionIDOrdersNotFound) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersNotFound  %+v", 404, o.Payload)
}

func (o *GetMarketsRegionIDOrdersNotFound) GetPayload() *GetMarketsRegionIDOrdersNotFoundBody {
	return o.Payload
}

func (o *GetMarketsRegionIDOrdersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetMarketsRegionIDOrdersNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersEnhanceYourCalm creates a GetMarketsRegionIDOrdersEnhanceYourCalm with default headers values
func NewGetMarketsRegionIDOrdersEnhanceYourCalm() *GetMarketsRegionIDOrdersEnhanceYourCalm {
	return &GetMarketsRegionIDOrdersEnhanceYourCalm{}
}

/*
GetMarketsRegionIDOrdersEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetMarketsRegionIDOrdersEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get markets region Id orders enhance your calm response has a 2xx status code
func (o *GetMarketsRegionIDOrdersEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id orders enhance your calm response has a 3xx status code
func (o *GetMarketsRegionIDOrdersEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id orders enhance your calm response has a 4xx status code
func (o *GetMarketsRegionIDOrdersEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get markets region Id orders enhance your calm response has a 5xx status code
func (o *GetMarketsRegionIDOrdersEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get markets region Id orders enhance your calm response a status code equal to that given
func (o *GetMarketsRegionIDOrdersEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get markets region Id orders enhance your calm response
func (o *GetMarketsRegionIDOrdersEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetMarketsRegionIDOrdersEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetMarketsRegionIDOrdersEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetMarketsRegionIDOrdersEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetMarketsRegionIDOrdersEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersUnprocessableEntity creates a GetMarketsRegionIDOrdersUnprocessableEntity with default headers values
func NewGetMarketsRegionIDOrdersUnprocessableEntity() *GetMarketsRegionIDOrdersUnprocessableEntity {
	return &GetMarketsRegionIDOrdersUnprocessableEntity{}
}

/*
GetMarketsRegionIDOrdersUnprocessableEntity describes a response with status code 422, with default header values.

Not found
*/
type GetMarketsRegionIDOrdersUnprocessableEntity struct {
	Payload *GetMarketsRegionIDOrdersUnprocessableEntityBody
}

// IsSuccess returns true when this get markets region Id orders unprocessable entity response has a 2xx status code
func (o *GetMarketsRegionIDOrdersUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id orders unprocessable entity response has a 3xx status code
func (o *GetMarketsRegionIDOrdersUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id orders unprocessable entity response has a 4xx status code
func (o *GetMarketsRegionIDOrdersUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get markets region Id orders unprocessable entity response has a 5xx status code
func (o *GetMarketsRegionIDOrdersUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get markets region Id orders unprocessable entity response a status code equal to that given
func (o *GetMarketsRegionIDOrdersUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get markets region Id orders unprocessable entity response
func (o *GetMarketsRegionIDOrdersUnprocessableEntity) Code() int {
	return 422
}

func (o *GetMarketsRegionIDOrdersUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetMarketsRegionIDOrdersUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetMarketsRegionIDOrdersUnprocessableEntity) GetPayload() *GetMarketsRegionIDOrdersUnprocessableEntityBody {
	return o.Payload
}

func (o *GetMarketsRegionIDOrdersUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetMarketsRegionIDOrdersUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersInternalServerError creates a GetMarketsRegionIDOrdersInternalServerError with default headers values
func NewGetMarketsRegionIDOrdersInternalServerError() *GetMarketsRegionIDOrdersInternalServerError {
	return &GetMarketsRegionIDOrdersInternalServerError{}
}

/*
GetMarketsRegionIDOrdersInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetMarketsRegionIDOrdersInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get markets region Id orders internal server error response has a 2xx status code
func (o *GetMarketsRegionIDOrdersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id orders internal server error response has a 3xx status code
func (o *GetMarketsRegionIDOrdersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id orders internal server error response has a 4xx status code
func (o *GetMarketsRegionIDOrdersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get markets region Id orders internal server error response has a 5xx status code
func (o *GetMarketsRegionIDOrdersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get markets region Id orders internal server error response a status code equal to that given
func (o *GetMarketsRegionIDOrdersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get markets region Id orders internal server error response
func (o *GetMarketsRegionIDOrdersInternalServerError) Code() int {
	return 500
}

func (o *GetMarketsRegionIDOrdersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMarketsRegionIDOrdersInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMarketsRegionIDOrdersInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetMarketsRegionIDOrdersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersServiceUnavailable creates a GetMarketsRegionIDOrdersServiceUnavailable with default headers values
func NewGetMarketsRegionIDOrdersServiceUnavailable() *GetMarketsRegionIDOrdersServiceUnavailable {
	return &GetMarketsRegionIDOrdersServiceUnavailable{}
}

/*
GetMarketsRegionIDOrdersServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetMarketsRegionIDOrdersServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get markets region Id orders service unavailable response has a 2xx status code
func (o *GetMarketsRegionIDOrdersServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id orders service unavailable response has a 3xx status code
func (o *GetMarketsRegionIDOrdersServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id orders service unavailable response has a 4xx status code
func (o *GetMarketsRegionIDOrdersServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get markets region Id orders service unavailable response has a 5xx status code
func (o *GetMarketsRegionIDOrdersServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get markets region Id orders service unavailable response a status code equal to that given
func (o *GetMarketsRegionIDOrdersServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get markets region Id orders service unavailable response
func (o *GetMarketsRegionIDOrdersServiceUnavailable) Code() int {
	return 503
}

func (o *GetMarketsRegionIDOrdersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetMarketsRegionIDOrdersServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetMarketsRegionIDOrdersServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetMarketsRegionIDOrdersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersGatewayTimeout creates a GetMarketsRegionIDOrdersGatewayTimeout with default headers values
func NewGetMarketsRegionIDOrdersGatewayTimeout() *GetMarketsRegionIDOrdersGatewayTimeout {
	return &GetMarketsRegionIDOrdersGatewayTimeout{}
}

/*
GetMarketsRegionIDOrdersGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetMarketsRegionIDOrdersGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get markets region Id orders gateway timeout response has a 2xx status code
func (o *GetMarketsRegionIDOrdersGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id orders gateway timeout response has a 3xx status code
func (o *GetMarketsRegionIDOrdersGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id orders gateway timeout response has a 4xx status code
func (o *GetMarketsRegionIDOrdersGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get markets region Id orders gateway timeout response has a 5xx status code
func (o *GetMarketsRegionIDOrdersGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get markets region Id orders gateway timeout response a status code equal to that given
func (o *GetMarketsRegionIDOrdersGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get markets region Id orders gateway timeout response
func (o *GetMarketsRegionIDOrdersGatewayTimeout) Code() int {
	return 504
}

func (o *GetMarketsRegionIDOrdersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetMarketsRegionIDOrdersGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetMarketsRegionIDOrdersGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetMarketsRegionIDOrdersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetMarketsRegionIDOrdersNotFoundBody get_markets_region_id_orders_not_found
//
// Not found
swagger:model GetMarketsRegionIDOrdersNotFoundBody
*/
type GetMarketsRegionIDOrdersNotFoundBody struct {

	// get_markets_region_id_orders_404_not_found
	//
	// Not found message
	Error string `json:"error,omitempty"`
}

// Validate validates this get markets region ID orders not found body
func (o *GetMarketsRegionIDOrdersNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get markets region ID orders not found body based on context it is used
func (o *GetMarketsRegionIDOrdersNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetMarketsRegionIDOrdersNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMarketsRegionIDOrdersNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetMarketsRegionIDOrdersNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetMarketsRegionIDOrdersOKBodyItems0 get_markets_region_id_orders_200_ok
//
// 200 ok object
swagger:model GetMarketsRegionIDOrdersOKBodyItems0
*/
type GetMarketsRegionIDOrdersOKBodyItems0 struct {

	// get_markets_region_id_orders_duration
	//
	// duration integer
	// Required: true
	Duration *int32 `json:"duration"`

	// get_markets_region_id_orders_is_buy_order
	//
	// is_buy_order boolean
	// Required: true
	IsBuyOrder *bool `json:"is_buy_order"`

	// get_markets_region_id_orders_issued
	//
	// issued string
	// Required: true
	// Format: date-time
	Issued *strfmt.DateTime `json:"issued"`

	// get_markets_region_id_orders_location_id
	//
	// location_id integer
	// Required: true
	LocationID *int64 `json:"location_id"`

	// get_markets_region_id_orders_min_volume
	//
	// min_volume integer
	// Required: true
	MinVolume *int32 `json:"min_volume"`

	// get_markets_region_id_orders_order_id
	//
	// order_id integer
	// Required: true
	OrderID *int64 `json:"order_id"`

	// get_markets_region_id_orders_price
	//
	// price number
	// Required: true
	Price *float64 `json:"price"`

	// get_markets_region_id_orders_range
	//
	// range string
	// Required: true
	// Enum: [station region solarsystem 1 2 3 4 5 10 20 30 40]
	Range *string `json:"range"`

	// get_markets_region_id_orders_system_id
	//
	// The solar system this order was placed
	// Required: true
	SystemID *int32 `json:"system_id"`

	// get_markets_region_id_orders_type_id
	//
	// type_id integer
	// Required: true
	TypeID *int32 `json:"type_id"`

	// get_markets_region_id_orders_volume_remain
	//
	// volume_remain integer
	// Required: true
	VolumeRemain *int32 `json:"volume_remain"`

	// get_markets_region_id_orders_volume_total
	//
	// volume_total integer
	// Required: true
	VolumeTotal *int32 `json:"volume_total"`
}

// Validate validates this get markets region ID orders o k body items0
func (o *GetMarketsRegionIDOrdersOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDuration(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIsBuyOrder(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIssued(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocationID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMinVolume(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOrderID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrice(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRange(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSystemID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTypeID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVolumeRemain(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVolumeTotal(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetMarketsRegionIDOrdersOKBodyItems0) validateDuration(formats strfmt.Registry) error {

	if err := validate.Required("duration", "body", o.Duration); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDOrdersOKBodyItems0) validateIsBuyOrder(formats strfmt.Registry) error {

	if err := validate.Required("is_buy_order", "body", o.IsBuyOrder); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDOrdersOKBodyItems0) validateIssued(formats strfmt.Registry) error {

	if err := validate.Required("issued", "body", o.Issued); err != nil {
		return err
	}

	if err := validate.FormatOf("issued", "body", "date-time", o.Issued.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDOrdersOKBodyItems0) validateLocationID(formats strfmt.Registry) error {

	if err := validate.Required("location_id", "body", o.LocationID); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDOrdersOKBodyItems0) validateMinVolume(formats strfmt.Registry) error {

	if err := validate.Required("min_volume", "body", o.MinVolume); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDOrdersOKBodyItems0) validateOrderID(formats strfmt.Registry) error {

	if err := validate.Required("order_id", "body", o.OrderID); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDOrdersOKBodyItems0) validatePrice(formats strfmt.Registry) error {

	if err := validate.Required("price", "body", o.Price); err != nil {
		return err
	}

	return nil
}

var getMarketsRegionIdOrdersOKBodyItems0TypeRangePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["station","region","solarsystem","1","2","3","4","5","10","20","30","40"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getMarketsRegionIdOrdersOKBodyItems0TypeRangePropEnum = append(getMarketsRegionIdOrdersOKBodyItems0TypeRangePropEnum, v)
	}
}

const (

	// GetMarketsRegionIDOrdersOKBodyItems0RangeStation captures enum value "station"
	GetMarketsRegionIDOrdersOKBodyItems0RangeStation string = "station"

	// GetMarketsRegionIDOrdersOKBodyItems0RangeRegion captures enum value "region"
	GetMarketsRegionIDOrdersOKBodyItems0RangeRegion string = "region"

	// GetMarketsRegionIDOrdersOKBodyItems0RangeSolarsystem captures enum value "solarsystem"
	GetMarketsRegionIDOrdersOKBodyItems0RangeSolarsystem string = "solarsystem"

	// GetMarketsRegionIDOrdersOKBodyItems0RangeNr1 captures enum value "1"
	GetMarketsRegionIDOrdersOKBodyItems0RangeNr1 string = "1"

	// GetMarketsRegionIDOrdersOKBodyItems0RangeNr2 captures enum value "2"
	GetMarketsRegionIDOrdersOKBodyItems0RangeNr2 string = "2"

	// GetMarketsRegionIDOrdersOKBodyItems0RangeNr3 captures enum value "3"
	GetMarketsRegionIDOrdersOKBodyItems0RangeNr3 string = "3"

	// GetMarketsRegionIDOrdersOKBodyItems0RangeNr4 captures enum value "4"
	GetMarketsRegionIDOrdersOKBodyItems0RangeNr4 string = "4"

	// GetMarketsRegionIDOrdersOKBodyItems0RangeNr5 captures enum value "5"
	GetMarketsRegionIDOrdersOKBodyItems0RangeNr5 string = "5"

	// GetMarketsRegionIDOrdersOKBodyItems0RangeNr10 captures enum value "10"
	GetMarketsRegionIDOrdersOKBodyItems0RangeNr10 string = "10"

	// GetMarketsRegionIDOrdersOKBodyItems0RangeNr20 captures enum value "20"
	GetMarketsRegionIDOrdersOKBodyItems0RangeNr20 string = "20"

	// GetMarketsRegionIDOrdersOKBodyItems0RangeNr30 captures enum value "30"
	GetMarketsRegionIDOrdersOKBodyItems0RangeNr30 string = "30"

	// GetMarketsRegionIDOrdersOKBodyItems0RangeNr40 captures enum value "40"
	GetMarketsRegionIDOrdersOKBodyItems0RangeNr40 string = "40"
)

// prop value enum
func (o *GetMarketsRegionIDOrdersOKBodyItems0) validateRangeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getMarketsRegionIdOrdersOKBodyItems0TypeRangePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetMarketsRegionIDOrdersOKBodyItems0) validateRange(formats strfmt.Registry) error {

	if err := validate.Required("range", "body", o.Range); err != nil {
		return err
	}

	// value enum
	if err := o.validateRangeEnum("range", "body", *o.Range); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDOrdersOKBodyItems0) validateSystemID(formats strfmt.Registry) error {

	if err := validate.Required("system_id", "body", o.SystemID); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDOrdersOKBodyItems0) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("type_id", "body", o.TypeID); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDOrdersOKBodyItems0) validateVolumeRemain(formats strfmt.Registry) error {

	if err := validate.Required("volume_remain", "body", o.VolumeRemain); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDOrdersOKBodyItems0) validateVolumeTotal(formats strfmt.Registry) error {

	if err := validate.Required("volume_total", "body", o.VolumeTotal); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get markets region ID orders o k body items0 based on context it is used
func (o *GetMarketsRegionIDOrdersOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetMarketsRegionIDOrdersOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMarketsRegionIDOrdersOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetMarketsRegionIDOrdersOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetMarketsRegionIDOrdersUnprocessableEntityBody get_markets_region_id_orders_unprocessable_entity
//
// Unprocessable entity
swagger:model GetMarketsRegionIDOrdersUnprocessableEntityBody
*/
type GetMarketsRegionIDOrdersUnprocessableEntityBody struct {

	// get_markets_region_id_orders_422_unprocessable_entity
	//
	// Unprocessable entity message
	Error string `json:"error,omitempty"`
}

// Validate validates this get markets region ID orders unprocessable entity body
func (o *GetMarketsRegionIDOrdersUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get markets region ID orders unprocessable entity body based on context it is used
func (o *GetMarketsRegionIDOrdersUnprocessableEntityBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetMarketsRegionIDOrdersUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMarketsRegionIDOrdersUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res GetMarketsRegionIDOrdersUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
