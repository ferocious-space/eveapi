// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCorporationsCorporationIDOrdersReader is a Reader for the GetCorporationsCorporationIDOrders structure.
type GetCorporationsCorporationIDOrdersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDOrdersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCorporationsCorporationIDOrdersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCorporationsCorporationIDOrdersNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCorporationsCorporationIDOrdersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCorporationsCorporationIDOrdersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCorporationsCorporationIDOrdersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCorporationsCorporationIDOrdersEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCorporationsCorporationIDOrdersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCorporationsCorporationIDOrdersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCorporationsCorporationIDOrdersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDOrdersOK creates a GetCorporationsCorporationIDOrdersOK with default headers values
func NewGetCorporationsCorporationIDOrdersOK() *GetCorporationsCorporationIDOrdersOK {
	var (
		// initialize headers with default values
		xPagesDefault = int32(1)
	)

	return &GetCorporationsCorporationIDOrdersOK{

		XPages: xPagesDefault,
	}
}

/*
GetCorporationsCorporationIDOrdersOK describes a response with status code 200, with default header values.

A list of open market orders
*/
type GetCorporationsCorporationIDOrdersOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	/* Maximum page number

	   Format: int32
	   Default: 1
	*/
	XPages int32

	Payload []*GetCorporationsCorporationIDOrdersOKBodyItems0
}

// IsSuccess returns true when this get corporations corporation Id orders o k response has a 2xx status code
func (o *GetCorporationsCorporationIDOrdersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get corporations corporation Id orders o k response has a 3xx status code
func (o *GetCorporationsCorporationIDOrdersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id orders o k response has a 4xx status code
func (o *GetCorporationsCorporationIDOrdersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id orders o k response has a 5xx status code
func (o *GetCorporationsCorporationIDOrdersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id orders o k response a status code equal to that given
func (o *GetCorporationsCorporationIDOrdersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get corporations corporation Id orders o k response
func (o *GetCorporationsCorporationIDOrdersOK) Code() int {
	return 200
}

func (o *GetCorporationsCorporationIDOrdersOK) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersOK) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersOK) GetPayload() []*GetCorporationsCorporationIDOrdersOKBodyItems0 {
	return o.Payload
}

func (o *GetCorporationsCorporationIDOrdersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header X-Pages
	hdrXPages := response.GetHeader("X-Pages")

	if hdrXPages != "" {
		valxPages, err := swag.ConvertInt32(hdrXPages)
		if err != nil {
			return errors.InvalidType("X-Pages", "header", "int32", hdrXPages)
		}
		o.XPages = valxPages
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOrdersNotModified creates a GetCorporationsCorporationIDOrdersNotModified with default headers values
func NewGetCorporationsCorporationIDOrdersNotModified() *GetCorporationsCorporationIDOrdersNotModified {
	return &GetCorporationsCorporationIDOrdersNotModified{}
}

/*
GetCorporationsCorporationIDOrdersNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCorporationsCorporationIDOrdersNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get corporations corporation Id orders not modified response has a 2xx status code
func (o *GetCorporationsCorporationIDOrdersNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id orders not modified response has a 3xx status code
func (o *GetCorporationsCorporationIDOrdersNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get corporations corporation Id orders not modified response has a 4xx status code
func (o *GetCorporationsCorporationIDOrdersNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id orders not modified response has a 5xx status code
func (o *GetCorporationsCorporationIDOrdersNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id orders not modified response a status code equal to that given
func (o *GetCorporationsCorporationIDOrdersNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get corporations corporation Id orders not modified response
func (o *GetCorporationsCorporationIDOrdersNotModified) Code() int {
	return 304
}

func (o *GetCorporationsCorporationIDOrdersNotModified) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersNotModified ", 304)
}

func (o *GetCorporationsCorporationIDOrdersNotModified) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersNotModified ", 304)
}

func (o *GetCorporationsCorporationIDOrdersNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCorporationsCorporationIDOrdersBadRequest creates a GetCorporationsCorporationIDOrdersBadRequest with default headers values
func NewGetCorporationsCorporationIDOrdersBadRequest() *GetCorporationsCorporationIDOrdersBadRequest {
	return &GetCorporationsCorporationIDOrdersBadRequest{}
}

/*
GetCorporationsCorporationIDOrdersBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCorporationsCorporationIDOrdersBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get corporations corporation Id orders bad request response has a 2xx status code
func (o *GetCorporationsCorporationIDOrdersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id orders bad request response has a 3xx status code
func (o *GetCorporationsCorporationIDOrdersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id orders bad request response has a 4xx status code
func (o *GetCorporationsCorporationIDOrdersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id orders bad request response has a 5xx status code
func (o *GetCorporationsCorporationIDOrdersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id orders bad request response a status code equal to that given
func (o *GetCorporationsCorporationIDOrdersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get corporations corporation Id orders bad request response
func (o *GetCorporationsCorporationIDOrdersBadRequest) Code() int {
	return 400
}

func (o *GetCorporationsCorporationIDOrdersBadRequest) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersBadRequest) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCorporationsCorporationIDOrdersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOrdersUnauthorized creates a GetCorporationsCorporationIDOrdersUnauthorized with default headers values
func NewGetCorporationsCorporationIDOrdersUnauthorized() *GetCorporationsCorporationIDOrdersUnauthorized {
	return &GetCorporationsCorporationIDOrdersUnauthorized{}
}

/*
GetCorporationsCorporationIDOrdersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDOrdersUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get corporations corporation Id orders unauthorized response has a 2xx status code
func (o *GetCorporationsCorporationIDOrdersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id orders unauthorized response has a 3xx status code
func (o *GetCorporationsCorporationIDOrdersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id orders unauthorized response has a 4xx status code
func (o *GetCorporationsCorporationIDOrdersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id orders unauthorized response has a 5xx status code
func (o *GetCorporationsCorporationIDOrdersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id orders unauthorized response a status code equal to that given
func (o *GetCorporationsCorporationIDOrdersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get corporations corporation Id orders unauthorized response
func (o *GetCorporationsCorporationIDOrdersUnauthorized) Code() int {
	return 401
}

func (o *GetCorporationsCorporationIDOrdersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersUnauthorized) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCorporationsCorporationIDOrdersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOrdersForbidden creates a GetCorporationsCorporationIDOrdersForbidden with default headers values
func NewGetCorporationsCorporationIDOrdersForbidden() *GetCorporationsCorporationIDOrdersForbidden {
	return &GetCorporationsCorporationIDOrdersForbidden{}
}

/*
GetCorporationsCorporationIDOrdersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCorporationsCorporationIDOrdersForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get corporations corporation Id orders forbidden response has a 2xx status code
func (o *GetCorporationsCorporationIDOrdersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id orders forbidden response has a 3xx status code
func (o *GetCorporationsCorporationIDOrdersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id orders forbidden response has a 4xx status code
func (o *GetCorporationsCorporationIDOrdersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id orders forbidden response has a 5xx status code
func (o *GetCorporationsCorporationIDOrdersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id orders forbidden response a status code equal to that given
func (o *GetCorporationsCorporationIDOrdersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get corporations corporation Id orders forbidden response
func (o *GetCorporationsCorporationIDOrdersForbidden) Code() int {
	return 403
}

func (o *GetCorporationsCorporationIDOrdersForbidden) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersForbidden) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCorporationsCorporationIDOrdersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOrdersEnhanceYourCalm creates a GetCorporationsCorporationIDOrdersEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDOrdersEnhanceYourCalm() *GetCorporationsCorporationIDOrdersEnhanceYourCalm {
	return &GetCorporationsCorporationIDOrdersEnhanceYourCalm{}
}

/*
GetCorporationsCorporationIDOrdersEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCorporationsCorporationIDOrdersEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get corporations corporation Id orders enhance your calm response has a 2xx status code
func (o *GetCorporationsCorporationIDOrdersEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id orders enhance your calm response has a 3xx status code
func (o *GetCorporationsCorporationIDOrdersEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id orders enhance your calm response has a 4xx status code
func (o *GetCorporationsCorporationIDOrdersEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id orders enhance your calm response has a 5xx status code
func (o *GetCorporationsCorporationIDOrdersEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id orders enhance your calm response a status code equal to that given
func (o *GetCorporationsCorporationIDOrdersEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get corporations corporation Id orders enhance your calm response
func (o *GetCorporationsCorporationIDOrdersEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetCorporationsCorporationIDOrdersEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCorporationsCorporationIDOrdersEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOrdersInternalServerError creates a GetCorporationsCorporationIDOrdersInternalServerError with default headers values
func NewGetCorporationsCorporationIDOrdersInternalServerError() *GetCorporationsCorporationIDOrdersInternalServerError {
	return &GetCorporationsCorporationIDOrdersInternalServerError{}
}

/*
GetCorporationsCorporationIDOrdersInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCorporationsCorporationIDOrdersInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get corporations corporation Id orders internal server error response has a 2xx status code
func (o *GetCorporationsCorporationIDOrdersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id orders internal server error response has a 3xx status code
func (o *GetCorporationsCorporationIDOrdersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id orders internal server error response has a 4xx status code
func (o *GetCorporationsCorporationIDOrdersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id orders internal server error response has a 5xx status code
func (o *GetCorporationsCorporationIDOrdersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id orders internal server error response a status code equal to that given
func (o *GetCorporationsCorporationIDOrdersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get corporations corporation Id orders internal server error response
func (o *GetCorporationsCorporationIDOrdersInternalServerError) Code() int {
	return 500
}

func (o *GetCorporationsCorporationIDOrdersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersInternalServerError) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCorporationsCorporationIDOrdersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOrdersServiceUnavailable creates a GetCorporationsCorporationIDOrdersServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDOrdersServiceUnavailable() *GetCorporationsCorporationIDOrdersServiceUnavailable {
	return &GetCorporationsCorporationIDOrdersServiceUnavailable{}
}

/*
GetCorporationsCorporationIDOrdersServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDOrdersServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get corporations corporation Id orders service unavailable response has a 2xx status code
func (o *GetCorporationsCorporationIDOrdersServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id orders service unavailable response has a 3xx status code
func (o *GetCorporationsCorporationIDOrdersServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id orders service unavailable response has a 4xx status code
func (o *GetCorporationsCorporationIDOrdersServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id orders service unavailable response has a 5xx status code
func (o *GetCorporationsCorporationIDOrdersServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id orders service unavailable response a status code equal to that given
func (o *GetCorporationsCorporationIDOrdersServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get corporations corporation Id orders service unavailable response
func (o *GetCorporationsCorporationIDOrdersServiceUnavailable) Code() int {
	return 503
}

func (o *GetCorporationsCorporationIDOrdersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCorporationsCorporationIDOrdersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOrdersGatewayTimeout creates a GetCorporationsCorporationIDOrdersGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDOrdersGatewayTimeout() *GetCorporationsCorporationIDOrdersGatewayTimeout {
	return &GetCorporationsCorporationIDOrdersGatewayTimeout{}
}

/*
GetCorporationsCorporationIDOrdersGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDOrdersGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get corporations corporation Id orders gateway timeout response has a 2xx status code
func (o *GetCorporationsCorporationIDOrdersGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id orders gateway timeout response has a 3xx status code
func (o *GetCorporationsCorporationIDOrdersGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id orders gateway timeout response has a 4xx status code
func (o *GetCorporationsCorporationIDOrdersGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id orders gateway timeout response has a 5xx status code
func (o *GetCorporationsCorporationIDOrdersGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id orders gateway timeout response a status code equal to that given
func (o *GetCorporationsCorporationIDOrdersGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get corporations corporation Id orders gateway timeout response
func (o *GetCorporationsCorporationIDOrdersGatewayTimeout) Code() int {
	return 504
}

func (o *GetCorporationsCorporationIDOrdersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/orders/][%d] getCorporationsCorporationIdOrdersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDOrdersGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCorporationsCorporationIDOrdersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCorporationsCorporationIDOrdersOKBodyItems0 get_corporations_corporation_id_orders_200_ok
//
// 200 ok object
swagger:model GetCorporationsCorporationIDOrdersOKBodyItems0
*/
type GetCorporationsCorporationIDOrdersOKBodyItems0 struct {

	// get_corporations_corporation_id_orders_duration
	//
	// Number of days for which order is valid (starting from the issued date). An order expires at time issued + duration
	// Required: true
	Duration *int32 `json:"duration"`

	// get_corporations_corporation_id_orders_escrow
	//
	// For buy orders, the amount of ISK in escrow
	Escrow float64 `json:"escrow,omitempty"`

	// get_corporations_corporation_id_orders_is_buy_order
	//
	// True if the order is a bid (buy) order
	IsBuyOrder bool `json:"is_buy_order,omitempty"`

	// get_corporations_corporation_id_orders_issued
	//
	// Date and time when this order was issued
	// Required: true
	// Format: date-time
	Issued *strfmt.DateTime `json:"issued"`

	// get_corporations_corporation_id_orders_issued_by
	//
	// The character who issued this order
	// Required: true
	IssuedBy *int32 `json:"issued_by"`

	// get_corporations_corporation_id_orders_location_id
	//
	// ID of the location where order was placed
	// Required: true
	LocationID *int64 `json:"location_id"`

	// get_corporations_corporation_id_orders_min_volume
	//
	// For buy orders, the minimum quantity that will be accepted in a matching sell order
	MinVolume int32 `json:"min_volume,omitempty"`

	// get_corporations_corporation_id_orders_order_id
	//
	// Unique order ID
	// Required: true
	OrderID *int64 `json:"order_id"`

	// get_corporations_corporation_id_orders_price
	//
	// Cost per unit for this order
	// Required: true
	Price *float64 `json:"price"`

	// get_corporations_corporation_id_orders_range
	//
	// Valid order range, numbers are ranges in jumps
	// Required: true
	// Enum: [1 10 2 20 3 30 4 40 5 region solarsystem station]
	Range *string `json:"range"`

	// get_corporations_corporation_id_orders_region_id
	//
	// ID of the region where order was placed
	// Required: true
	RegionID *int32 `json:"region_id"`

	// get_corporations_corporation_id_orders_type_id
	//
	// The type ID of the item transacted in this order
	// Required: true
	TypeID *int32 `json:"type_id"`

	// get_corporations_corporation_id_orders_volume_remain
	//
	// Quantity of items still required or offered
	// Required: true
	VolumeRemain *int32 `json:"volume_remain"`

	// get_corporations_corporation_id_orders_volume_total
	//
	// Quantity of items required or offered at time order was placed
	// Required: true
	VolumeTotal *int32 `json:"volume_total"`

	// get_corporations_corporation_id_orders_wallet_division
	//
	// The corporation wallet division used for this order.
	// Required: true
	// Maximum: 7
	// Minimum: 1
	WalletDivision *int32 `json:"wallet_division"`
}

// Validate validates this get corporations corporation ID orders o k body items0
func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDuration(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIssued(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIssuedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocationID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOrderID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrice(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRange(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRegionID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTypeID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVolumeRemain(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVolumeTotal(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateWalletDivision(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validateDuration(formats strfmt.Registry) error {

	if err := validate.Required("duration", "body", o.Duration); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validateIssued(formats strfmt.Registry) error {

	if err := validate.Required("issued", "body", o.Issued); err != nil {
		return err
	}

	if err := validate.FormatOf("issued", "body", "date-time", o.Issued.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validateIssuedBy(formats strfmt.Registry) error {

	if err := validate.Required("issued_by", "body", o.IssuedBy); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validateLocationID(formats strfmt.Registry) error {

	if err := validate.Required("location_id", "body", o.LocationID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validateOrderID(formats strfmt.Registry) error {

	if err := validate.Required("order_id", "body", o.OrderID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validatePrice(formats strfmt.Registry) error {

	if err := validate.Required("price", "body", o.Price); err != nil {
		return err
	}

	return nil
}

var getCorporationsCorporationIdOrdersOKBodyItems0TypeRangePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["1","10","2","20","3","30","4","40","5","region","solarsystem","station"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdOrdersOKBodyItems0TypeRangePropEnum = append(getCorporationsCorporationIdOrdersOKBodyItems0TypeRangePropEnum, v)
	}
}

const (

	// GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr1 captures enum value "1"
	GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr1 string = "1"

	// GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr10 captures enum value "10"
	GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr10 string = "10"

	// GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr2 captures enum value "2"
	GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr2 string = "2"

	// GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr20 captures enum value "20"
	GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr20 string = "20"

	// GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr3 captures enum value "3"
	GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr3 string = "3"

	// GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr30 captures enum value "30"
	GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr30 string = "30"

	// GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr4 captures enum value "4"
	GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr4 string = "4"

	// GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr40 captures enum value "40"
	GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr40 string = "40"

	// GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr5 captures enum value "5"
	GetCorporationsCorporationIDOrdersOKBodyItems0RangeNr5 string = "5"

	// GetCorporationsCorporationIDOrdersOKBodyItems0RangeRegion captures enum value "region"
	GetCorporationsCorporationIDOrdersOKBodyItems0RangeRegion string = "region"

	// GetCorporationsCorporationIDOrdersOKBodyItems0RangeSolarsystem captures enum value "solarsystem"
	GetCorporationsCorporationIDOrdersOKBodyItems0RangeSolarsystem string = "solarsystem"

	// GetCorporationsCorporationIDOrdersOKBodyItems0RangeStation captures enum value "station"
	GetCorporationsCorporationIDOrdersOKBodyItems0RangeStation string = "station"
)

// prop value enum
func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validateRangeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdOrdersOKBodyItems0TypeRangePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validateRange(formats strfmt.Registry) error {

	if err := validate.Required("range", "body", o.Range); err != nil {
		return err
	}

	// value enum
	if err := o.validateRangeEnum("range", "body", *o.Range); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validateRegionID(formats strfmt.Registry) error {

	if err := validate.Required("region_id", "body", o.RegionID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("type_id", "body", o.TypeID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validateVolumeRemain(formats strfmt.Registry) error {

	if err := validate.Required("volume_remain", "body", o.VolumeRemain); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validateVolumeTotal(formats strfmt.Registry) error {

	if err := validate.Required("volume_total", "body", o.VolumeTotal); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) validateWalletDivision(formats strfmt.Registry) error {

	if err := validate.Required("wallet_division", "body", o.WalletDivision); err != nil {
		return err
	}

	if err := validate.MinimumInt("wallet_division", "body", int64(*o.WalletDivision), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("wallet_division", "body", int64(*o.WalletDivision), 7, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get corporations corporation ID orders o k body items0 based on context it is used
func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDOrdersOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDOrdersOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
