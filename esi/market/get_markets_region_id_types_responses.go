// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/ferocious-space/eveapi/models"
)

// GetMarketsRegionIDTypesReader is a Reader for the GetMarketsRegionIDTypes structure.
type GetMarketsRegionIDTypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMarketsRegionIDTypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMarketsRegionIDTypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetMarketsRegionIDTypesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetMarketsRegionIDTypesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetMarketsRegionIDTypesEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMarketsRegionIDTypesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetMarketsRegionIDTypesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetMarketsRegionIDTypesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetMarketsRegionIDTypesOK creates a GetMarketsRegionIDTypesOK with default headers values
func NewGetMarketsRegionIDTypesOK() *GetMarketsRegionIDTypesOK {
	var (
		// initialize headers with default values
		xPagesDefault = int32(1)
	)

	return &GetMarketsRegionIDTypesOK{

		XPages: xPagesDefault,
	}
}

/*
GetMarketsRegionIDTypesOK describes a response with status code 200, with default header values.

A list of type IDs
*/
type GetMarketsRegionIDTypesOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	/* Maximum page number

	   Format: int32
	   Default: 1
	*/
	XPages int32

	Payload []int32
}

// IsSuccess returns true when this get markets region Id types o k response has a 2xx status code
func (o *GetMarketsRegionIDTypesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get markets region Id types o k response has a 3xx status code
func (o *GetMarketsRegionIDTypesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id types o k response has a 4xx status code
func (o *GetMarketsRegionIDTypesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get markets region Id types o k response has a 5xx status code
func (o *GetMarketsRegionIDTypesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get markets region Id types o k response a status code equal to that given
func (o *GetMarketsRegionIDTypesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get markets region Id types o k response
func (o *GetMarketsRegionIDTypesOK) Code() int {
	return 200
}

func (o *GetMarketsRegionIDTypesOK) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesOK  %+v", 200, o.Payload)
}

func (o *GetMarketsRegionIDTypesOK) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesOK  %+v", 200, o.Payload)
}

func (o *GetMarketsRegionIDTypesOK) GetPayload() []int32 {
	return o.Payload
}

func (o *GetMarketsRegionIDTypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header X-Pages
	hdrXPages := response.GetHeader("X-Pages")

	if hdrXPages != "" {
		valxPages, err := swag.ConvertInt32(hdrXPages)
		if err != nil {
			return errors.InvalidType("X-Pages", "header", "int32", hdrXPages)
		}
		o.XPages = valxPages
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDTypesNotModified creates a GetMarketsRegionIDTypesNotModified with default headers values
func NewGetMarketsRegionIDTypesNotModified() *GetMarketsRegionIDTypesNotModified {
	return &GetMarketsRegionIDTypesNotModified{}
}

/*
GetMarketsRegionIDTypesNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetMarketsRegionIDTypesNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get markets region Id types not modified response has a 2xx status code
func (o *GetMarketsRegionIDTypesNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id types not modified response has a 3xx status code
func (o *GetMarketsRegionIDTypesNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get markets region Id types not modified response has a 4xx status code
func (o *GetMarketsRegionIDTypesNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get markets region Id types not modified response has a 5xx status code
func (o *GetMarketsRegionIDTypesNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get markets region Id types not modified response a status code equal to that given
func (o *GetMarketsRegionIDTypesNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get markets region Id types not modified response
func (o *GetMarketsRegionIDTypesNotModified) Code() int {
	return 304
}

func (o *GetMarketsRegionIDTypesNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesNotModified ", 304)
}

func (o *GetMarketsRegionIDTypesNotModified) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesNotModified ", 304)
}

func (o *GetMarketsRegionIDTypesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetMarketsRegionIDTypesBadRequest creates a GetMarketsRegionIDTypesBadRequest with default headers values
func NewGetMarketsRegionIDTypesBadRequest() *GetMarketsRegionIDTypesBadRequest {
	return &GetMarketsRegionIDTypesBadRequest{}
}

/*
GetMarketsRegionIDTypesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetMarketsRegionIDTypesBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get markets region Id types bad request response has a 2xx status code
func (o *GetMarketsRegionIDTypesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id types bad request response has a 3xx status code
func (o *GetMarketsRegionIDTypesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id types bad request response has a 4xx status code
func (o *GetMarketsRegionIDTypesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get markets region Id types bad request response has a 5xx status code
func (o *GetMarketsRegionIDTypesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get markets region Id types bad request response a status code equal to that given
func (o *GetMarketsRegionIDTypesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get markets region Id types bad request response
func (o *GetMarketsRegionIDTypesBadRequest) Code() int {
	return 400
}

func (o *GetMarketsRegionIDTypesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetMarketsRegionIDTypesBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetMarketsRegionIDTypesBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetMarketsRegionIDTypesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDTypesEnhanceYourCalm creates a GetMarketsRegionIDTypesEnhanceYourCalm with default headers values
func NewGetMarketsRegionIDTypesEnhanceYourCalm() *GetMarketsRegionIDTypesEnhanceYourCalm {
	return &GetMarketsRegionIDTypesEnhanceYourCalm{}
}

/*
GetMarketsRegionIDTypesEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetMarketsRegionIDTypesEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get markets region Id types enhance your calm response has a 2xx status code
func (o *GetMarketsRegionIDTypesEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id types enhance your calm response has a 3xx status code
func (o *GetMarketsRegionIDTypesEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id types enhance your calm response has a 4xx status code
func (o *GetMarketsRegionIDTypesEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get markets region Id types enhance your calm response has a 5xx status code
func (o *GetMarketsRegionIDTypesEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get markets region Id types enhance your calm response a status code equal to that given
func (o *GetMarketsRegionIDTypesEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get markets region Id types enhance your calm response
func (o *GetMarketsRegionIDTypesEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetMarketsRegionIDTypesEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetMarketsRegionIDTypesEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetMarketsRegionIDTypesEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetMarketsRegionIDTypesEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDTypesInternalServerError creates a GetMarketsRegionIDTypesInternalServerError with default headers values
func NewGetMarketsRegionIDTypesInternalServerError() *GetMarketsRegionIDTypesInternalServerError {
	return &GetMarketsRegionIDTypesInternalServerError{}
}

/*
GetMarketsRegionIDTypesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetMarketsRegionIDTypesInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get markets region Id types internal server error response has a 2xx status code
func (o *GetMarketsRegionIDTypesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id types internal server error response has a 3xx status code
func (o *GetMarketsRegionIDTypesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id types internal server error response has a 4xx status code
func (o *GetMarketsRegionIDTypesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get markets region Id types internal server error response has a 5xx status code
func (o *GetMarketsRegionIDTypesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get markets region Id types internal server error response a status code equal to that given
func (o *GetMarketsRegionIDTypesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get markets region Id types internal server error response
func (o *GetMarketsRegionIDTypesInternalServerError) Code() int {
	return 500
}

func (o *GetMarketsRegionIDTypesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMarketsRegionIDTypesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMarketsRegionIDTypesInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetMarketsRegionIDTypesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDTypesServiceUnavailable creates a GetMarketsRegionIDTypesServiceUnavailable with default headers values
func NewGetMarketsRegionIDTypesServiceUnavailable() *GetMarketsRegionIDTypesServiceUnavailable {
	return &GetMarketsRegionIDTypesServiceUnavailable{}
}

/*
GetMarketsRegionIDTypesServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetMarketsRegionIDTypesServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get markets region Id types service unavailable response has a 2xx status code
func (o *GetMarketsRegionIDTypesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id types service unavailable response has a 3xx status code
func (o *GetMarketsRegionIDTypesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id types service unavailable response has a 4xx status code
func (o *GetMarketsRegionIDTypesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get markets region Id types service unavailable response has a 5xx status code
func (o *GetMarketsRegionIDTypesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get markets region Id types service unavailable response a status code equal to that given
func (o *GetMarketsRegionIDTypesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get markets region Id types service unavailable response
func (o *GetMarketsRegionIDTypesServiceUnavailable) Code() int {
	return 503
}

func (o *GetMarketsRegionIDTypesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetMarketsRegionIDTypesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetMarketsRegionIDTypesServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetMarketsRegionIDTypesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDTypesGatewayTimeout creates a GetMarketsRegionIDTypesGatewayTimeout with default headers values
func NewGetMarketsRegionIDTypesGatewayTimeout() *GetMarketsRegionIDTypesGatewayTimeout {
	return &GetMarketsRegionIDTypesGatewayTimeout{}
}

/*
GetMarketsRegionIDTypesGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetMarketsRegionIDTypesGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get markets region Id types gateway timeout response has a 2xx status code
func (o *GetMarketsRegionIDTypesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get markets region Id types gateway timeout response has a 3xx status code
func (o *GetMarketsRegionIDTypesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get markets region Id types gateway timeout response has a 4xx status code
func (o *GetMarketsRegionIDTypesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get markets region Id types gateway timeout response has a 5xx status code
func (o *GetMarketsRegionIDTypesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get markets region Id types gateway timeout response a status code equal to that given
func (o *GetMarketsRegionIDTypesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get markets region Id types gateway timeout response
func (o *GetMarketsRegionIDTypesGatewayTimeout) Code() int {
	return 504
}

func (o *GetMarketsRegionIDTypesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetMarketsRegionIDTypesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/markets/{region_id}/types/][%d] getMarketsRegionIdTypesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetMarketsRegionIDTypesGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetMarketsRegionIDTypesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
