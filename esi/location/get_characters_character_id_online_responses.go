// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCharactersCharacterIDOnlineReader is a Reader for the GetCharactersCharacterIDOnline structure.
type GetCharactersCharacterIDOnlineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDOnlineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCharactersCharacterIDOnlineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCharactersCharacterIDOnlineNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCharactersCharacterIDOnlineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCharactersCharacterIDOnlineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCharactersCharacterIDOnlineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCharactersCharacterIDOnlineEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCharactersCharacterIDOnlineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCharactersCharacterIDOnlineServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCharactersCharacterIDOnlineGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCharactersCharacterIDOnlineOK creates a GetCharactersCharacterIDOnlineOK with default headers values
func NewGetCharactersCharacterIDOnlineOK() *GetCharactersCharacterIDOnlineOK {
	return &GetCharactersCharacterIDOnlineOK{}
}

/*
GetCharactersCharacterIDOnlineOK describes a response with status code 200, with default header values.

Object describing the character's online status
*/
type GetCharactersCharacterIDOnlineOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetCharactersCharacterIDOnlineOKBody
}

// IsSuccess returns true when this get characters character Id online o k response has a 2xx status code
func (o *GetCharactersCharacterIDOnlineOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get characters character Id online o k response has a 3xx status code
func (o *GetCharactersCharacterIDOnlineOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id online o k response has a 4xx status code
func (o *GetCharactersCharacterIDOnlineOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id online o k response has a 5xx status code
func (o *GetCharactersCharacterIDOnlineOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id online o k response a status code equal to that given
func (o *GetCharactersCharacterIDOnlineOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get characters character Id online o k response
func (o *GetCharactersCharacterIDOnlineOK) Code() int {
	return 200
}

func (o *GetCharactersCharacterIDOnlineOK) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineOK) String() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineOK) GetPayload() *GetCharactersCharacterIDOnlineOKBody {
	return o.Payload
}

func (o *GetCharactersCharacterIDOnlineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetCharactersCharacterIDOnlineOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOnlineNotModified creates a GetCharactersCharacterIDOnlineNotModified with default headers values
func NewGetCharactersCharacterIDOnlineNotModified() *GetCharactersCharacterIDOnlineNotModified {
	return &GetCharactersCharacterIDOnlineNotModified{}
}

/*
GetCharactersCharacterIDOnlineNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCharactersCharacterIDOnlineNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get characters character Id online not modified response has a 2xx status code
func (o *GetCharactersCharacterIDOnlineNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id online not modified response has a 3xx status code
func (o *GetCharactersCharacterIDOnlineNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get characters character Id online not modified response has a 4xx status code
func (o *GetCharactersCharacterIDOnlineNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id online not modified response has a 5xx status code
func (o *GetCharactersCharacterIDOnlineNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id online not modified response a status code equal to that given
func (o *GetCharactersCharacterIDOnlineNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get characters character Id online not modified response
func (o *GetCharactersCharacterIDOnlineNotModified) Code() int {
	return 304
}

func (o *GetCharactersCharacterIDOnlineNotModified) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineNotModified ", 304)
}

func (o *GetCharactersCharacterIDOnlineNotModified) String() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineNotModified ", 304)
}

func (o *GetCharactersCharacterIDOnlineNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCharactersCharacterIDOnlineBadRequest creates a GetCharactersCharacterIDOnlineBadRequest with default headers values
func NewGetCharactersCharacterIDOnlineBadRequest() *GetCharactersCharacterIDOnlineBadRequest {
	return &GetCharactersCharacterIDOnlineBadRequest{}
}

/*
GetCharactersCharacterIDOnlineBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCharactersCharacterIDOnlineBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get characters character Id online bad request response has a 2xx status code
func (o *GetCharactersCharacterIDOnlineBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id online bad request response has a 3xx status code
func (o *GetCharactersCharacterIDOnlineBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id online bad request response has a 4xx status code
func (o *GetCharactersCharacterIDOnlineBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id online bad request response has a 5xx status code
func (o *GetCharactersCharacterIDOnlineBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id online bad request response a status code equal to that given
func (o *GetCharactersCharacterIDOnlineBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get characters character Id online bad request response
func (o *GetCharactersCharacterIDOnlineBadRequest) Code() int {
	return 400
}

func (o *GetCharactersCharacterIDOnlineBadRequest) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineBadRequest) String() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCharactersCharacterIDOnlineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOnlineUnauthorized creates a GetCharactersCharacterIDOnlineUnauthorized with default headers values
func NewGetCharactersCharacterIDOnlineUnauthorized() *GetCharactersCharacterIDOnlineUnauthorized {
	return &GetCharactersCharacterIDOnlineUnauthorized{}
}

/*
GetCharactersCharacterIDOnlineUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCharactersCharacterIDOnlineUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get characters character Id online unauthorized response has a 2xx status code
func (o *GetCharactersCharacterIDOnlineUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id online unauthorized response has a 3xx status code
func (o *GetCharactersCharacterIDOnlineUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id online unauthorized response has a 4xx status code
func (o *GetCharactersCharacterIDOnlineUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id online unauthorized response has a 5xx status code
func (o *GetCharactersCharacterIDOnlineUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id online unauthorized response a status code equal to that given
func (o *GetCharactersCharacterIDOnlineUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get characters character Id online unauthorized response
func (o *GetCharactersCharacterIDOnlineUnauthorized) Code() int {
	return 401
}

func (o *GetCharactersCharacterIDOnlineUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineUnauthorized) String() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCharactersCharacterIDOnlineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOnlineForbidden creates a GetCharactersCharacterIDOnlineForbidden with default headers values
func NewGetCharactersCharacterIDOnlineForbidden() *GetCharactersCharacterIDOnlineForbidden {
	return &GetCharactersCharacterIDOnlineForbidden{}
}

/*
GetCharactersCharacterIDOnlineForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCharactersCharacterIDOnlineForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get characters character Id online forbidden response has a 2xx status code
func (o *GetCharactersCharacterIDOnlineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id online forbidden response has a 3xx status code
func (o *GetCharactersCharacterIDOnlineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id online forbidden response has a 4xx status code
func (o *GetCharactersCharacterIDOnlineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id online forbidden response has a 5xx status code
func (o *GetCharactersCharacterIDOnlineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id online forbidden response a status code equal to that given
func (o *GetCharactersCharacterIDOnlineForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get characters character Id online forbidden response
func (o *GetCharactersCharacterIDOnlineForbidden) Code() int {
	return 403
}

func (o *GetCharactersCharacterIDOnlineForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineForbidden) String() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCharactersCharacterIDOnlineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOnlineEnhanceYourCalm creates a GetCharactersCharacterIDOnlineEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDOnlineEnhanceYourCalm() *GetCharactersCharacterIDOnlineEnhanceYourCalm {
	return &GetCharactersCharacterIDOnlineEnhanceYourCalm{}
}

/*
GetCharactersCharacterIDOnlineEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCharactersCharacterIDOnlineEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get characters character Id online enhance your calm response has a 2xx status code
func (o *GetCharactersCharacterIDOnlineEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id online enhance your calm response has a 3xx status code
func (o *GetCharactersCharacterIDOnlineEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id online enhance your calm response has a 4xx status code
func (o *GetCharactersCharacterIDOnlineEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id online enhance your calm response has a 5xx status code
func (o *GetCharactersCharacterIDOnlineEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id online enhance your calm response a status code equal to that given
func (o *GetCharactersCharacterIDOnlineEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get characters character Id online enhance your calm response
func (o *GetCharactersCharacterIDOnlineEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetCharactersCharacterIDOnlineEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCharactersCharacterIDOnlineEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOnlineInternalServerError creates a GetCharactersCharacterIDOnlineInternalServerError with default headers values
func NewGetCharactersCharacterIDOnlineInternalServerError() *GetCharactersCharacterIDOnlineInternalServerError {
	return &GetCharactersCharacterIDOnlineInternalServerError{}
}

/*
GetCharactersCharacterIDOnlineInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCharactersCharacterIDOnlineInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get characters character Id online internal server error response has a 2xx status code
func (o *GetCharactersCharacterIDOnlineInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id online internal server error response has a 3xx status code
func (o *GetCharactersCharacterIDOnlineInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id online internal server error response has a 4xx status code
func (o *GetCharactersCharacterIDOnlineInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id online internal server error response has a 5xx status code
func (o *GetCharactersCharacterIDOnlineInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id online internal server error response a status code equal to that given
func (o *GetCharactersCharacterIDOnlineInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get characters character Id online internal server error response
func (o *GetCharactersCharacterIDOnlineInternalServerError) Code() int {
	return 500
}

func (o *GetCharactersCharacterIDOnlineInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineInternalServerError) String() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCharactersCharacterIDOnlineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOnlineServiceUnavailable creates a GetCharactersCharacterIDOnlineServiceUnavailable with default headers values
func NewGetCharactersCharacterIDOnlineServiceUnavailable() *GetCharactersCharacterIDOnlineServiceUnavailable {
	return &GetCharactersCharacterIDOnlineServiceUnavailable{}
}

/*
GetCharactersCharacterIDOnlineServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCharactersCharacterIDOnlineServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get characters character Id online service unavailable response has a 2xx status code
func (o *GetCharactersCharacterIDOnlineServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id online service unavailable response has a 3xx status code
func (o *GetCharactersCharacterIDOnlineServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id online service unavailable response has a 4xx status code
func (o *GetCharactersCharacterIDOnlineServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id online service unavailable response has a 5xx status code
func (o *GetCharactersCharacterIDOnlineServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id online service unavailable response a status code equal to that given
func (o *GetCharactersCharacterIDOnlineServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get characters character Id online service unavailable response
func (o *GetCharactersCharacterIDOnlineServiceUnavailable) Code() int {
	return 503
}

func (o *GetCharactersCharacterIDOnlineServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCharactersCharacterIDOnlineServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOnlineGatewayTimeout creates a GetCharactersCharacterIDOnlineGatewayTimeout with default headers values
func NewGetCharactersCharacterIDOnlineGatewayTimeout() *GetCharactersCharacterIDOnlineGatewayTimeout {
	return &GetCharactersCharacterIDOnlineGatewayTimeout{}
}

/*
GetCharactersCharacterIDOnlineGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDOnlineGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get characters character Id online gateway timeout response has a 2xx status code
func (o *GetCharactersCharacterIDOnlineGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id online gateway timeout response has a 3xx status code
func (o *GetCharactersCharacterIDOnlineGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id online gateway timeout response has a 4xx status code
func (o *GetCharactersCharacterIDOnlineGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id online gateway timeout response has a 5xx status code
func (o *GetCharactersCharacterIDOnlineGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id online gateway timeout response a status code equal to that given
func (o *GetCharactersCharacterIDOnlineGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get characters character Id online gateway timeout response
func (o *GetCharactersCharacterIDOnlineGatewayTimeout) Code() int {
	return 504
}

func (o *GetCharactersCharacterIDOnlineGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v2/characters/{character_id}/online/][%d] getCharactersCharacterIdOnlineGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDOnlineGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCharactersCharacterIDOnlineGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCharactersCharacterIDOnlineOKBody get_characters_character_id_online_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDOnlineOKBody
*/
type GetCharactersCharacterIDOnlineOKBody struct {

	// get_characters_character_id_online_last_login
	//
	// Timestamp of the last login
	// Format: date-time
	LastLogin strfmt.DateTime `json:"last_login,omitempty"`

	// get_characters_character_id_online_last_logout
	//
	// Timestamp of the last logout
	// Format: date-time
	LastLogout strfmt.DateTime `json:"last_logout,omitempty"`

	// get_characters_character_id_online_logins
	//
	// Total number of times the character has logged in
	Logins int32 `json:"logins,omitempty"`

	// get_characters_character_id_online_online
	//
	// If the character is online
	// Required: true
	Online *bool `json:"online"`
}

// Validate validates this get characters character ID online o k body
func (o *GetCharactersCharacterIDOnlineOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLastLogin(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastLogout(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOnline(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDOnlineOKBody) validateLastLogin(formats strfmt.Registry) error {
	if swag.IsZero(o.LastLogin) { // not required
		return nil
	}

	if err := validate.FormatOf("getCharactersCharacterIdOnlineOK"+"."+"last_login", "body", "date-time", o.LastLogin.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDOnlineOKBody) validateLastLogout(formats strfmt.Registry) error {
	if swag.IsZero(o.LastLogout) { // not required
		return nil
	}

	if err := validate.FormatOf("getCharactersCharacterIdOnlineOK"+"."+"last_logout", "body", "date-time", o.LastLogout.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDOnlineOKBody) validateOnline(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdOnlineOK"+"."+"online", "body", o.Online); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID online o k body based on context it is used
func (o *GetCharactersCharacterIDOnlineOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDOnlineOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDOnlineOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDOnlineOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
