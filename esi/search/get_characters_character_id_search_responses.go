// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCharactersCharacterIDSearchReader is a Reader for the GetCharactersCharacterIDSearch structure.
type GetCharactersCharacterIDSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCharactersCharacterIDSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCharactersCharacterIDSearchNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCharactersCharacterIDSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCharactersCharacterIDSearchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCharactersCharacterIDSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCharactersCharacterIDSearchEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCharactersCharacterIDSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCharactersCharacterIDSearchServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCharactersCharacterIDSearchGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCharactersCharacterIDSearchOK creates a GetCharactersCharacterIDSearchOK with default headers values
func NewGetCharactersCharacterIDSearchOK() *GetCharactersCharacterIDSearchOK {
	return &GetCharactersCharacterIDSearchOK{}
}

/*
GetCharactersCharacterIDSearchOK describes a response with status code 200, with default header values.

A list of search results
*/
type GetCharactersCharacterIDSearchOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* The language used in the response
	 */
	ContentLanguage string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetCharactersCharacterIDSearchOKBody
}

// IsSuccess returns true when this get characters character Id search o k response has a 2xx status code
func (o *GetCharactersCharacterIDSearchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get characters character Id search o k response has a 3xx status code
func (o *GetCharactersCharacterIDSearchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id search o k response has a 4xx status code
func (o *GetCharactersCharacterIDSearchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id search o k response has a 5xx status code
func (o *GetCharactersCharacterIDSearchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id search o k response a status code equal to that given
func (o *GetCharactersCharacterIDSearchOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCharactersCharacterIDSearchOK) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDSearchOK) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDSearchOK) GetPayload() *GetCharactersCharacterIDSearchOKBody {
	return o.Payload
}

func (o *GetCharactersCharacterIDSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header Content-Language
	hdrContentLanguage := response.GetHeader("Content-Language")

	if hdrContentLanguage != "" {
		o.ContentLanguage = hdrContentLanguage
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetCharactersCharacterIDSearchOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchNotModified creates a GetCharactersCharacterIDSearchNotModified with default headers values
func NewGetCharactersCharacterIDSearchNotModified() *GetCharactersCharacterIDSearchNotModified {
	return &GetCharactersCharacterIDSearchNotModified{}
}

/*
GetCharactersCharacterIDSearchNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCharactersCharacterIDSearchNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get characters character Id search not modified response has a 2xx status code
func (o *GetCharactersCharacterIDSearchNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id search not modified response has a 3xx status code
func (o *GetCharactersCharacterIDSearchNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get characters character Id search not modified response has a 4xx status code
func (o *GetCharactersCharacterIDSearchNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id search not modified response has a 5xx status code
func (o *GetCharactersCharacterIDSearchNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id search not modified response a status code equal to that given
func (o *GetCharactersCharacterIDSearchNotModified) IsCode(code int) bool {
	return code == 304
}

func (o *GetCharactersCharacterIDSearchNotModified) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchNotModified ", 304)
}

func (o *GetCharactersCharacterIDSearchNotModified) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchNotModified ", 304)
}

func (o *GetCharactersCharacterIDSearchNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCharactersCharacterIDSearchBadRequest creates a GetCharactersCharacterIDSearchBadRequest with default headers values
func NewGetCharactersCharacterIDSearchBadRequest() *GetCharactersCharacterIDSearchBadRequest {
	return &GetCharactersCharacterIDSearchBadRequest{}
}

/*
GetCharactersCharacterIDSearchBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCharactersCharacterIDSearchBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get characters character Id search bad request response has a 2xx status code
func (o *GetCharactersCharacterIDSearchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id search bad request response has a 3xx status code
func (o *GetCharactersCharacterIDSearchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id search bad request response has a 4xx status code
func (o *GetCharactersCharacterIDSearchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id search bad request response has a 5xx status code
func (o *GetCharactersCharacterIDSearchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id search bad request response a status code equal to that given
func (o *GetCharactersCharacterIDSearchBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetCharactersCharacterIDSearchBadRequest) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDSearchBadRequest) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDSearchBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCharactersCharacterIDSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchUnauthorized creates a GetCharactersCharacterIDSearchUnauthorized with default headers values
func NewGetCharactersCharacterIDSearchUnauthorized() *GetCharactersCharacterIDSearchUnauthorized {
	return &GetCharactersCharacterIDSearchUnauthorized{}
}

/*
GetCharactersCharacterIDSearchUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCharactersCharacterIDSearchUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get characters character Id search unauthorized response has a 2xx status code
func (o *GetCharactersCharacterIDSearchUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id search unauthorized response has a 3xx status code
func (o *GetCharactersCharacterIDSearchUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id search unauthorized response has a 4xx status code
func (o *GetCharactersCharacterIDSearchUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id search unauthorized response has a 5xx status code
func (o *GetCharactersCharacterIDSearchUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id search unauthorized response a status code equal to that given
func (o *GetCharactersCharacterIDSearchUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetCharactersCharacterIDSearchUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDSearchUnauthorized) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDSearchUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCharactersCharacterIDSearchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchForbidden creates a GetCharactersCharacterIDSearchForbidden with default headers values
func NewGetCharactersCharacterIDSearchForbidden() *GetCharactersCharacterIDSearchForbidden {
	return &GetCharactersCharacterIDSearchForbidden{}
}

/*
GetCharactersCharacterIDSearchForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCharactersCharacterIDSearchForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get characters character Id search forbidden response has a 2xx status code
func (o *GetCharactersCharacterIDSearchForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id search forbidden response has a 3xx status code
func (o *GetCharactersCharacterIDSearchForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id search forbidden response has a 4xx status code
func (o *GetCharactersCharacterIDSearchForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id search forbidden response has a 5xx status code
func (o *GetCharactersCharacterIDSearchForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id search forbidden response a status code equal to that given
func (o *GetCharactersCharacterIDSearchForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetCharactersCharacterIDSearchForbidden) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDSearchForbidden) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDSearchForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCharactersCharacterIDSearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchEnhanceYourCalm creates a GetCharactersCharacterIDSearchEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDSearchEnhanceYourCalm() *GetCharactersCharacterIDSearchEnhanceYourCalm {
	return &GetCharactersCharacterIDSearchEnhanceYourCalm{}
}

/*
GetCharactersCharacterIDSearchEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCharactersCharacterIDSearchEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get characters character Id search enhance your calm response has a 2xx status code
func (o *GetCharactersCharacterIDSearchEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id search enhance your calm response has a 3xx status code
func (o *GetCharactersCharacterIDSearchEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id search enhance your calm response has a 4xx status code
func (o *GetCharactersCharacterIDSearchEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id search enhance your calm response has a 5xx status code
func (o *GetCharactersCharacterIDSearchEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id search enhance your calm response a status code equal to that given
func (o *GetCharactersCharacterIDSearchEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

func (o *GetCharactersCharacterIDSearchEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDSearchEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDSearchEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCharactersCharacterIDSearchEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchInternalServerError creates a GetCharactersCharacterIDSearchInternalServerError with default headers values
func NewGetCharactersCharacterIDSearchInternalServerError() *GetCharactersCharacterIDSearchInternalServerError {
	return &GetCharactersCharacterIDSearchInternalServerError{}
}

/*
GetCharactersCharacterIDSearchInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCharactersCharacterIDSearchInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get characters character Id search internal server error response has a 2xx status code
func (o *GetCharactersCharacterIDSearchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id search internal server error response has a 3xx status code
func (o *GetCharactersCharacterIDSearchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id search internal server error response has a 4xx status code
func (o *GetCharactersCharacterIDSearchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id search internal server error response has a 5xx status code
func (o *GetCharactersCharacterIDSearchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id search internal server error response a status code equal to that given
func (o *GetCharactersCharacterIDSearchInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCharactersCharacterIDSearchInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDSearchInternalServerError) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDSearchInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCharactersCharacterIDSearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchServiceUnavailable creates a GetCharactersCharacterIDSearchServiceUnavailable with default headers values
func NewGetCharactersCharacterIDSearchServiceUnavailable() *GetCharactersCharacterIDSearchServiceUnavailable {
	return &GetCharactersCharacterIDSearchServiceUnavailable{}
}

/*
GetCharactersCharacterIDSearchServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCharactersCharacterIDSearchServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get characters character Id search service unavailable response has a 2xx status code
func (o *GetCharactersCharacterIDSearchServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id search service unavailable response has a 3xx status code
func (o *GetCharactersCharacterIDSearchServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id search service unavailable response has a 4xx status code
func (o *GetCharactersCharacterIDSearchServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id search service unavailable response has a 5xx status code
func (o *GetCharactersCharacterIDSearchServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id search service unavailable response a status code equal to that given
func (o *GetCharactersCharacterIDSearchServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetCharactersCharacterIDSearchServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDSearchServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDSearchServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCharactersCharacterIDSearchServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchGatewayTimeout creates a GetCharactersCharacterIDSearchGatewayTimeout with default headers values
func NewGetCharactersCharacterIDSearchGatewayTimeout() *GetCharactersCharacterIDSearchGatewayTimeout {
	return &GetCharactersCharacterIDSearchGatewayTimeout{}
}

/*
GetCharactersCharacterIDSearchGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDSearchGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get characters character Id search gateway timeout response has a 2xx status code
func (o *GetCharactersCharacterIDSearchGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id search gateway timeout response has a 3xx status code
func (o *GetCharactersCharacterIDSearchGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id search gateway timeout response has a 4xx status code
func (o *GetCharactersCharacterIDSearchGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id search gateway timeout response has a 5xx status code
func (o *GetCharactersCharacterIDSearchGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id search gateway timeout response a status code equal to that given
func (o *GetCharactersCharacterIDSearchGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetCharactersCharacterIDSearchGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDSearchGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/search/][%d] getCharactersCharacterIdSearchGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDSearchGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCharactersCharacterIDSearchGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCharactersCharacterIDSearchOKBody get_characters_character_id_search_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDSearchOKBody
*/
type GetCharactersCharacterIDSearchOKBody struct {

	// get_characters_character_id_search_agent
	//
	// agent array
	// Max Items: 500
	Agent []int32 `json:"agent"`

	// get_characters_character_id_search_alliance
	//
	// alliance array
	// Max Items: 500
	Alliance []int32 `json:"alliance"`

	// get_characters_character_id_search_character
	//
	// character array
	// Max Items: 500
	Character []int32 `json:"character"`

	// get_characters_character_id_search_constellation
	//
	// constellation array
	// Max Items: 500
	Constellation []int32 `json:"constellation"`

	// get_characters_character_id_search_corporation
	//
	// corporation array
	// Max Items: 500
	Corporation []int32 `json:"corporation"`

	// get_characters_character_id_search_faction
	//
	// faction array
	// Max Items: 500
	Faction []int32 `json:"faction"`

	// get_characters_character_id_search_inventory_type
	//
	// inventory_type array
	// Max Items: 500
	InventoryType []int32 `json:"inventory_type"`

	// get_characters_character_id_search_region
	//
	// region array
	// Max Items: 500
	Region []int32 `json:"region"`

	// get_characters_character_id_search_solar_system
	//
	// solar_system array
	// Max Items: 500
	SolarSystem []int32 `json:"solar_system"`

	// get_characters_character_id_search_station
	//
	// station array
	// Max Items: 500
	Station []int32 `json:"station"`

	// get_characters_character_id_search_structure
	//
	// structure array
	// Max Items: 500
	Structure []int64 `json:"structure"`
}

// Validate validates this get characters character ID search o k body
func (o *GetCharactersCharacterIDSearchOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAgent(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAlliance(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCharacter(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateConstellation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCorporation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFaction(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateInventoryType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSolarSystem(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStructure(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDSearchOKBody) validateAgent(formats strfmt.Registry) error {
	if swag.IsZero(o.Agent) { // not required
		return nil
	}

	iAgentSize := int64(len(o.Agent))

	if err := validate.MaxItems("getCharactersCharacterIdSearchOK"+"."+"agent", "body", iAgentSize, 500); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDSearchOKBody) validateAlliance(formats strfmt.Registry) error {
	if swag.IsZero(o.Alliance) { // not required
		return nil
	}

	iAllianceSize := int64(len(o.Alliance))

	if err := validate.MaxItems("getCharactersCharacterIdSearchOK"+"."+"alliance", "body", iAllianceSize, 500); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDSearchOKBody) validateCharacter(formats strfmt.Registry) error {
	if swag.IsZero(o.Character) { // not required
		return nil
	}

	iCharacterSize := int64(len(o.Character))

	if err := validate.MaxItems("getCharactersCharacterIdSearchOK"+"."+"character", "body", iCharacterSize, 500); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDSearchOKBody) validateConstellation(formats strfmt.Registry) error {
	if swag.IsZero(o.Constellation) { // not required
		return nil
	}

	iConstellationSize := int64(len(o.Constellation))

	if err := validate.MaxItems("getCharactersCharacterIdSearchOK"+"."+"constellation", "body", iConstellationSize, 500); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDSearchOKBody) validateCorporation(formats strfmt.Registry) error {
	if swag.IsZero(o.Corporation) { // not required
		return nil
	}

	iCorporationSize := int64(len(o.Corporation))

	if err := validate.MaxItems("getCharactersCharacterIdSearchOK"+"."+"corporation", "body", iCorporationSize, 500); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDSearchOKBody) validateFaction(formats strfmt.Registry) error {
	if swag.IsZero(o.Faction) { // not required
		return nil
	}

	iFactionSize := int64(len(o.Faction))

	if err := validate.MaxItems("getCharactersCharacterIdSearchOK"+"."+"faction", "body", iFactionSize, 500); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDSearchOKBody) validateInventoryType(formats strfmt.Registry) error {
	if swag.IsZero(o.InventoryType) { // not required
		return nil
	}

	iInventoryTypeSize := int64(len(o.InventoryType))

	if err := validate.MaxItems("getCharactersCharacterIdSearchOK"+"."+"inventory_type", "body", iInventoryTypeSize, 500); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDSearchOKBody) validateRegion(formats strfmt.Registry) error {
	if swag.IsZero(o.Region) { // not required
		return nil
	}

	iRegionSize := int64(len(o.Region))

	if err := validate.MaxItems("getCharactersCharacterIdSearchOK"+"."+"region", "body", iRegionSize, 500); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDSearchOKBody) validateSolarSystem(formats strfmt.Registry) error {
	if swag.IsZero(o.SolarSystem) { // not required
		return nil
	}

	iSolarSystemSize := int64(len(o.SolarSystem))

	if err := validate.MaxItems("getCharactersCharacterIdSearchOK"+"."+"solar_system", "body", iSolarSystemSize, 500); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDSearchOKBody) validateStation(formats strfmt.Registry) error {
	if swag.IsZero(o.Station) { // not required
		return nil
	}

	iStationSize := int64(len(o.Station))

	if err := validate.MaxItems("getCharactersCharacterIdSearchOK"+"."+"station", "body", iStationSize, 500); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDSearchOKBody) validateStructure(formats strfmt.Registry) error {
	if swag.IsZero(o.Structure) { // not required
		return nil
	}

	iStructureSize := int64(len(o.Structure))

	if err := validate.MaxItems("getCharactersCharacterIdSearchOK"+"."+"structure", "body", iStructureSize, 500); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID search o k body based on context it is used
func (o *GetCharactersCharacterIDSearchOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDSearchOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDSearchOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDSearchOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
