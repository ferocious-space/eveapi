// Code generated by go-swagger; DO NOT EDIT.

package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ferocious-space/eveapi/models"
)

// PutCharactersCharacterIDContactsReader is a Reader for the PutCharactersCharacterIDContacts structure.
type PutCharactersCharacterIDContactsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutCharactersCharacterIDContactsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutCharactersCharacterIDContactsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutCharactersCharacterIDContactsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutCharactersCharacterIDContactsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutCharactersCharacterIDContactsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewPutCharactersCharacterIDContactsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutCharactersCharacterIDContactsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutCharactersCharacterIDContactsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPutCharactersCharacterIDContactsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutCharactersCharacterIDContactsNoContent creates a PutCharactersCharacterIDContactsNoContent with default headers values
func NewPutCharactersCharacterIDContactsNoContent() *PutCharactersCharacterIDContactsNoContent {
	return &PutCharactersCharacterIDContactsNoContent{}
}

/*
PutCharactersCharacterIDContactsNoContent describes a response with status code 204, with default header values.

Contacts updated
*/
type PutCharactersCharacterIDContactsNoContent struct {
}

// IsSuccess returns true when this put characters character Id contacts no content response has a 2xx status code
func (o *PutCharactersCharacterIDContactsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put characters character Id contacts no content response has a 3xx status code
func (o *PutCharactersCharacterIDContactsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put characters character Id contacts no content response has a 4xx status code
func (o *PutCharactersCharacterIDContactsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put characters character Id contacts no content response has a 5xx status code
func (o *PutCharactersCharacterIDContactsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put characters character Id contacts no content response a status code equal to that given
func (o *PutCharactersCharacterIDContactsNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *PutCharactersCharacterIDContactsNoContent) Error() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsNoContent ", 204)
}

func (o *PutCharactersCharacterIDContactsNoContent) String() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsNoContent ", 204)
}

func (o *PutCharactersCharacterIDContactsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutCharactersCharacterIDContactsBadRequest creates a PutCharactersCharacterIDContactsBadRequest with default headers values
func NewPutCharactersCharacterIDContactsBadRequest() *PutCharactersCharacterIDContactsBadRequest {
	return &PutCharactersCharacterIDContactsBadRequest{}
}

/*
PutCharactersCharacterIDContactsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutCharactersCharacterIDContactsBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this put characters character Id contacts bad request response has a 2xx status code
func (o *PutCharactersCharacterIDContactsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put characters character Id contacts bad request response has a 3xx status code
func (o *PutCharactersCharacterIDContactsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put characters character Id contacts bad request response has a 4xx status code
func (o *PutCharactersCharacterIDContactsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put characters character Id contacts bad request response has a 5xx status code
func (o *PutCharactersCharacterIDContactsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put characters character Id contacts bad request response a status code equal to that given
func (o *PutCharactersCharacterIDContactsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutCharactersCharacterIDContactsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsBadRequest  %+v", 400, o.Payload)
}

func (o *PutCharactersCharacterIDContactsBadRequest) String() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsBadRequest  %+v", 400, o.Payload)
}

func (o *PutCharactersCharacterIDContactsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *PutCharactersCharacterIDContactsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCharactersCharacterIDContactsUnauthorized creates a PutCharactersCharacterIDContactsUnauthorized with default headers values
func NewPutCharactersCharacterIDContactsUnauthorized() *PutCharactersCharacterIDContactsUnauthorized {
	return &PutCharactersCharacterIDContactsUnauthorized{}
}

/*
PutCharactersCharacterIDContactsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutCharactersCharacterIDContactsUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this put characters character Id contacts unauthorized response has a 2xx status code
func (o *PutCharactersCharacterIDContactsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put characters character Id contacts unauthorized response has a 3xx status code
func (o *PutCharactersCharacterIDContactsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put characters character Id contacts unauthorized response has a 4xx status code
func (o *PutCharactersCharacterIDContactsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put characters character Id contacts unauthorized response has a 5xx status code
func (o *PutCharactersCharacterIDContactsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put characters character Id contacts unauthorized response a status code equal to that given
func (o *PutCharactersCharacterIDContactsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutCharactersCharacterIDContactsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutCharactersCharacterIDContactsUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsUnauthorized  %+v", 401, o.Payload)
}

func (o *PutCharactersCharacterIDContactsUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *PutCharactersCharacterIDContactsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCharactersCharacterIDContactsForbidden creates a PutCharactersCharacterIDContactsForbidden with default headers values
func NewPutCharactersCharacterIDContactsForbidden() *PutCharactersCharacterIDContactsForbidden {
	return &PutCharactersCharacterIDContactsForbidden{}
}

/*
PutCharactersCharacterIDContactsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutCharactersCharacterIDContactsForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this put characters character Id contacts forbidden response has a 2xx status code
func (o *PutCharactersCharacterIDContactsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put characters character Id contacts forbidden response has a 3xx status code
func (o *PutCharactersCharacterIDContactsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put characters character Id contacts forbidden response has a 4xx status code
func (o *PutCharactersCharacterIDContactsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put characters character Id contacts forbidden response has a 5xx status code
func (o *PutCharactersCharacterIDContactsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put characters character Id contacts forbidden response a status code equal to that given
func (o *PutCharactersCharacterIDContactsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutCharactersCharacterIDContactsForbidden) Error() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsForbidden  %+v", 403, o.Payload)
}

func (o *PutCharactersCharacterIDContactsForbidden) String() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsForbidden  %+v", 403, o.Payload)
}

func (o *PutCharactersCharacterIDContactsForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *PutCharactersCharacterIDContactsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCharactersCharacterIDContactsEnhanceYourCalm creates a PutCharactersCharacterIDContactsEnhanceYourCalm with default headers values
func NewPutCharactersCharacterIDContactsEnhanceYourCalm() *PutCharactersCharacterIDContactsEnhanceYourCalm {
	return &PutCharactersCharacterIDContactsEnhanceYourCalm{}
}

/*
PutCharactersCharacterIDContactsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type PutCharactersCharacterIDContactsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this put characters character Id contacts enhance your calm response has a 2xx status code
func (o *PutCharactersCharacterIDContactsEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put characters character Id contacts enhance your calm response has a 3xx status code
func (o *PutCharactersCharacterIDContactsEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put characters character Id contacts enhance your calm response has a 4xx status code
func (o *PutCharactersCharacterIDContactsEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this put characters character Id contacts enhance your calm response has a 5xx status code
func (o *PutCharactersCharacterIDContactsEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this put characters character Id contacts enhance your calm response a status code equal to that given
func (o *PutCharactersCharacterIDContactsEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

func (o *PutCharactersCharacterIDContactsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *PutCharactersCharacterIDContactsEnhanceYourCalm) String() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *PutCharactersCharacterIDContactsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *PutCharactersCharacterIDContactsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCharactersCharacterIDContactsInternalServerError creates a PutCharactersCharacterIDContactsInternalServerError with default headers values
func NewPutCharactersCharacterIDContactsInternalServerError() *PutCharactersCharacterIDContactsInternalServerError {
	return &PutCharactersCharacterIDContactsInternalServerError{}
}

/*
PutCharactersCharacterIDContactsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PutCharactersCharacterIDContactsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this put characters character Id contacts internal server error response has a 2xx status code
func (o *PutCharactersCharacterIDContactsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put characters character Id contacts internal server error response has a 3xx status code
func (o *PutCharactersCharacterIDContactsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put characters character Id contacts internal server error response has a 4xx status code
func (o *PutCharactersCharacterIDContactsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put characters character Id contacts internal server error response has a 5xx status code
func (o *PutCharactersCharacterIDContactsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put characters character Id contacts internal server error response a status code equal to that given
func (o *PutCharactersCharacterIDContactsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutCharactersCharacterIDContactsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutCharactersCharacterIDContactsInternalServerError) String() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsInternalServerError  %+v", 500, o.Payload)
}

func (o *PutCharactersCharacterIDContactsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *PutCharactersCharacterIDContactsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCharactersCharacterIDContactsServiceUnavailable creates a PutCharactersCharacterIDContactsServiceUnavailable with default headers values
func NewPutCharactersCharacterIDContactsServiceUnavailable() *PutCharactersCharacterIDContactsServiceUnavailable {
	return &PutCharactersCharacterIDContactsServiceUnavailable{}
}

/*
PutCharactersCharacterIDContactsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type PutCharactersCharacterIDContactsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this put characters character Id contacts service unavailable response has a 2xx status code
func (o *PutCharactersCharacterIDContactsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put characters character Id contacts service unavailable response has a 3xx status code
func (o *PutCharactersCharacterIDContactsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put characters character Id contacts service unavailable response has a 4xx status code
func (o *PutCharactersCharacterIDContactsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this put characters character Id contacts service unavailable response has a 5xx status code
func (o *PutCharactersCharacterIDContactsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this put characters character Id contacts service unavailable response a status code equal to that given
func (o *PutCharactersCharacterIDContactsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *PutCharactersCharacterIDContactsServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutCharactersCharacterIDContactsServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutCharactersCharacterIDContactsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *PutCharactersCharacterIDContactsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCharactersCharacterIDContactsGatewayTimeout creates a PutCharactersCharacterIDContactsGatewayTimeout with default headers values
func NewPutCharactersCharacterIDContactsGatewayTimeout() *PutCharactersCharacterIDContactsGatewayTimeout {
	return &PutCharactersCharacterIDContactsGatewayTimeout{}
}

/*
PutCharactersCharacterIDContactsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type PutCharactersCharacterIDContactsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this put characters character Id contacts gateway timeout response has a 2xx status code
func (o *PutCharactersCharacterIDContactsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put characters character Id contacts gateway timeout response has a 3xx status code
func (o *PutCharactersCharacterIDContactsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put characters character Id contacts gateway timeout response has a 4xx status code
func (o *PutCharactersCharacterIDContactsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this put characters character Id contacts gateway timeout response has a 5xx status code
func (o *PutCharactersCharacterIDContactsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this put characters character Id contacts gateway timeout response a status code equal to that given
func (o *PutCharactersCharacterIDContactsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *PutCharactersCharacterIDContactsGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutCharactersCharacterIDContactsGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /v2/characters/{character_id}/contacts/][%d] putCharactersCharacterIdContactsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutCharactersCharacterIDContactsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *PutCharactersCharacterIDContactsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
