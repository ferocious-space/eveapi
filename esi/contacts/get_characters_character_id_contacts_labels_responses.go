// Code generated by go-swagger; DO NOT EDIT.

package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCharactersCharacterIDContactsLabelsReader is a Reader for the GetCharactersCharacterIDContactsLabels structure.
type GetCharactersCharacterIDContactsLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDContactsLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCharactersCharacterIDContactsLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCharactersCharacterIDContactsLabelsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCharactersCharacterIDContactsLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCharactersCharacterIDContactsLabelsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCharactersCharacterIDContactsLabelsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCharactersCharacterIDContactsLabelsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCharactersCharacterIDContactsLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCharactersCharacterIDContactsLabelsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCharactersCharacterIDContactsLabelsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/characters/{character_id}/contacts/labels/] get_characters_character_id_contacts_labels", response, response.Code())
	}
}

// NewGetCharactersCharacterIDContactsLabelsOK creates a GetCharactersCharacterIDContactsLabelsOK with default headers values
func NewGetCharactersCharacterIDContactsLabelsOK() *GetCharactersCharacterIDContactsLabelsOK {
	return &GetCharactersCharacterIDContactsLabelsOK{}
}

/*
GetCharactersCharacterIDContactsLabelsOK describes a response with status code 200, with default header values.

A list of contact labels
*/
type GetCharactersCharacterIDContactsLabelsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetCharactersCharacterIDContactsLabelsOKBodyItems0
}

// IsSuccess returns true when this get characters character Id contacts labels o k response has a 2xx status code
func (o *GetCharactersCharacterIDContactsLabelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get characters character Id contacts labels o k response has a 3xx status code
func (o *GetCharactersCharacterIDContactsLabelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id contacts labels o k response has a 4xx status code
func (o *GetCharactersCharacterIDContactsLabelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id contacts labels o k response has a 5xx status code
func (o *GetCharactersCharacterIDContactsLabelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id contacts labels o k response a status code equal to that given
func (o *GetCharactersCharacterIDContactsLabelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get characters character Id contacts labels o k response
func (o *GetCharactersCharacterIDContactsLabelsOK) Code() int {
	return 200
}

func (o *GetCharactersCharacterIDContactsLabelsOK) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsOK) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsOK) GetPayload() []*GetCharactersCharacterIDContactsLabelsOKBodyItems0 {
	return o.Payload
}

func (o *GetCharactersCharacterIDContactsLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsLabelsNotModified creates a GetCharactersCharacterIDContactsLabelsNotModified with default headers values
func NewGetCharactersCharacterIDContactsLabelsNotModified() *GetCharactersCharacterIDContactsLabelsNotModified {
	return &GetCharactersCharacterIDContactsLabelsNotModified{}
}

/*
GetCharactersCharacterIDContactsLabelsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCharactersCharacterIDContactsLabelsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get characters character Id contacts labels not modified response has a 2xx status code
func (o *GetCharactersCharacterIDContactsLabelsNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id contacts labels not modified response has a 3xx status code
func (o *GetCharactersCharacterIDContactsLabelsNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get characters character Id contacts labels not modified response has a 4xx status code
func (o *GetCharactersCharacterIDContactsLabelsNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id contacts labels not modified response has a 5xx status code
func (o *GetCharactersCharacterIDContactsLabelsNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id contacts labels not modified response a status code equal to that given
func (o *GetCharactersCharacterIDContactsLabelsNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get characters character Id contacts labels not modified response
func (o *GetCharactersCharacterIDContactsLabelsNotModified) Code() int {
	return 304
}

func (o *GetCharactersCharacterIDContactsLabelsNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsNotModified ", 304)
}

func (o *GetCharactersCharacterIDContactsLabelsNotModified) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsNotModified ", 304)
}

func (o *GetCharactersCharacterIDContactsLabelsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCharactersCharacterIDContactsLabelsBadRequest creates a GetCharactersCharacterIDContactsLabelsBadRequest with default headers values
func NewGetCharactersCharacterIDContactsLabelsBadRequest() *GetCharactersCharacterIDContactsLabelsBadRequest {
	return &GetCharactersCharacterIDContactsLabelsBadRequest{}
}

/*
GetCharactersCharacterIDContactsLabelsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCharactersCharacterIDContactsLabelsBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get characters character Id contacts labels bad request response has a 2xx status code
func (o *GetCharactersCharacterIDContactsLabelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id contacts labels bad request response has a 3xx status code
func (o *GetCharactersCharacterIDContactsLabelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id contacts labels bad request response has a 4xx status code
func (o *GetCharactersCharacterIDContactsLabelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id contacts labels bad request response has a 5xx status code
func (o *GetCharactersCharacterIDContactsLabelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id contacts labels bad request response a status code equal to that given
func (o *GetCharactersCharacterIDContactsLabelsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get characters character Id contacts labels bad request response
func (o *GetCharactersCharacterIDContactsLabelsBadRequest) Code() int {
	return 400
}

func (o *GetCharactersCharacterIDContactsLabelsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCharactersCharacterIDContactsLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsLabelsUnauthorized creates a GetCharactersCharacterIDContactsLabelsUnauthorized with default headers values
func NewGetCharactersCharacterIDContactsLabelsUnauthorized() *GetCharactersCharacterIDContactsLabelsUnauthorized {
	return &GetCharactersCharacterIDContactsLabelsUnauthorized{}
}

/*
GetCharactersCharacterIDContactsLabelsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCharactersCharacterIDContactsLabelsUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get characters character Id contacts labels unauthorized response has a 2xx status code
func (o *GetCharactersCharacterIDContactsLabelsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id contacts labels unauthorized response has a 3xx status code
func (o *GetCharactersCharacterIDContactsLabelsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id contacts labels unauthorized response has a 4xx status code
func (o *GetCharactersCharacterIDContactsLabelsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id contacts labels unauthorized response has a 5xx status code
func (o *GetCharactersCharacterIDContactsLabelsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id contacts labels unauthorized response a status code equal to that given
func (o *GetCharactersCharacterIDContactsLabelsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get characters character Id contacts labels unauthorized response
func (o *GetCharactersCharacterIDContactsLabelsUnauthorized) Code() int {
	return 401
}

func (o *GetCharactersCharacterIDContactsLabelsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCharactersCharacterIDContactsLabelsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsLabelsForbidden creates a GetCharactersCharacterIDContactsLabelsForbidden with default headers values
func NewGetCharactersCharacterIDContactsLabelsForbidden() *GetCharactersCharacterIDContactsLabelsForbidden {
	return &GetCharactersCharacterIDContactsLabelsForbidden{}
}

/*
GetCharactersCharacterIDContactsLabelsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCharactersCharacterIDContactsLabelsForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get characters character Id contacts labels forbidden response has a 2xx status code
func (o *GetCharactersCharacterIDContactsLabelsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id contacts labels forbidden response has a 3xx status code
func (o *GetCharactersCharacterIDContactsLabelsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id contacts labels forbidden response has a 4xx status code
func (o *GetCharactersCharacterIDContactsLabelsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id contacts labels forbidden response has a 5xx status code
func (o *GetCharactersCharacterIDContactsLabelsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id contacts labels forbidden response a status code equal to that given
func (o *GetCharactersCharacterIDContactsLabelsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get characters character Id contacts labels forbidden response
func (o *GetCharactersCharacterIDContactsLabelsForbidden) Code() int {
	return 403
}

func (o *GetCharactersCharacterIDContactsLabelsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCharactersCharacterIDContactsLabelsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsLabelsEnhanceYourCalm creates a GetCharactersCharacterIDContactsLabelsEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDContactsLabelsEnhanceYourCalm() *GetCharactersCharacterIDContactsLabelsEnhanceYourCalm {
	return &GetCharactersCharacterIDContactsLabelsEnhanceYourCalm{}
}

/*
GetCharactersCharacterIDContactsLabelsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCharactersCharacterIDContactsLabelsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get characters character Id contacts labels enhance your calm response has a 2xx status code
func (o *GetCharactersCharacterIDContactsLabelsEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id contacts labels enhance your calm response has a 3xx status code
func (o *GetCharactersCharacterIDContactsLabelsEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id contacts labels enhance your calm response has a 4xx status code
func (o *GetCharactersCharacterIDContactsLabelsEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id contacts labels enhance your calm response has a 5xx status code
func (o *GetCharactersCharacterIDContactsLabelsEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id contacts labels enhance your calm response a status code equal to that given
func (o *GetCharactersCharacterIDContactsLabelsEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get characters character Id contacts labels enhance your calm response
func (o *GetCharactersCharacterIDContactsLabelsEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetCharactersCharacterIDContactsLabelsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCharactersCharacterIDContactsLabelsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsLabelsInternalServerError creates a GetCharactersCharacterIDContactsLabelsInternalServerError with default headers values
func NewGetCharactersCharacterIDContactsLabelsInternalServerError() *GetCharactersCharacterIDContactsLabelsInternalServerError {
	return &GetCharactersCharacterIDContactsLabelsInternalServerError{}
}

/*
GetCharactersCharacterIDContactsLabelsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCharactersCharacterIDContactsLabelsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get characters character Id contacts labels internal server error response has a 2xx status code
func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id contacts labels internal server error response has a 3xx status code
func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id contacts labels internal server error response has a 4xx status code
func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id contacts labels internal server error response has a 5xx status code
func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id contacts labels internal server error response a status code equal to that given
func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get characters character Id contacts labels internal server error response
func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) Code() int {
	return 500
}

func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsLabelsServiceUnavailable creates a GetCharactersCharacterIDContactsLabelsServiceUnavailable with default headers values
func NewGetCharactersCharacterIDContactsLabelsServiceUnavailable() *GetCharactersCharacterIDContactsLabelsServiceUnavailable {
	return &GetCharactersCharacterIDContactsLabelsServiceUnavailable{}
}

/*
GetCharactersCharacterIDContactsLabelsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCharactersCharacterIDContactsLabelsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get characters character Id contacts labels service unavailable response has a 2xx status code
func (o *GetCharactersCharacterIDContactsLabelsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id contacts labels service unavailable response has a 3xx status code
func (o *GetCharactersCharacterIDContactsLabelsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id contacts labels service unavailable response has a 4xx status code
func (o *GetCharactersCharacterIDContactsLabelsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id contacts labels service unavailable response has a 5xx status code
func (o *GetCharactersCharacterIDContactsLabelsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id contacts labels service unavailable response a status code equal to that given
func (o *GetCharactersCharacterIDContactsLabelsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get characters character Id contacts labels service unavailable response
func (o *GetCharactersCharacterIDContactsLabelsServiceUnavailable) Code() int {
	return 503
}

func (o *GetCharactersCharacterIDContactsLabelsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCharactersCharacterIDContactsLabelsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsLabelsGatewayTimeout creates a GetCharactersCharacterIDContactsLabelsGatewayTimeout with default headers values
func NewGetCharactersCharacterIDContactsLabelsGatewayTimeout() *GetCharactersCharacterIDContactsLabelsGatewayTimeout {
	return &GetCharactersCharacterIDContactsLabelsGatewayTimeout{}
}

/*
GetCharactersCharacterIDContactsLabelsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDContactsLabelsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get characters character Id contacts labels gateway timeout response has a 2xx status code
func (o *GetCharactersCharacterIDContactsLabelsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id contacts labels gateway timeout response has a 3xx status code
func (o *GetCharactersCharacterIDContactsLabelsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id contacts labels gateway timeout response has a 4xx status code
func (o *GetCharactersCharacterIDContactsLabelsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id contacts labels gateway timeout response has a 5xx status code
func (o *GetCharactersCharacterIDContactsLabelsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id contacts labels gateway timeout response a status code equal to that given
func (o *GetCharactersCharacterIDContactsLabelsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get characters character Id contacts labels gateway timeout response
func (o *GetCharactersCharacterIDContactsLabelsGatewayTimeout) Code() int {
	return 504
}

func (o *GetCharactersCharacterIDContactsLabelsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/contacts/labels/][%d] getCharactersCharacterIdContactsLabelsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDContactsLabelsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCharactersCharacterIDContactsLabelsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCharactersCharacterIDContactsLabelsOKBodyItems0 get_characters_character_id_contacts_labels_200_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDContactsLabelsOKBodyItems0
*/
type GetCharactersCharacterIDContactsLabelsOKBodyItems0 struct {

	// get_characters_character_id_contacts_labels_label_id
	//
	// label_id integer
	// Required: true
	LabelID *int64 `json:"label_id"`

	// get_characters_character_id_contacts_labels_label_name
	//
	// label_name string
	// Required: true
	LabelName *string `json:"label_name"`
}

// Validate validates this get characters character ID contacts labels o k body items0
func (o *GetCharactersCharacterIDContactsLabelsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLabelID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabelName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDContactsLabelsOKBodyItems0) validateLabelID(formats strfmt.Registry) error {

	if err := validate.Required("label_id", "body", o.LabelID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDContactsLabelsOKBodyItems0) validateLabelName(formats strfmt.Registry) error {

	if err := validate.Required("label_name", "body", o.LabelName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID contacts labels o k body items0 based on context it is used
func (o *GetCharactersCharacterIDContactsLabelsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDContactsLabelsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDContactsLabelsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDContactsLabelsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
