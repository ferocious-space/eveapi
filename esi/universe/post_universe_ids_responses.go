// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// PostUniverseIdsReader is a Reader for the PostUniverseIds structure.
type PostUniverseIdsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUniverseIdsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUniverseIdsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUniverseIdsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewPostUniverseIdsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUniverseIdsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostUniverseIdsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostUniverseIdsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostUniverseIdsOK creates a PostUniverseIdsOK with default headers values
func NewPostUniverseIdsOK() *PostUniverseIdsOK {
	return &PostUniverseIdsOK{}
}

/* PostUniverseIdsOK describes a response with status code 200, with default header values.

List of id/name associations for a set of names divided by category. Any name passed in that did not have a match will be ommitted
*/
type PostUniverseIdsOK struct {

	/* The language used in the response
	 */
	ContentLanguage string

	Payload *PostUniverseIdsOKBody
}

func (o *PostUniverseIdsOK) Error() string {
	return fmt.Sprintf("[POST /v1/universe/ids/][%d] postUniverseIdsOK  %+v", 200, o.Payload)
}
func (o *PostUniverseIdsOK) GetPayload() *PostUniverseIdsOKBody {
	return o.Payload
}

func (o *PostUniverseIdsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Language
	hdrContentLanguage := response.GetHeader("Content-Language")

	if hdrContentLanguage != "" {
		o.ContentLanguage = hdrContentLanguage
	}

	o.Payload = new(PostUniverseIdsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUniverseIdsBadRequest creates a PostUniverseIdsBadRequest with default headers values
func NewPostUniverseIdsBadRequest() *PostUniverseIdsBadRequest {
	return &PostUniverseIdsBadRequest{}
}

/* PostUniverseIdsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostUniverseIdsBadRequest struct {
	Payload *models.BadRequest
}

func (o *PostUniverseIdsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/universe/ids/][%d] postUniverseIdsBadRequest  %+v", 400, o.Payload)
}
func (o *PostUniverseIdsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *PostUniverseIdsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUniverseIdsEnhanceYourCalm creates a PostUniverseIdsEnhanceYourCalm with default headers values
func NewPostUniverseIdsEnhanceYourCalm() *PostUniverseIdsEnhanceYourCalm {
	return &PostUniverseIdsEnhanceYourCalm{}
}

/* PostUniverseIdsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type PostUniverseIdsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *PostUniverseIdsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[POST /v1/universe/ids/][%d] postUniverseIdsEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *PostUniverseIdsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *PostUniverseIdsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUniverseIdsInternalServerError creates a PostUniverseIdsInternalServerError with default headers values
func NewPostUniverseIdsInternalServerError() *PostUniverseIdsInternalServerError {
	return &PostUniverseIdsInternalServerError{}
}

/* PostUniverseIdsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostUniverseIdsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *PostUniverseIdsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/universe/ids/][%d] postUniverseIdsInternalServerError  %+v", 500, o.Payload)
}
func (o *PostUniverseIdsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *PostUniverseIdsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUniverseIdsServiceUnavailable creates a PostUniverseIdsServiceUnavailable with default headers values
func NewPostUniverseIdsServiceUnavailable() *PostUniverseIdsServiceUnavailable {
	return &PostUniverseIdsServiceUnavailable{}
}

/* PostUniverseIdsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type PostUniverseIdsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *PostUniverseIdsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /v1/universe/ids/][%d] postUniverseIdsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PostUniverseIdsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *PostUniverseIdsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUniverseIdsGatewayTimeout creates a PostUniverseIdsGatewayTimeout with default headers values
func NewPostUniverseIdsGatewayTimeout() *PostUniverseIdsGatewayTimeout {
	return &PostUniverseIdsGatewayTimeout{}
}

/* PostUniverseIdsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type PostUniverseIdsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *PostUniverseIdsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/universe/ids/][%d] postUniverseIdsGatewayTimeout  %+v", 504, o.Payload)
}
func (o *PostUniverseIdsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *PostUniverseIdsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostUniverseIdsOKBody post_universe_ids_ok
//
// 200 ok object
swagger:model PostUniverseIdsOKBody
*/
type PostUniverseIdsOKBody struct {

	// post_universe_ids_agents
	//
	// agents array
	// Max Items: 500
	Agents []*PostUniverseIdsOKBodyAgentsItems0 `json:"agents"`

	// post_universe_ids_alliances
	//
	// alliances array
	// Max Items: 500
	Alliances []*PostUniverseIdsOKBodyAlliancesItems0 `json:"alliances"`

	// post_universe_ids_characters
	//
	// characters array
	// Max Items: 500
	Characters []*PostUniverseIdsOKBodyCharactersItems0 `json:"characters"`

	// post_universe_ids_constellations
	//
	// constellations array
	// Max Items: 500
	Constellations []*PostUniverseIdsOKBodyConstellationsItems0 `json:"constellations"`

	// post_universe_ids_corporations
	//
	// corporations array
	// Max Items: 500
	Corporations []*PostUniverseIdsOKBodyCorporationsItems0 `json:"corporations"`

	// post_universe_ids_factions
	//
	// factions array
	// Max Items: 500
	Factions []*PostUniverseIdsOKBodyFactionsItems0 `json:"factions"`

	// post_universe_ids_inventory_types
	//
	// inventory_types array
	// Max Items: 500
	InventoryTypes []*PostUniverseIdsOKBodyInventoryTypesItems0 `json:"inventory_types"`

	// post_universe_ids_regions
	//
	// regions array
	// Max Items: 500
	Regions []*PostUniverseIdsOKBodyRegionsItems0 `json:"regions"`

	// post_universe_ids_stations
	//
	// stations array
	// Max Items: 500
	Stations []*PostUniverseIdsOKBodyStationsItems0 `json:"stations"`

	// post_universe_ids_systems
	//
	// systems array
	// Max Items: 500
	Systems []*PostUniverseIdsOKBodySystemsItems0 `json:"systems"`
}

// Validate validates this post universe ids o k body
func (o *PostUniverseIdsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAgents(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAlliances(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCharacters(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateConstellations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCorporations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFactions(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateInventoryTypes(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRegions(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSystems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostUniverseIdsOKBody) validateAgents(formats strfmt.Registry) error {
	if swag.IsZero(o.Agents) { // not required
		return nil
	}

	iAgentsSize := int64(len(o.Agents))

	if err := validate.MaxItems("postUniverseIdsOK"+"."+"agents", "body", iAgentsSize, 500); err != nil {
		return err
	}

	for i := 0; i < len(o.Agents); i++ {
		if swag.IsZero(o.Agents[i]) { // not required
			continue
		}

		if o.Agents[i] != nil {
			if err := o.Agents[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "agents" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) validateAlliances(formats strfmt.Registry) error {
	if swag.IsZero(o.Alliances) { // not required
		return nil
	}

	iAlliancesSize := int64(len(o.Alliances))

	if err := validate.MaxItems("postUniverseIdsOK"+"."+"alliances", "body", iAlliancesSize, 500); err != nil {
		return err
	}

	for i := 0; i < len(o.Alliances); i++ {
		if swag.IsZero(o.Alliances[i]) { // not required
			continue
		}

		if o.Alliances[i] != nil {
			if err := o.Alliances[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "alliances" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) validateCharacters(formats strfmt.Registry) error {
	if swag.IsZero(o.Characters) { // not required
		return nil
	}

	iCharactersSize := int64(len(o.Characters))

	if err := validate.MaxItems("postUniverseIdsOK"+"."+"characters", "body", iCharactersSize, 500); err != nil {
		return err
	}

	for i := 0; i < len(o.Characters); i++ {
		if swag.IsZero(o.Characters[i]) { // not required
			continue
		}

		if o.Characters[i] != nil {
			if err := o.Characters[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "characters" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) validateConstellations(formats strfmt.Registry) error {
	if swag.IsZero(o.Constellations) { // not required
		return nil
	}

	iConstellationsSize := int64(len(o.Constellations))

	if err := validate.MaxItems("postUniverseIdsOK"+"."+"constellations", "body", iConstellationsSize, 500); err != nil {
		return err
	}

	for i := 0; i < len(o.Constellations); i++ {
		if swag.IsZero(o.Constellations[i]) { // not required
			continue
		}

		if o.Constellations[i] != nil {
			if err := o.Constellations[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "constellations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) validateCorporations(formats strfmt.Registry) error {
	if swag.IsZero(o.Corporations) { // not required
		return nil
	}

	iCorporationsSize := int64(len(o.Corporations))

	if err := validate.MaxItems("postUniverseIdsOK"+"."+"corporations", "body", iCorporationsSize, 500); err != nil {
		return err
	}

	for i := 0; i < len(o.Corporations); i++ {
		if swag.IsZero(o.Corporations[i]) { // not required
			continue
		}

		if o.Corporations[i] != nil {
			if err := o.Corporations[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "corporations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) validateFactions(formats strfmt.Registry) error {
	if swag.IsZero(o.Factions) { // not required
		return nil
	}

	iFactionsSize := int64(len(o.Factions))

	if err := validate.MaxItems("postUniverseIdsOK"+"."+"factions", "body", iFactionsSize, 500); err != nil {
		return err
	}

	for i := 0; i < len(o.Factions); i++ {
		if swag.IsZero(o.Factions[i]) { // not required
			continue
		}

		if o.Factions[i] != nil {
			if err := o.Factions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "factions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) validateInventoryTypes(formats strfmt.Registry) error {
	if swag.IsZero(o.InventoryTypes) { // not required
		return nil
	}

	iInventoryTypesSize := int64(len(o.InventoryTypes))

	if err := validate.MaxItems("postUniverseIdsOK"+"."+"inventory_types", "body", iInventoryTypesSize, 500); err != nil {
		return err
	}

	for i := 0; i < len(o.InventoryTypes); i++ {
		if swag.IsZero(o.InventoryTypes[i]) { // not required
			continue
		}

		if o.InventoryTypes[i] != nil {
			if err := o.InventoryTypes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "inventory_types" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) validateRegions(formats strfmt.Registry) error {
	if swag.IsZero(o.Regions) { // not required
		return nil
	}

	iRegionsSize := int64(len(o.Regions))

	if err := validate.MaxItems("postUniverseIdsOK"+"."+"regions", "body", iRegionsSize, 500); err != nil {
		return err
	}

	for i := 0; i < len(o.Regions); i++ {
		if swag.IsZero(o.Regions[i]) { // not required
			continue
		}

		if o.Regions[i] != nil {
			if err := o.Regions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "regions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) validateStations(formats strfmt.Registry) error {
	if swag.IsZero(o.Stations) { // not required
		return nil
	}

	iStationsSize := int64(len(o.Stations))

	if err := validate.MaxItems("postUniverseIdsOK"+"."+"stations", "body", iStationsSize, 500); err != nil {
		return err
	}

	for i := 0; i < len(o.Stations); i++ {
		if swag.IsZero(o.Stations[i]) { // not required
			continue
		}

		if o.Stations[i] != nil {
			if err := o.Stations[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "stations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) validateSystems(formats strfmt.Registry) error {
	if swag.IsZero(o.Systems) { // not required
		return nil
	}

	iSystemsSize := int64(len(o.Systems))

	if err := validate.MaxItems("postUniverseIdsOK"+"."+"systems", "body", iSystemsSize, 500); err != nil {
		return err
	}

	for i := 0; i < len(o.Systems); i++ {
		if swag.IsZero(o.Systems[i]) { // not required
			continue
		}

		if o.Systems[i] != nil {
			if err := o.Systems[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "systems" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this post universe ids o k body based on the context it is used
func (o *PostUniverseIdsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAgents(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateAlliances(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateCharacters(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateConstellations(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateCorporations(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateFactions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateInventoryTypes(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateRegions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateStations(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateSystems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostUniverseIdsOKBody) contextValidateAgents(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Agents); i++ {

		if o.Agents[i] != nil {
			if err := o.Agents[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "agents" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) contextValidateAlliances(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Alliances); i++ {

		if o.Alliances[i] != nil {
			if err := o.Alliances[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "alliances" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) contextValidateCharacters(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Characters); i++ {

		if o.Characters[i] != nil {
			if err := o.Characters[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "characters" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) contextValidateConstellations(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Constellations); i++ {

		if o.Constellations[i] != nil {
			if err := o.Constellations[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "constellations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) contextValidateCorporations(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Corporations); i++ {

		if o.Corporations[i] != nil {
			if err := o.Corporations[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "corporations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) contextValidateFactions(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Factions); i++ {

		if o.Factions[i] != nil {
			if err := o.Factions[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "factions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) contextValidateInventoryTypes(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.InventoryTypes); i++ {

		if o.InventoryTypes[i] != nil {
			if err := o.InventoryTypes[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "inventory_types" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) contextValidateRegions(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Regions); i++ {

		if o.Regions[i] != nil {
			if err := o.Regions[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "regions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) contextValidateStations(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Stations); i++ {

		if o.Stations[i] != nil {
			if err := o.Stations[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "stations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostUniverseIdsOKBody) contextValidateSystems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Systems); i++ {

		if o.Systems[i] != nil {
			if err := o.Systems[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postUniverseIdsOK" + "." + "systems" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostUniverseIdsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUniverseIdsOKBody) UnmarshalBinary(b []byte) error {
	var res PostUniverseIdsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostUniverseIdsOKBodyAgentsItems0 post_universe_ids_agent
//
// agent object
swagger:model PostUniverseIdsOKBodyAgentsItems0
*/
type PostUniverseIdsOKBodyAgentsItems0 struct {

	// post_universe_ids_id
	//
	// id integer
	ID int32 `json:"id,omitempty"`

	// post_universe_ids_name
	//
	// name string
	Name string `json:"name,omitempty"`
}

// Validate validates this post universe ids o k body agents items0
func (o *PostUniverseIdsOKBodyAgentsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post universe ids o k body agents items0 based on context it is used
func (o *PostUniverseIdsOKBodyAgentsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyAgentsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyAgentsItems0) UnmarshalBinary(b []byte) error {
	var res PostUniverseIdsOKBodyAgentsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostUniverseIdsOKBodyAlliancesItems0 post_universe_ids_alliance
//
// alliance object
swagger:model PostUniverseIdsOKBodyAlliancesItems0
*/
type PostUniverseIdsOKBodyAlliancesItems0 struct {

	// post_universe_ids_alliance_id
	//
	// id integer
	ID int32 `json:"id,omitempty"`

	// post_universe_ids_alliance_name
	//
	// name string
	Name string `json:"name,omitempty"`
}

// Validate validates this post universe ids o k body alliances items0
func (o *PostUniverseIdsOKBodyAlliancesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post universe ids o k body alliances items0 based on context it is used
func (o *PostUniverseIdsOKBodyAlliancesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyAlliancesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyAlliancesItems0) UnmarshalBinary(b []byte) error {
	var res PostUniverseIdsOKBodyAlliancesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostUniverseIdsOKBodyCharactersItems0 post_universe_ids_character
//
// character object
swagger:model PostUniverseIdsOKBodyCharactersItems0
*/
type PostUniverseIdsOKBodyCharactersItems0 struct {

	// post_universe_ids_character_id
	//
	// id integer
	ID int32 `json:"id,omitempty"`

	// post_universe_ids_character_name
	//
	// name string
	Name string `json:"name,omitempty"`
}

// Validate validates this post universe ids o k body characters items0
func (o *PostUniverseIdsOKBodyCharactersItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post universe ids o k body characters items0 based on context it is used
func (o *PostUniverseIdsOKBodyCharactersItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyCharactersItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyCharactersItems0) UnmarshalBinary(b []byte) error {
	var res PostUniverseIdsOKBodyCharactersItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostUniverseIdsOKBodyConstellationsItems0 post_universe_ids_constellation
//
// constellation object
swagger:model PostUniverseIdsOKBodyConstellationsItems0
*/
type PostUniverseIdsOKBodyConstellationsItems0 struct {

	// post_universe_ids_constellation_id
	//
	// id integer
	ID int32 `json:"id,omitempty"`

	// post_universe_ids_constellation_name
	//
	// name string
	Name string `json:"name,omitempty"`
}

// Validate validates this post universe ids o k body constellations items0
func (o *PostUniverseIdsOKBodyConstellationsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post universe ids o k body constellations items0 based on context it is used
func (o *PostUniverseIdsOKBodyConstellationsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyConstellationsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyConstellationsItems0) UnmarshalBinary(b []byte) error {
	var res PostUniverseIdsOKBodyConstellationsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostUniverseIdsOKBodyCorporationsItems0 post_universe_ids_corporation
//
// corporation object
swagger:model PostUniverseIdsOKBodyCorporationsItems0
*/
type PostUniverseIdsOKBodyCorporationsItems0 struct {

	// post_universe_ids_corporation_id
	//
	// id integer
	ID int32 `json:"id,omitempty"`

	// post_universe_ids_corporation_name
	//
	// name string
	Name string `json:"name,omitempty"`
}

// Validate validates this post universe ids o k body corporations items0
func (o *PostUniverseIdsOKBodyCorporationsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post universe ids o k body corporations items0 based on context it is used
func (o *PostUniverseIdsOKBodyCorporationsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyCorporationsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyCorporationsItems0) UnmarshalBinary(b []byte) error {
	var res PostUniverseIdsOKBodyCorporationsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostUniverseIdsOKBodyFactionsItems0 post_universe_ids_faction
//
// faction object
swagger:model PostUniverseIdsOKBodyFactionsItems0
*/
type PostUniverseIdsOKBodyFactionsItems0 struct {

	// post_universe_ids_faction_id
	//
	// id integer
	ID int32 `json:"id,omitempty"`

	// post_universe_ids_faction_name
	//
	// name string
	Name string `json:"name,omitempty"`
}

// Validate validates this post universe ids o k body factions items0
func (o *PostUniverseIdsOKBodyFactionsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post universe ids o k body factions items0 based on context it is used
func (o *PostUniverseIdsOKBodyFactionsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyFactionsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyFactionsItems0) UnmarshalBinary(b []byte) error {
	var res PostUniverseIdsOKBodyFactionsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostUniverseIdsOKBodyInventoryTypesItems0 post_universe_ids_inventory_type
//
// inventory_type object
swagger:model PostUniverseIdsOKBodyInventoryTypesItems0
*/
type PostUniverseIdsOKBodyInventoryTypesItems0 struct {

	// post_universe_ids_inventory_type_id
	//
	// id integer
	ID int32 `json:"id,omitempty"`

	// post_universe_ids_inventory_type_name
	//
	// name string
	Name string `json:"name,omitempty"`
}

// Validate validates this post universe ids o k body inventory types items0
func (o *PostUniverseIdsOKBodyInventoryTypesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post universe ids o k body inventory types items0 based on context it is used
func (o *PostUniverseIdsOKBodyInventoryTypesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyInventoryTypesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyInventoryTypesItems0) UnmarshalBinary(b []byte) error {
	var res PostUniverseIdsOKBodyInventoryTypesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostUniverseIdsOKBodyRegionsItems0 post_universe_ids_region
//
// region object
swagger:model PostUniverseIdsOKBodyRegionsItems0
*/
type PostUniverseIdsOKBodyRegionsItems0 struct {

	// post_universe_ids_region_id
	//
	// id integer
	ID int32 `json:"id,omitempty"`

	// post_universe_ids_region_name
	//
	// name string
	Name string `json:"name,omitempty"`
}

// Validate validates this post universe ids o k body regions items0
func (o *PostUniverseIdsOKBodyRegionsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post universe ids o k body regions items0 based on context it is used
func (o *PostUniverseIdsOKBodyRegionsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyRegionsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyRegionsItems0) UnmarshalBinary(b []byte) error {
	var res PostUniverseIdsOKBodyRegionsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostUniverseIdsOKBodyStationsItems0 post_universe_ids_station
//
// station object
swagger:model PostUniverseIdsOKBodyStationsItems0
*/
type PostUniverseIdsOKBodyStationsItems0 struct {

	// post_universe_ids_station_id
	//
	// id integer
	ID int32 `json:"id,omitempty"`

	// post_universe_ids_station_name
	//
	// name string
	Name string `json:"name,omitempty"`
}

// Validate validates this post universe ids o k body stations items0
func (o *PostUniverseIdsOKBodyStationsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post universe ids o k body stations items0 based on context it is used
func (o *PostUniverseIdsOKBodyStationsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyStationsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUniverseIdsOKBodyStationsItems0) UnmarshalBinary(b []byte) error {
	var res PostUniverseIdsOKBodyStationsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostUniverseIdsOKBodySystemsItems0 post_universe_ids_system
//
// system object
swagger:model PostUniverseIdsOKBodySystemsItems0
*/
type PostUniverseIdsOKBodySystemsItems0 struct {

	// post_universe_ids_system_id
	//
	// id integer
	ID int32 `json:"id,omitempty"`

	// post_universe_ids_system_name
	//
	// name string
	Name string `json:"name,omitempty"`
}

// Validate validates this post universe ids o k body systems items0
func (o *PostUniverseIdsOKBodySystemsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post universe ids o k body systems items0 based on context it is used
func (o *PostUniverseIdsOKBodySystemsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUniverseIdsOKBodySystemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUniverseIdsOKBodySystemsItems0) UnmarshalBinary(b []byte) error {
	var res PostUniverseIdsOKBodySystemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
