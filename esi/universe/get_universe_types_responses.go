// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/ferocious-space/eveapi/models"
)

// GetUniverseTypesReader is a Reader for the GetUniverseTypes structure.
type GetUniverseTypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseTypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUniverseTypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetUniverseTypesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetUniverseTypesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetUniverseTypesEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUniverseTypesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUniverseTypesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUniverseTypesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUniverseTypesOK creates a GetUniverseTypesOK with default headers values
func NewGetUniverseTypesOK() *GetUniverseTypesOK {
	var (
		// initialize headers with default values
		xPagesDefault = int32(1)
	)

	return &GetUniverseTypesOK{

		XPages: xPagesDefault,
	}
}

/*
GetUniverseTypesOK describes a response with status code 200, with default header values.

A list of type ids
*/
type GetUniverseTypesOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	/* Maximum page number

	   Format: int32
	   Default: 1
	*/
	XPages int32

	Payload []int32
}

// IsSuccess returns true when this get universe types o k response has a 2xx status code
func (o *GetUniverseTypesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get universe types o k response has a 3xx status code
func (o *GetUniverseTypesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe types o k response has a 4xx status code
func (o *GetUniverseTypesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe types o k response has a 5xx status code
func (o *GetUniverseTypesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe types o k response a status code equal to that given
func (o *GetUniverseTypesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUniverseTypesOK) Error() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesOK  %+v", 200, o.Payload)
}

func (o *GetUniverseTypesOK) String() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesOK  %+v", 200, o.Payload)
}

func (o *GetUniverseTypesOK) GetPayload() []int32 {
	return o.Payload
}

func (o *GetUniverseTypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header X-Pages
	hdrXPages := response.GetHeader("X-Pages")

	if hdrXPages != "" {
		valxPages, err := swag.ConvertInt32(hdrXPages)
		if err != nil {
			return errors.InvalidType("X-Pages", "header", "int32", hdrXPages)
		}
		o.XPages = valxPages
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseTypesNotModified creates a GetUniverseTypesNotModified with default headers values
func NewGetUniverseTypesNotModified() *GetUniverseTypesNotModified {
	return &GetUniverseTypesNotModified{}
}

/*
GetUniverseTypesNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetUniverseTypesNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get universe types not modified response has a 2xx status code
func (o *GetUniverseTypesNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe types not modified response has a 3xx status code
func (o *GetUniverseTypesNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get universe types not modified response has a 4xx status code
func (o *GetUniverseTypesNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe types not modified response has a 5xx status code
func (o *GetUniverseTypesNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe types not modified response a status code equal to that given
func (o *GetUniverseTypesNotModified) IsCode(code int) bool {
	return code == 304
}

func (o *GetUniverseTypesNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesNotModified ", 304)
}

func (o *GetUniverseTypesNotModified) String() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesNotModified ", 304)
}

func (o *GetUniverseTypesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetUniverseTypesBadRequest creates a GetUniverseTypesBadRequest with default headers values
func NewGetUniverseTypesBadRequest() *GetUniverseTypesBadRequest {
	return &GetUniverseTypesBadRequest{}
}

/*
GetUniverseTypesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetUniverseTypesBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get universe types bad request response has a 2xx status code
func (o *GetUniverseTypesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe types bad request response has a 3xx status code
func (o *GetUniverseTypesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe types bad request response has a 4xx status code
func (o *GetUniverseTypesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get universe types bad request response has a 5xx status code
func (o *GetUniverseTypesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe types bad request response a status code equal to that given
func (o *GetUniverseTypesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetUniverseTypesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseTypesBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseTypesBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetUniverseTypesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseTypesEnhanceYourCalm creates a GetUniverseTypesEnhanceYourCalm with default headers values
func NewGetUniverseTypesEnhanceYourCalm() *GetUniverseTypesEnhanceYourCalm {
	return &GetUniverseTypesEnhanceYourCalm{}
}

/*
GetUniverseTypesEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetUniverseTypesEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get universe types enhance your calm response has a 2xx status code
func (o *GetUniverseTypesEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe types enhance your calm response has a 3xx status code
func (o *GetUniverseTypesEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe types enhance your calm response has a 4xx status code
func (o *GetUniverseTypesEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get universe types enhance your calm response has a 5xx status code
func (o *GetUniverseTypesEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe types enhance your calm response a status code equal to that given
func (o *GetUniverseTypesEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

func (o *GetUniverseTypesEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseTypesEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseTypesEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetUniverseTypesEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseTypesInternalServerError creates a GetUniverseTypesInternalServerError with default headers values
func NewGetUniverseTypesInternalServerError() *GetUniverseTypesInternalServerError {
	return &GetUniverseTypesInternalServerError{}
}

/*
GetUniverseTypesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetUniverseTypesInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get universe types internal server error response has a 2xx status code
func (o *GetUniverseTypesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe types internal server error response has a 3xx status code
func (o *GetUniverseTypesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe types internal server error response has a 4xx status code
func (o *GetUniverseTypesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe types internal server error response has a 5xx status code
func (o *GetUniverseTypesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get universe types internal server error response a status code equal to that given
func (o *GetUniverseTypesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUniverseTypesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseTypesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseTypesInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetUniverseTypesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseTypesServiceUnavailable creates a GetUniverseTypesServiceUnavailable with default headers values
func NewGetUniverseTypesServiceUnavailable() *GetUniverseTypesServiceUnavailable {
	return &GetUniverseTypesServiceUnavailable{}
}

/*
GetUniverseTypesServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetUniverseTypesServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get universe types service unavailable response has a 2xx status code
func (o *GetUniverseTypesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe types service unavailable response has a 3xx status code
func (o *GetUniverseTypesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe types service unavailable response has a 4xx status code
func (o *GetUniverseTypesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe types service unavailable response has a 5xx status code
func (o *GetUniverseTypesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get universe types service unavailable response a status code equal to that given
func (o *GetUniverseTypesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetUniverseTypesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseTypesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseTypesServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetUniverseTypesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseTypesGatewayTimeout creates a GetUniverseTypesGatewayTimeout with default headers values
func NewGetUniverseTypesGatewayTimeout() *GetUniverseTypesGatewayTimeout {
	return &GetUniverseTypesGatewayTimeout{}
}

/*
GetUniverseTypesGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetUniverseTypesGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get universe types gateway timeout response has a 2xx status code
func (o *GetUniverseTypesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe types gateway timeout response has a 3xx status code
func (o *GetUniverseTypesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe types gateway timeout response has a 4xx status code
func (o *GetUniverseTypesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe types gateway timeout response has a 5xx status code
func (o *GetUniverseTypesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get universe types gateway timeout response a status code equal to that given
func (o *GetUniverseTypesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetUniverseTypesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseTypesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/universe/types/][%d] getUniverseTypesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseTypesGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetUniverseTypesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
