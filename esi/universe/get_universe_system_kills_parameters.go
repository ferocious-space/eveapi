// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetUniverseSystemKillsParams creates a new GetUniverseSystemKillsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetUniverseSystemKillsParams() *GetUniverseSystemKillsParams {
	return &GetUniverseSystemKillsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetUniverseSystemKillsParamsWithTimeout creates a new GetUniverseSystemKillsParams object
// with the ability to set a timeout on a request.
func NewGetUniverseSystemKillsParamsWithTimeout(timeout time.Duration) *GetUniverseSystemKillsParams {
	return &GetUniverseSystemKillsParams{
		timeout: timeout,
	}
}

// NewGetUniverseSystemKillsParamsWithContext creates a new GetUniverseSystemKillsParams object
// with the ability to set a context for a request.
func NewGetUniverseSystemKillsParamsWithContext(ctx context.Context) *GetUniverseSystemKillsParams {
	return &GetUniverseSystemKillsParams{
		Context: ctx,
	}
}

// NewGetUniverseSystemKillsParamsWithHTTPClient creates a new GetUniverseSystemKillsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetUniverseSystemKillsParamsWithHTTPClient(client *http.Client) *GetUniverseSystemKillsParams {
	return &GetUniverseSystemKillsParams{
		HTTPClient: client,
	}
}

/* GetUniverseSystemKillsParams contains all the parameters to send to the API endpoint
   for the get universe system kills operation.

   Typically these are written to a http.Request.
*/
type GetUniverseSystemKillsParams struct {

	/* IfNoneMatch.

	   ETag from a previous request. A 304 will be returned if this matches the current ETag
	*/
	IfNoneMatch *string

	/* Datasource.

	   The server name you would like data from

	   Default: "tranquility"
	*/
	Datasource *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get universe system kills params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUniverseSystemKillsParams) WithDefaults() *GetUniverseSystemKillsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get universe system kills params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUniverseSystemKillsParams) SetDefaults() {
	var (
		datasourceDefault = string("tranquility")
	)

	val := GetUniverseSystemKillsParams{
		Datasource: &datasourceDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get universe system kills params
func (o *GetUniverseSystemKillsParams) WithTimeout(timeout time.Duration) *GetUniverseSystemKillsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get universe system kills params
func (o *GetUniverseSystemKillsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get universe system kills params
func (o *GetUniverseSystemKillsParams) WithContext(ctx context.Context) *GetUniverseSystemKillsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get universe system kills params
func (o *GetUniverseSystemKillsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get universe system kills params
func (o *GetUniverseSystemKillsParams) WithHTTPClient(client *http.Client) *GetUniverseSystemKillsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get universe system kills params
func (o *GetUniverseSystemKillsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIfNoneMatch adds the ifNoneMatch to the get universe system kills params
func (o *GetUniverseSystemKillsParams) WithIfNoneMatch(ifNoneMatch *string) *GetUniverseSystemKillsParams {
	o.SetIfNoneMatch(ifNoneMatch)
	return o
}

// SetIfNoneMatch adds the ifNoneMatch to the get universe system kills params
func (o *GetUniverseSystemKillsParams) SetIfNoneMatch(ifNoneMatch *string) {
	o.IfNoneMatch = ifNoneMatch
}

// WithDatasource adds the datasource to the get universe system kills params
func (o *GetUniverseSystemKillsParams) WithDatasource(datasource *string) *GetUniverseSystemKillsParams {
	o.SetDatasource(datasource)
	return o
}

// SetDatasource adds the datasource to the get universe system kills params
func (o *GetUniverseSystemKillsParams) SetDatasource(datasource *string) {
	o.Datasource = datasource
}

// WriteToRequest writes these params to a swagger request
func (o *GetUniverseSystemKillsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IfNoneMatch != nil {

		// header param If-None-Match
		if err := r.SetHeaderParam("If-None-Match", *o.IfNoneMatch); err != nil {
			return err
		}
	}

	if o.Datasource != nil {

		// query param datasource
		var qrDatasource string

		if o.Datasource != nil {
			qrDatasource = *o.Datasource
		}
		qDatasource := qrDatasource
		if qDatasource != "" {

			if err := r.SetQueryParam("datasource", qDatasource); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
