// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ferocious-space/eveapi/models"
)

// GetUniverseCategoriesReader is a Reader for the GetUniverseCategories structure.
type GetUniverseCategoriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseCategoriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUniverseCategoriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetUniverseCategoriesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetUniverseCategoriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetUniverseCategoriesEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUniverseCategoriesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUniverseCategoriesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUniverseCategoriesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUniverseCategoriesOK creates a GetUniverseCategoriesOK with default headers values
func NewGetUniverseCategoriesOK() *GetUniverseCategoriesOK {
	return &GetUniverseCategoriesOK{}
}

/* GetUniverseCategoriesOK describes a response with status code 200, with default header values.

A list of item category ids
*/
type GetUniverseCategoriesOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []int32
}

func (o *GetUniverseCategoriesOK) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/][%d] getUniverseCategoriesOK  %+v", 200, o.Payload)
}
func (o *GetUniverseCategoriesOK) GetPayload() []int32 {
	return o.Payload
}

func (o *GetUniverseCategoriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesNotModified creates a GetUniverseCategoriesNotModified with default headers values
func NewGetUniverseCategoriesNotModified() *GetUniverseCategoriesNotModified {
	return &GetUniverseCategoriesNotModified{}
}

/* GetUniverseCategoriesNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetUniverseCategoriesNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetUniverseCategoriesNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/][%d] getUniverseCategoriesNotModified ", 304)
}

func (o *GetUniverseCategoriesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetUniverseCategoriesBadRequest creates a GetUniverseCategoriesBadRequest with default headers values
func NewGetUniverseCategoriesBadRequest() *GetUniverseCategoriesBadRequest {
	return &GetUniverseCategoriesBadRequest{}
}

/* GetUniverseCategoriesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetUniverseCategoriesBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetUniverseCategoriesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/][%d] getUniverseCategoriesBadRequest  %+v", 400, o.Payload)
}
func (o *GetUniverseCategoriesBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetUniverseCategoriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesEnhanceYourCalm creates a GetUniverseCategoriesEnhanceYourCalm with default headers values
func NewGetUniverseCategoriesEnhanceYourCalm() *GetUniverseCategoriesEnhanceYourCalm {
	return &GetUniverseCategoriesEnhanceYourCalm{}
}

/* GetUniverseCategoriesEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetUniverseCategoriesEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetUniverseCategoriesEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/][%d] getUniverseCategoriesEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetUniverseCategoriesEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetUniverseCategoriesEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesInternalServerError creates a GetUniverseCategoriesInternalServerError with default headers values
func NewGetUniverseCategoriesInternalServerError() *GetUniverseCategoriesInternalServerError {
	return &GetUniverseCategoriesInternalServerError{}
}

/* GetUniverseCategoriesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetUniverseCategoriesInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseCategoriesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/][%d] getUniverseCategoriesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetUniverseCategoriesInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetUniverseCategoriesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesServiceUnavailable creates a GetUniverseCategoriesServiceUnavailable with default headers values
func NewGetUniverseCategoriesServiceUnavailable() *GetUniverseCategoriesServiceUnavailable {
	return &GetUniverseCategoriesServiceUnavailable{}
}

/* GetUniverseCategoriesServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetUniverseCategoriesServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetUniverseCategoriesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/][%d] getUniverseCategoriesServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetUniverseCategoriesServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetUniverseCategoriesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesGatewayTimeout creates a GetUniverseCategoriesGatewayTimeout with default headers values
func NewGetUniverseCategoriesGatewayTimeout() *GetUniverseCategoriesGatewayTimeout {
	return &GetUniverseCategoriesGatewayTimeout{}
}

/* GetUniverseCategoriesGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetUniverseCategoriesGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetUniverseCategoriesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/][%d] getUniverseCategoriesGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetUniverseCategoriesGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetUniverseCategoriesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
