// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ferocious-space/eveapi/models"
)

// GetUniverseRegionsReader is a Reader for the GetUniverseRegions structure.
type GetUniverseRegionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseRegionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUniverseRegionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetUniverseRegionsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetUniverseRegionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetUniverseRegionsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUniverseRegionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUniverseRegionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUniverseRegionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/universe/regions/] get_universe_regions", response, response.Code())
	}
}

// NewGetUniverseRegionsOK creates a GetUniverseRegionsOK with default headers values
func NewGetUniverseRegionsOK() *GetUniverseRegionsOK {
	return &GetUniverseRegionsOK{}
}

/*
GetUniverseRegionsOK describes a response with status code 200, with default header values.

A list of region ids
*/
type GetUniverseRegionsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []int32
}

// IsSuccess returns true when this get universe regions o k response has a 2xx status code
func (o *GetUniverseRegionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get universe regions o k response has a 3xx status code
func (o *GetUniverseRegionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe regions o k response has a 4xx status code
func (o *GetUniverseRegionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe regions o k response has a 5xx status code
func (o *GetUniverseRegionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe regions o k response a status code equal to that given
func (o *GetUniverseRegionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get universe regions o k response
func (o *GetUniverseRegionsOK) Code() int {
	return 200
}

func (o *GetUniverseRegionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsOK  %+v", 200, o.Payload)
}

func (o *GetUniverseRegionsOK) String() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsOK  %+v", 200, o.Payload)
}

func (o *GetUniverseRegionsOK) GetPayload() []int32 {
	return o.Payload
}

func (o *GetUniverseRegionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsNotModified creates a GetUniverseRegionsNotModified with default headers values
func NewGetUniverseRegionsNotModified() *GetUniverseRegionsNotModified {
	return &GetUniverseRegionsNotModified{}
}

/*
GetUniverseRegionsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetUniverseRegionsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get universe regions not modified response has a 2xx status code
func (o *GetUniverseRegionsNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe regions not modified response has a 3xx status code
func (o *GetUniverseRegionsNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get universe regions not modified response has a 4xx status code
func (o *GetUniverseRegionsNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe regions not modified response has a 5xx status code
func (o *GetUniverseRegionsNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe regions not modified response a status code equal to that given
func (o *GetUniverseRegionsNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get universe regions not modified response
func (o *GetUniverseRegionsNotModified) Code() int {
	return 304
}

func (o *GetUniverseRegionsNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsNotModified ", 304)
}

func (o *GetUniverseRegionsNotModified) String() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsNotModified ", 304)
}

func (o *GetUniverseRegionsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetUniverseRegionsBadRequest creates a GetUniverseRegionsBadRequest with default headers values
func NewGetUniverseRegionsBadRequest() *GetUniverseRegionsBadRequest {
	return &GetUniverseRegionsBadRequest{}
}

/*
GetUniverseRegionsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetUniverseRegionsBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get universe regions bad request response has a 2xx status code
func (o *GetUniverseRegionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe regions bad request response has a 3xx status code
func (o *GetUniverseRegionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe regions bad request response has a 4xx status code
func (o *GetUniverseRegionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get universe regions bad request response has a 5xx status code
func (o *GetUniverseRegionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe regions bad request response a status code equal to that given
func (o *GetUniverseRegionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get universe regions bad request response
func (o *GetUniverseRegionsBadRequest) Code() int {
	return 400
}

func (o *GetUniverseRegionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseRegionsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseRegionsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetUniverseRegionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsEnhanceYourCalm creates a GetUniverseRegionsEnhanceYourCalm with default headers values
func NewGetUniverseRegionsEnhanceYourCalm() *GetUniverseRegionsEnhanceYourCalm {
	return &GetUniverseRegionsEnhanceYourCalm{}
}

/*
GetUniverseRegionsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetUniverseRegionsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get universe regions enhance your calm response has a 2xx status code
func (o *GetUniverseRegionsEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe regions enhance your calm response has a 3xx status code
func (o *GetUniverseRegionsEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe regions enhance your calm response has a 4xx status code
func (o *GetUniverseRegionsEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get universe regions enhance your calm response has a 5xx status code
func (o *GetUniverseRegionsEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe regions enhance your calm response a status code equal to that given
func (o *GetUniverseRegionsEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get universe regions enhance your calm response
func (o *GetUniverseRegionsEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetUniverseRegionsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseRegionsEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseRegionsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetUniverseRegionsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsInternalServerError creates a GetUniverseRegionsInternalServerError with default headers values
func NewGetUniverseRegionsInternalServerError() *GetUniverseRegionsInternalServerError {
	return &GetUniverseRegionsInternalServerError{}
}

/*
GetUniverseRegionsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetUniverseRegionsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get universe regions internal server error response has a 2xx status code
func (o *GetUniverseRegionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe regions internal server error response has a 3xx status code
func (o *GetUniverseRegionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe regions internal server error response has a 4xx status code
func (o *GetUniverseRegionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe regions internal server error response has a 5xx status code
func (o *GetUniverseRegionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get universe regions internal server error response a status code equal to that given
func (o *GetUniverseRegionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get universe regions internal server error response
func (o *GetUniverseRegionsInternalServerError) Code() int {
	return 500
}

func (o *GetUniverseRegionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseRegionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseRegionsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetUniverseRegionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsServiceUnavailable creates a GetUniverseRegionsServiceUnavailable with default headers values
func NewGetUniverseRegionsServiceUnavailable() *GetUniverseRegionsServiceUnavailable {
	return &GetUniverseRegionsServiceUnavailable{}
}

/*
GetUniverseRegionsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetUniverseRegionsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get universe regions service unavailable response has a 2xx status code
func (o *GetUniverseRegionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe regions service unavailable response has a 3xx status code
func (o *GetUniverseRegionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe regions service unavailable response has a 4xx status code
func (o *GetUniverseRegionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe regions service unavailable response has a 5xx status code
func (o *GetUniverseRegionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get universe regions service unavailable response a status code equal to that given
func (o *GetUniverseRegionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get universe regions service unavailable response
func (o *GetUniverseRegionsServiceUnavailable) Code() int {
	return 503
}

func (o *GetUniverseRegionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseRegionsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseRegionsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetUniverseRegionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsGatewayTimeout creates a GetUniverseRegionsGatewayTimeout with default headers values
func NewGetUniverseRegionsGatewayTimeout() *GetUniverseRegionsGatewayTimeout {
	return &GetUniverseRegionsGatewayTimeout{}
}

/*
GetUniverseRegionsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetUniverseRegionsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get universe regions gateway timeout response has a 2xx status code
func (o *GetUniverseRegionsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe regions gateway timeout response has a 3xx status code
func (o *GetUniverseRegionsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe regions gateway timeout response has a 4xx status code
func (o *GetUniverseRegionsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe regions gateway timeout response has a 5xx status code
func (o *GetUniverseRegionsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get universe regions gateway timeout response a status code equal to that given
func (o *GetUniverseRegionsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get universe regions gateway timeout response
func (o *GetUniverseRegionsGatewayTimeout) Code() int {
	return 504
}

func (o *GetUniverseRegionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseRegionsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/universe/regions/][%d] getUniverseRegionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseRegionsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetUniverseRegionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
