// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetUniverseCategoriesCategoryIDReader is a Reader for the GetUniverseCategoriesCategoryID structure.
type GetUniverseCategoriesCategoryIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseCategoriesCategoryIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUniverseCategoriesCategoryIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetUniverseCategoriesCategoryIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetUniverseCategoriesCategoryIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUniverseCategoriesCategoryIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetUniverseCategoriesCategoryIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUniverseCategoriesCategoryIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUniverseCategoriesCategoryIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUniverseCategoriesCategoryIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUniverseCategoriesCategoryIDOK creates a GetUniverseCategoriesCategoryIDOK with default headers values
func NewGetUniverseCategoriesCategoryIDOK() *GetUniverseCategoriesCategoryIDOK {
	return &GetUniverseCategoriesCategoryIDOK{}
}

/* GetUniverseCategoriesCategoryIDOK describes a response with status code 200, with default header values.

Information about an item category
*/
type GetUniverseCategoriesCategoryIDOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* The language used in the response
	 */
	ContentLanguage string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetUniverseCategoriesCategoryIDOKBody
}

func (o *GetUniverseCategoriesCategoryIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/{category_id}/][%d] getUniverseCategoriesCategoryIdOK  %+v", 200, o.Payload)
}
func (o *GetUniverseCategoriesCategoryIDOK) GetPayload() *GetUniverseCategoriesCategoryIDOKBody {
	return o.Payload
}

func (o *GetUniverseCategoriesCategoryIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header Content-Language
	hdrContentLanguage := response.GetHeader("Content-Language")

	if hdrContentLanguage != "" {
		o.ContentLanguage = hdrContentLanguage
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetUniverseCategoriesCategoryIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesCategoryIDNotModified creates a GetUniverseCategoriesCategoryIDNotModified with default headers values
func NewGetUniverseCategoriesCategoryIDNotModified() *GetUniverseCategoriesCategoryIDNotModified {
	return &GetUniverseCategoriesCategoryIDNotModified{}
}

/* GetUniverseCategoriesCategoryIDNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetUniverseCategoriesCategoryIDNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetUniverseCategoriesCategoryIDNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/{category_id}/][%d] getUniverseCategoriesCategoryIdNotModified ", 304)
}

func (o *GetUniverseCategoriesCategoryIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetUniverseCategoriesCategoryIDBadRequest creates a GetUniverseCategoriesCategoryIDBadRequest with default headers values
func NewGetUniverseCategoriesCategoryIDBadRequest() *GetUniverseCategoriesCategoryIDBadRequest {
	return &GetUniverseCategoriesCategoryIDBadRequest{}
}

/* GetUniverseCategoriesCategoryIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetUniverseCategoriesCategoryIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetUniverseCategoriesCategoryIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/{category_id}/][%d] getUniverseCategoriesCategoryIdBadRequest  %+v", 400, o.Payload)
}
func (o *GetUniverseCategoriesCategoryIDBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetUniverseCategoriesCategoryIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesCategoryIDNotFound creates a GetUniverseCategoriesCategoryIDNotFound with default headers values
func NewGetUniverseCategoriesCategoryIDNotFound() *GetUniverseCategoriesCategoryIDNotFound {
	return &GetUniverseCategoriesCategoryIDNotFound{}
}

/* GetUniverseCategoriesCategoryIDNotFound describes a response with status code 404, with default header values.

Category not found
*/
type GetUniverseCategoriesCategoryIDNotFound struct {
	Payload *GetUniverseCategoriesCategoryIDNotFoundBody
}

func (o *GetUniverseCategoriesCategoryIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/{category_id}/][%d] getUniverseCategoriesCategoryIdNotFound  %+v", 404, o.Payload)
}
func (o *GetUniverseCategoriesCategoryIDNotFound) GetPayload() *GetUniverseCategoriesCategoryIDNotFoundBody {
	return o.Payload
}

func (o *GetUniverseCategoriesCategoryIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUniverseCategoriesCategoryIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesCategoryIDEnhanceYourCalm creates a GetUniverseCategoriesCategoryIDEnhanceYourCalm with default headers values
func NewGetUniverseCategoriesCategoryIDEnhanceYourCalm() *GetUniverseCategoriesCategoryIDEnhanceYourCalm {
	return &GetUniverseCategoriesCategoryIDEnhanceYourCalm{}
}

/* GetUniverseCategoriesCategoryIDEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetUniverseCategoriesCategoryIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetUniverseCategoriesCategoryIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/{category_id}/][%d] getUniverseCategoriesCategoryIdEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetUniverseCategoriesCategoryIDEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetUniverseCategoriesCategoryIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesCategoryIDInternalServerError creates a GetUniverseCategoriesCategoryIDInternalServerError with default headers values
func NewGetUniverseCategoriesCategoryIDInternalServerError() *GetUniverseCategoriesCategoryIDInternalServerError {
	return &GetUniverseCategoriesCategoryIDInternalServerError{}
}

/* GetUniverseCategoriesCategoryIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetUniverseCategoriesCategoryIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseCategoriesCategoryIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/{category_id}/][%d] getUniverseCategoriesCategoryIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetUniverseCategoriesCategoryIDInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetUniverseCategoriesCategoryIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesCategoryIDServiceUnavailable creates a GetUniverseCategoriesCategoryIDServiceUnavailable with default headers values
func NewGetUniverseCategoriesCategoryIDServiceUnavailable() *GetUniverseCategoriesCategoryIDServiceUnavailable {
	return &GetUniverseCategoriesCategoryIDServiceUnavailable{}
}

/* GetUniverseCategoriesCategoryIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetUniverseCategoriesCategoryIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetUniverseCategoriesCategoryIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/{category_id}/][%d] getUniverseCategoriesCategoryIdServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetUniverseCategoriesCategoryIDServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetUniverseCategoriesCategoryIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesCategoryIDGatewayTimeout creates a GetUniverseCategoriesCategoryIDGatewayTimeout with default headers values
func NewGetUniverseCategoriesCategoryIDGatewayTimeout() *GetUniverseCategoriesCategoryIDGatewayTimeout {
	return &GetUniverseCategoriesCategoryIDGatewayTimeout{}
}

/* GetUniverseCategoriesCategoryIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetUniverseCategoriesCategoryIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetUniverseCategoriesCategoryIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/universe/categories/{category_id}/][%d] getUniverseCategoriesCategoryIdGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetUniverseCategoriesCategoryIDGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetUniverseCategoriesCategoryIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetUniverseCategoriesCategoryIDNotFoundBody get_universe_categories_category_id_not_found
//
// Not found
swagger:model GetUniverseCategoriesCategoryIDNotFoundBody
*/
type GetUniverseCategoriesCategoryIDNotFoundBody struct {

	// get_universe_categories_category_id_404_not_found
	//
	// Not found message
	Error string `json:"error,omitempty"`
}

// Validate validates this get universe categories category ID not found body
func (o *GetUniverseCategoriesCategoryIDNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get universe categories category ID not found body based on context it is used
func (o *GetUniverseCategoriesCategoryIDNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUniverseCategoriesCategoryIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUniverseCategoriesCategoryIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetUniverseCategoriesCategoryIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUniverseCategoriesCategoryIDOKBody get_universe_categories_category_id_ok
//
// 200 ok object
swagger:model GetUniverseCategoriesCategoryIDOKBody
*/
type GetUniverseCategoriesCategoryIDOKBody struct {

	// get_universe_categories_category_id_category_id
	//
	// category_id integer
	// Required: true
	CategoryID *int32 `json:"category_id"`

	// get_universe_categories_category_id_groups
	//
	// groups array
	// Required: true
	// Max Items: 10000
	Groups []int32 `json:"groups"`

	// get_universe_categories_category_id_name
	//
	// name string
	// Required: true
	Name *string `json:"name"`

	// get_universe_categories_category_id_published
	//
	// published boolean
	// Required: true
	Published *bool `json:"published"`
}

// Validate validates this get universe categories category ID o k body
func (o *GetUniverseCategoriesCategoryIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCategoryID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGroups(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePublished(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniverseCategoriesCategoryIDOKBody) validateCategoryID(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseCategoriesCategoryIdOK"+"."+"category_id", "body", o.CategoryID); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseCategoriesCategoryIDOKBody) validateGroups(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseCategoriesCategoryIdOK"+"."+"groups", "body", o.Groups); err != nil {
		return err
	}

	iGroupsSize := int64(len(o.Groups))

	if err := validate.MaxItems("getUniverseCategoriesCategoryIdOK"+"."+"groups", "body", iGroupsSize, 10000); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseCategoriesCategoryIDOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseCategoriesCategoryIdOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseCategoriesCategoryIDOKBody) validatePublished(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseCategoriesCategoryIdOK"+"."+"published", "body", o.Published); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get universe categories category ID o k body based on context it is used
func (o *GetUniverseCategoriesCategoryIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUniverseCategoriesCategoryIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUniverseCategoriesCategoryIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetUniverseCategoriesCategoryIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
