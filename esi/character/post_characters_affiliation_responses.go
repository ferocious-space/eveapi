// Code generated by go-swagger; DO NOT EDIT.

package character

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// PostCharactersAffiliationReader is a Reader for the PostCharactersAffiliation structure.
type PostCharactersAffiliationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCharactersAffiliationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostCharactersAffiliationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostCharactersAffiliationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewPostCharactersAffiliationEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostCharactersAffiliationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostCharactersAffiliationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostCharactersAffiliationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v2/characters/affiliation/] post_characters_affiliation", response, response.Code())
	}
}

// NewPostCharactersAffiliationOK creates a PostCharactersAffiliationOK with default headers values
func NewPostCharactersAffiliationOK() *PostCharactersAffiliationOK {
	return &PostCharactersAffiliationOK{}
}

/*
PostCharactersAffiliationOK describes a response with status code 200, with default header values.

Character corporation, alliance and faction IDs
*/
type PostCharactersAffiliationOK struct {
	Payload []*PostCharactersAffiliationOKBodyItems0
}

// IsSuccess returns true when this post characters affiliation o k response has a 2xx status code
func (o *PostCharactersAffiliationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post characters affiliation o k response has a 3xx status code
func (o *PostCharactersAffiliationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters affiliation o k response has a 4xx status code
func (o *PostCharactersAffiliationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post characters affiliation o k response has a 5xx status code
func (o *PostCharactersAffiliationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters affiliation o k response a status code equal to that given
func (o *PostCharactersAffiliationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post characters affiliation o k response
func (o *PostCharactersAffiliationOK) Code() int {
	return 200
}

func (o *PostCharactersAffiliationOK) Error() string {
	return fmt.Sprintf("[POST /v2/characters/affiliation/][%d] postCharactersAffiliationOK  %+v", 200, o.Payload)
}

func (o *PostCharactersAffiliationOK) String() string {
	return fmt.Sprintf("[POST /v2/characters/affiliation/][%d] postCharactersAffiliationOK  %+v", 200, o.Payload)
}

func (o *PostCharactersAffiliationOK) GetPayload() []*PostCharactersAffiliationOKBodyItems0 {
	return o.Payload
}

func (o *PostCharactersAffiliationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersAffiliationBadRequest creates a PostCharactersAffiliationBadRequest with default headers values
func NewPostCharactersAffiliationBadRequest() *PostCharactersAffiliationBadRequest {
	return &PostCharactersAffiliationBadRequest{}
}

/*
PostCharactersAffiliationBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostCharactersAffiliationBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this post characters affiliation bad request response has a 2xx status code
func (o *PostCharactersAffiliationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters affiliation bad request response has a 3xx status code
func (o *PostCharactersAffiliationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters affiliation bad request response has a 4xx status code
func (o *PostCharactersAffiliationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post characters affiliation bad request response has a 5xx status code
func (o *PostCharactersAffiliationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters affiliation bad request response a status code equal to that given
func (o *PostCharactersAffiliationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post characters affiliation bad request response
func (o *PostCharactersAffiliationBadRequest) Code() int {
	return 400
}

func (o *PostCharactersAffiliationBadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/characters/affiliation/][%d] postCharactersAffiliationBadRequest  %+v", 400, o.Payload)
}

func (o *PostCharactersAffiliationBadRequest) String() string {
	return fmt.Sprintf("[POST /v2/characters/affiliation/][%d] postCharactersAffiliationBadRequest  %+v", 400, o.Payload)
}

func (o *PostCharactersAffiliationBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *PostCharactersAffiliationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersAffiliationEnhanceYourCalm creates a PostCharactersAffiliationEnhanceYourCalm with default headers values
func NewPostCharactersAffiliationEnhanceYourCalm() *PostCharactersAffiliationEnhanceYourCalm {
	return &PostCharactersAffiliationEnhanceYourCalm{}
}

/*
PostCharactersAffiliationEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type PostCharactersAffiliationEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this post characters affiliation enhance your calm response has a 2xx status code
func (o *PostCharactersAffiliationEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters affiliation enhance your calm response has a 3xx status code
func (o *PostCharactersAffiliationEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters affiliation enhance your calm response has a 4xx status code
func (o *PostCharactersAffiliationEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this post characters affiliation enhance your calm response has a 5xx status code
func (o *PostCharactersAffiliationEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters affiliation enhance your calm response a status code equal to that given
func (o *PostCharactersAffiliationEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the post characters affiliation enhance your calm response
func (o *PostCharactersAffiliationEnhanceYourCalm) Code() int {
	return 420
}

func (o *PostCharactersAffiliationEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[POST /v2/characters/affiliation/][%d] postCharactersAffiliationEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *PostCharactersAffiliationEnhanceYourCalm) String() string {
	return fmt.Sprintf("[POST /v2/characters/affiliation/][%d] postCharactersAffiliationEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *PostCharactersAffiliationEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *PostCharactersAffiliationEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersAffiliationInternalServerError creates a PostCharactersAffiliationInternalServerError with default headers values
func NewPostCharactersAffiliationInternalServerError() *PostCharactersAffiliationInternalServerError {
	return &PostCharactersAffiliationInternalServerError{}
}

/*
PostCharactersAffiliationInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostCharactersAffiliationInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this post characters affiliation internal server error response has a 2xx status code
func (o *PostCharactersAffiliationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters affiliation internal server error response has a 3xx status code
func (o *PostCharactersAffiliationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters affiliation internal server error response has a 4xx status code
func (o *PostCharactersAffiliationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post characters affiliation internal server error response has a 5xx status code
func (o *PostCharactersAffiliationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post characters affiliation internal server error response a status code equal to that given
func (o *PostCharactersAffiliationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post characters affiliation internal server error response
func (o *PostCharactersAffiliationInternalServerError) Code() int {
	return 500
}

func (o *PostCharactersAffiliationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v2/characters/affiliation/][%d] postCharactersAffiliationInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCharactersAffiliationInternalServerError) String() string {
	return fmt.Sprintf("[POST /v2/characters/affiliation/][%d] postCharactersAffiliationInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCharactersAffiliationInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *PostCharactersAffiliationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersAffiliationServiceUnavailable creates a PostCharactersAffiliationServiceUnavailable with default headers values
func NewPostCharactersAffiliationServiceUnavailable() *PostCharactersAffiliationServiceUnavailable {
	return &PostCharactersAffiliationServiceUnavailable{}
}

/*
PostCharactersAffiliationServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type PostCharactersAffiliationServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this post characters affiliation service unavailable response has a 2xx status code
func (o *PostCharactersAffiliationServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters affiliation service unavailable response has a 3xx status code
func (o *PostCharactersAffiliationServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters affiliation service unavailable response has a 4xx status code
func (o *PostCharactersAffiliationServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post characters affiliation service unavailable response has a 5xx status code
func (o *PostCharactersAffiliationServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post characters affiliation service unavailable response a status code equal to that given
func (o *PostCharactersAffiliationServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the post characters affiliation service unavailable response
func (o *PostCharactersAffiliationServiceUnavailable) Code() int {
	return 503
}

func (o *PostCharactersAffiliationServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /v2/characters/affiliation/][%d] postCharactersAffiliationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostCharactersAffiliationServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /v2/characters/affiliation/][%d] postCharactersAffiliationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostCharactersAffiliationServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *PostCharactersAffiliationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersAffiliationGatewayTimeout creates a PostCharactersAffiliationGatewayTimeout with default headers values
func NewPostCharactersAffiliationGatewayTimeout() *PostCharactersAffiliationGatewayTimeout {
	return &PostCharactersAffiliationGatewayTimeout{}
}

/*
PostCharactersAffiliationGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type PostCharactersAffiliationGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this post characters affiliation gateway timeout response has a 2xx status code
func (o *PostCharactersAffiliationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters affiliation gateway timeout response has a 3xx status code
func (o *PostCharactersAffiliationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters affiliation gateway timeout response has a 4xx status code
func (o *PostCharactersAffiliationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post characters affiliation gateway timeout response has a 5xx status code
func (o *PostCharactersAffiliationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post characters affiliation gateway timeout response a status code equal to that given
func (o *PostCharactersAffiliationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the post characters affiliation gateway timeout response
func (o *PostCharactersAffiliationGatewayTimeout) Code() int {
	return 504
}

func (o *PostCharactersAffiliationGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v2/characters/affiliation/][%d] postCharactersAffiliationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostCharactersAffiliationGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /v2/characters/affiliation/][%d] postCharactersAffiliationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostCharactersAffiliationGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *PostCharactersAffiliationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PostCharactersAffiliationOKBodyItems0 post_characters_affiliation_200_ok
//
// 200 ok object
swagger:model PostCharactersAffiliationOKBodyItems0
*/
type PostCharactersAffiliationOKBodyItems0 struct {

	// post_characters_affiliation_alliance_id
	//
	// The character's alliance ID, if their corporation is in an alliance
	AllianceID int32 `json:"alliance_id,omitempty"`

	// post_characters_affiliation_character_id
	//
	// The character's ID
	// Required: true
	CharacterID *int32 `json:"character_id"`

	// post_characters_affiliation_corporation_id
	//
	// The character's corporation ID
	// Required: true
	CorporationID *int32 `json:"corporation_id"`

	// post_characters_affiliation_faction_id
	//
	// The character's faction ID, if their corporation is in a faction
	FactionID int32 `json:"faction_id,omitempty"`
}

// Validate validates this post characters affiliation o k body items0
func (o *PostCharactersAffiliationOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCharacterID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCorporationID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCharactersAffiliationOKBodyItems0) validateCharacterID(formats strfmt.Registry) error {

	if err := validate.Required("character_id", "body", o.CharacterID); err != nil {
		return err
	}

	return nil
}

func (o *PostCharactersAffiliationOKBodyItems0) validateCorporationID(formats strfmt.Registry) error {

	if err := validate.Required("corporation_id", "body", o.CorporationID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post characters affiliation o k body items0 based on context it is used
func (o *PostCharactersAffiliationOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCharactersAffiliationOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCharactersAffiliationOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res PostCharactersAffiliationOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
