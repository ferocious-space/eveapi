// Code generated by go-swagger; DO NOT EDIT.

package character

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostCharactersCharacterIDCspaParams creates a new PostCharactersCharacterIDCspaParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostCharactersCharacterIDCspaParams() *PostCharactersCharacterIDCspaParams {
	return &PostCharactersCharacterIDCspaParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostCharactersCharacterIDCspaParamsWithTimeout creates a new PostCharactersCharacterIDCspaParams object
// with the ability to set a timeout on a request.
func NewPostCharactersCharacterIDCspaParamsWithTimeout(timeout time.Duration) *PostCharactersCharacterIDCspaParams {
	return &PostCharactersCharacterIDCspaParams{
		timeout: timeout,
	}
}

// NewPostCharactersCharacterIDCspaParamsWithContext creates a new PostCharactersCharacterIDCspaParams object
// with the ability to set a context for a request.
func NewPostCharactersCharacterIDCspaParamsWithContext(ctx context.Context) *PostCharactersCharacterIDCspaParams {
	return &PostCharactersCharacterIDCspaParams{
		Context: ctx,
	}
}

// NewPostCharactersCharacterIDCspaParamsWithHTTPClient creates a new PostCharactersCharacterIDCspaParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostCharactersCharacterIDCspaParamsWithHTTPClient(client *http.Client) *PostCharactersCharacterIDCspaParams {
	return &PostCharactersCharacterIDCspaParams{
		HTTPClient: client,
	}
}

/* PostCharactersCharacterIDCspaParams contains all the parameters to send to the API endpoint
   for the post characters character id cspa operation.

   Typically these are written to a http.Request.
*/
type PostCharactersCharacterIDCspaParams struct {

	/* CharacterID.

	   An EVE character ID

	   Format: int32
	*/
	CharacterID int32

	/* Characters.

	   The target characters to calculate the charge for
	*/
	Characters []int32

	/* Datasource.

	   The server name you would like data from

	   Default: "tranquility"
	*/
	Datasource *string

	/* Token.

	   Access token to use if unable to set a header
	*/
	Token *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post characters character id cspa params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostCharactersCharacterIDCspaParams) WithDefaults() *PostCharactersCharacterIDCspaParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post characters character id cspa params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostCharactersCharacterIDCspaParams) SetDefaults() {
	var (
		datasourceDefault = string("tranquility")
	)

	val := PostCharactersCharacterIDCspaParams{
		Datasource: &datasourceDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) WithTimeout(timeout time.Duration) *PostCharactersCharacterIDCspaParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) WithContext(ctx context.Context) *PostCharactersCharacterIDCspaParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) WithHTTPClient(client *http.Client) *PostCharactersCharacterIDCspaParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCharacterID adds the characterID to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) WithCharacterID(characterID int32) *PostCharactersCharacterIDCspaParams {
	o.SetCharacterID(characterID)
	return o
}

// SetCharacterID adds the characterId to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) SetCharacterID(characterID int32) {
	o.CharacterID = characterID
}

// WithCharacters adds the characters to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) WithCharacters(characters []int32) *PostCharactersCharacterIDCspaParams {
	o.SetCharacters(characters)
	return o
}

// SetCharacters adds the characters to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) SetCharacters(characters []int32) {
	o.Characters = characters
}

// WithDatasource adds the datasource to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) WithDatasource(datasource *string) *PostCharactersCharacterIDCspaParams {
	o.SetDatasource(datasource)
	return o
}

// SetDatasource adds the datasource to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) SetDatasource(datasource *string) {
	o.Datasource = datasource
}

// WithToken adds the token to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) WithToken(token *string) *PostCharactersCharacterIDCspaParams {
	o.SetToken(token)
	return o
}

// SetToken adds the token to the post characters character id cspa params
func (o *PostCharactersCharacterIDCspaParams) SetToken(token *string) {
	o.Token = token
}

// WriteToRequest writes these params to a swagger request
func (o *PostCharactersCharacterIDCspaParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param character_id
	if err := r.SetPathParam("character_id", swag.FormatInt32(o.CharacterID)); err != nil {
		return err
	}
	if o.Characters != nil {
		if err := r.SetBodyParam(o.Characters); err != nil {
			return err
		}
	}

	if o.Datasource != nil {

		// query param datasource
		var qrDatasource string

		if o.Datasource != nil {
			qrDatasource = *o.Datasource
		}
		qDatasource := qrDatasource
		if qDatasource != "" {

			if err := r.SetQueryParam("datasource", qDatasource); err != nil {
				return err
			}
		}
	}

	if o.Token != nil {

		// query param token
		var qrToken string

		if o.Token != nil {
			qrToken = *o.Token
		}
		qToken := qrToken
		if qToken != "" {

			if err := r.SetQueryParam("token", qToken); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
