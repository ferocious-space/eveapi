// Code generated by go-swagger; DO NOT EDIT.

package character

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ferocious-space/eveapi/models"
)

// PostCharactersCharacterIDCspaReader is a Reader for the PostCharactersCharacterIDCspa structure.
type PostCharactersCharacterIDCspaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCharactersCharacterIDCspaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostCharactersCharacterIDCspaCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostCharactersCharacterIDCspaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostCharactersCharacterIDCspaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostCharactersCharacterIDCspaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewPostCharactersCharacterIDCspaEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostCharactersCharacterIDCspaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostCharactersCharacterIDCspaServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewPostCharactersCharacterIDCspaGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v5/characters/{character_id}/cspa/] post_characters_character_id_cspa", response, response.Code())
	}
}

// NewPostCharactersCharacterIDCspaCreated creates a PostCharactersCharacterIDCspaCreated with default headers values
func NewPostCharactersCharacterIDCspaCreated() *PostCharactersCharacterIDCspaCreated {
	return &PostCharactersCharacterIDCspaCreated{}
}

/*
PostCharactersCharacterIDCspaCreated describes a response with status code 201, with default header values.

Aggregate cost of sending a mail from the source character to the target characters, in ISK
*/
type PostCharactersCharacterIDCspaCreated struct {
	Payload float32
}

// IsSuccess returns true when this post characters character Id cspa created response has a 2xx status code
func (o *PostCharactersCharacterIDCspaCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post characters character Id cspa created response has a 3xx status code
func (o *PostCharactersCharacterIDCspaCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id cspa created response has a 4xx status code
func (o *PostCharactersCharacterIDCspaCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post characters character Id cspa created response has a 5xx status code
func (o *PostCharactersCharacterIDCspaCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters character Id cspa created response a status code equal to that given
func (o *PostCharactersCharacterIDCspaCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post characters character Id cspa created response
func (o *PostCharactersCharacterIDCspaCreated) Code() int {
	return 201
}

func (o *PostCharactersCharacterIDCspaCreated) Error() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaCreated  %+v", 201, o.Payload)
}

func (o *PostCharactersCharacterIDCspaCreated) String() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaCreated  %+v", 201, o.Payload)
}

func (o *PostCharactersCharacterIDCspaCreated) GetPayload() float32 {
	return o.Payload
}

func (o *PostCharactersCharacterIDCspaCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaBadRequest creates a PostCharactersCharacterIDCspaBadRequest with default headers values
func NewPostCharactersCharacterIDCspaBadRequest() *PostCharactersCharacterIDCspaBadRequest {
	return &PostCharactersCharacterIDCspaBadRequest{}
}

/*
PostCharactersCharacterIDCspaBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostCharactersCharacterIDCspaBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this post characters character Id cspa bad request response has a 2xx status code
func (o *PostCharactersCharacterIDCspaBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id cspa bad request response has a 3xx status code
func (o *PostCharactersCharacterIDCspaBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id cspa bad request response has a 4xx status code
func (o *PostCharactersCharacterIDCspaBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post characters character Id cspa bad request response has a 5xx status code
func (o *PostCharactersCharacterIDCspaBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters character Id cspa bad request response a status code equal to that given
func (o *PostCharactersCharacterIDCspaBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post characters character Id cspa bad request response
func (o *PostCharactersCharacterIDCspaBadRequest) Code() int {
	return 400
}

func (o *PostCharactersCharacterIDCspaBadRequest) Error() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaBadRequest  %+v", 400, o.Payload)
}

func (o *PostCharactersCharacterIDCspaBadRequest) String() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaBadRequest  %+v", 400, o.Payload)
}

func (o *PostCharactersCharacterIDCspaBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *PostCharactersCharacterIDCspaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaUnauthorized creates a PostCharactersCharacterIDCspaUnauthorized with default headers values
func NewPostCharactersCharacterIDCspaUnauthorized() *PostCharactersCharacterIDCspaUnauthorized {
	return &PostCharactersCharacterIDCspaUnauthorized{}
}

/*
PostCharactersCharacterIDCspaUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostCharactersCharacterIDCspaUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this post characters character Id cspa unauthorized response has a 2xx status code
func (o *PostCharactersCharacterIDCspaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id cspa unauthorized response has a 3xx status code
func (o *PostCharactersCharacterIDCspaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id cspa unauthorized response has a 4xx status code
func (o *PostCharactersCharacterIDCspaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post characters character Id cspa unauthorized response has a 5xx status code
func (o *PostCharactersCharacterIDCspaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters character Id cspa unauthorized response a status code equal to that given
func (o *PostCharactersCharacterIDCspaUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post characters character Id cspa unauthorized response
func (o *PostCharactersCharacterIDCspaUnauthorized) Code() int {
	return 401
}

func (o *PostCharactersCharacterIDCspaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCharactersCharacterIDCspaUnauthorized) String() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCharactersCharacterIDCspaUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *PostCharactersCharacterIDCspaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaForbidden creates a PostCharactersCharacterIDCspaForbidden with default headers values
func NewPostCharactersCharacterIDCspaForbidden() *PostCharactersCharacterIDCspaForbidden {
	return &PostCharactersCharacterIDCspaForbidden{}
}

/*
PostCharactersCharacterIDCspaForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostCharactersCharacterIDCspaForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this post characters character Id cspa forbidden response has a 2xx status code
func (o *PostCharactersCharacterIDCspaForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id cspa forbidden response has a 3xx status code
func (o *PostCharactersCharacterIDCspaForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id cspa forbidden response has a 4xx status code
func (o *PostCharactersCharacterIDCspaForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post characters character Id cspa forbidden response has a 5xx status code
func (o *PostCharactersCharacterIDCspaForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters character Id cspa forbidden response a status code equal to that given
func (o *PostCharactersCharacterIDCspaForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post characters character Id cspa forbidden response
func (o *PostCharactersCharacterIDCspaForbidden) Code() int {
	return 403
}

func (o *PostCharactersCharacterIDCspaForbidden) Error() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaForbidden  %+v", 403, o.Payload)
}

func (o *PostCharactersCharacterIDCspaForbidden) String() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaForbidden  %+v", 403, o.Payload)
}

func (o *PostCharactersCharacterIDCspaForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *PostCharactersCharacterIDCspaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaEnhanceYourCalm creates a PostCharactersCharacterIDCspaEnhanceYourCalm with default headers values
func NewPostCharactersCharacterIDCspaEnhanceYourCalm() *PostCharactersCharacterIDCspaEnhanceYourCalm {
	return &PostCharactersCharacterIDCspaEnhanceYourCalm{}
}

/*
PostCharactersCharacterIDCspaEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type PostCharactersCharacterIDCspaEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this post characters character Id cspa enhance your calm response has a 2xx status code
func (o *PostCharactersCharacterIDCspaEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id cspa enhance your calm response has a 3xx status code
func (o *PostCharactersCharacterIDCspaEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id cspa enhance your calm response has a 4xx status code
func (o *PostCharactersCharacterIDCspaEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this post characters character Id cspa enhance your calm response has a 5xx status code
func (o *PostCharactersCharacterIDCspaEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this post characters character Id cspa enhance your calm response a status code equal to that given
func (o *PostCharactersCharacterIDCspaEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the post characters character Id cspa enhance your calm response
func (o *PostCharactersCharacterIDCspaEnhanceYourCalm) Code() int {
	return 420
}

func (o *PostCharactersCharacterIDCspaEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *PostCharactersCharacterIDCspaEnhanceYourCalm) String() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *PostCharactersCharacterIDCspaEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *PostCharactersCharacterIDCspaEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaInternalServerError creates a PostCharactersCharacterIDCspaInternalServerError with default headers values
func NewPostCharactersCharacterIDCspaInternalServerError() *PostCharactersCharacterIDCspaInternalServerError {
	return &PostCharactersCharacterIDCspaInternalServerError{}
}

/*
PostCharactersCharacterIDCspaInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostCharactersCharacterIDCspaInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this post characters character Id cspa internal server error response has a 2xx status code
func (o *PostCharactersCharacterIDCspaInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id cspa internal server error response has a 3xx status code
func (o *PostCharactersCharacterIDCspaInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id cspa internal server error response has a 4xx status code
func (o *PostCharactersCharacterIDCspaInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post characters character Id cspa internal server error response has a 5xx status code
func (o *PostCharactersCharacterIDCspaInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post characters character Id cspa internal server error response a status code equal to that given
func (o *PostCharactersCharacterIDCspaInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post characters character Id cspa internal server error response
func (o *PostCharactersCharacterIDCspaInternalServerError) Code() int {
	return 500
}

func (o *PostCharactersCharacterIDCspaInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCharactersCharacterIDCspaInternalServerError) String() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCharactersCharacterIDCspaInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *PostCharactersCharacterIDCspaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaServiceUnavailable creates a PostCharactersCharacterIDCspaServiceUnavailable with default headers values
func NewPostCharactersCharacterIDCspaServiceUnavailable() *PostCharactersCharacterIDCspaServiceUnavailable {
	return &PostCharactersCharacterIDCspaServiceUnavailable{}
}

/*
PostCharactersCharacterIDCspaServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type PostCharactersCharacterIDCspaServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this post characters character Id cspa service unavailable response has a 2xx status code
func (o *PostCharactersCharacterIDCspaServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id cspa service unavailable response has a 3xx status code
func (o *PostCharactersCharacterIDCspaServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id cspa service unavailable response has a 4xx status code
func (o *PostCharactersCharacterIDCspaServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post characters character Id cspa service unavailable response has a 5xx status code
func (o *PostCharactersCharacterIDCspaServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post characters character Id cspa service unavailable response a status code equal to that given
func (o *PostCharactersCharacterIDCspaServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the post characters character Id cspa service unavailable response
func (o *PostCharactersCharacterIDCspaServiceUnavailable) Code() int {
	return 503
}

func (o *PostCharactersCharacterIDCspaServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostCharactersCharacterIDCspaServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostCharactersCharacterIDCspaServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *PostCharactersCharacterIDCspaServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaGatewayTimeout creates a PostCharactersCharacterIDCspaGatewayTimeout with default headers values
func NewPostCharactersCharacterIDCspaGatewayTimeout() *PostCharactersCharacterIDCspaGatewayTimeout {
	return &PostCharactersCharacterIDCspaGatewayTimeout{}
}

/*
PostCharactersCharacterIDCspaGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type PostCharactersCharacterIDCspaGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this post characters character Id cspa gateway timeout response has a 2xx status code
func (o *PostCharactersCharacterIDCspaGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post characters character Id cspa gateway timeout response has a 3xx status code
func (o *PostCharactersCharacterIDCspaGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post characters character Id cspa gateway timeout response has a 4xx status code
func (o *PostCharactersCharacterIDCspaGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this post characters character Id cspa gateway timeout response has a 5xx status code
func (o *PostCharactersCharacterIDCspaGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this post characters character Id cspa gateway timeout response a status code equal to that given
func (o *PostCharactersCharacterIDCspaGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the post characters character Id cspa gateway timeout response
func (o *PostCharactersCharacterIDCspaGatewayTimeout) Code() int {
	return 504
}

func (o *PostCharactersCharacterIDCspaGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostCharactersCharacterIDCspaGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /v5/characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostCharactersCharacterIDCspaGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *PostCharactersCharacterIDCspaGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
