// Code generated by go-swagger; DO NOT EDIT.

package faction_warfare

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCorporationsCorporationIDFwStatsReader is a Reader for the GetCorporationsCorporationIDFwStats structure.
type GetCorporationsCorporationIDFwStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDFwStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCorporationsCorporationIDFwStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCorporationsCorporationIDFwStatsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCorporationsCorporationIDFwStatsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCorporationsCorporationIDFwStatsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCorporationsCorporationIDFwStatsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCorporationsCorporationIDFwStatsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCorporationsCorporationIDFwStatsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCorporationsCorporationIDFwStatsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCorporationsCorporationIDFwStatsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/corporations/{corporation_id}/fw/stats/] get_corporations_corporation_id_fw_stats", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDFwStatsOK creates a GetCorporationsCorporationIDFwStatsOK with default headers values
func NewGetCorporationsCorporationIDFwStatsOK() *GetCorporationsCorporationIDFwStatsOK {
	return &GetCorporationsCorporationIDFwStatsOK{}
}

/*
GetCorporationsCorporationIDFwStatsOK describes a response with status code 200, with default header values.

Faction warfare statistics for a given corporation
*/
type GetCorporationsCorporationIDFwStatsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetCorporationsCorporationIDFwStatsOKBody
}

// IsSuccess returns true when this get corporations corporation Id fw stats o k response has a 2xx status code
func (o *GetCorporationsCorporationIDFwStatsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get corporations corporation Id fw stats o k response has a 3xx status code
func (o *GetCorporationsCorporationIDFwStatsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id fw stats o k response has a 4xx status code
func (o *GetCorporationsCorporationIDFwStatsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id fw stats o k response has a 5xx status code
func (o *GetCorporationsCorporationIDFwStatsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id fw stats o k response a status code equal to that given
func (o *GetCorporationsCorporationIDFwStatsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get corporations corporation Id fw stats o k response
func (o *GetCorporationsCorporationIDFwStatsOK) Code() int {
	return 200
}

func (o *GetCorporationsCorporationIDFwStatsOK) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsOK) String() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsOK) GetPayload() *GetCorporationsCorporationIDFwStatsOKBody {
	return o.Payload
}

func (o *GetCorporationsCorporationIDFwStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetCorporationsCorporationIDFwStatsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDFwStatsNotModified creates a GetCorporationsCorporationIDFwStatsNotModified with default headers values
func NewGetCorporationsCorporationIDFwStatsNotModified() *GetCorporationsCorporationIDFwStatsNotModified {
	return &GetCorporationsCorporationIDFwStatsNotModified{}
}

/*
GetCorporationsCorporationIDFwStatsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCorporationsCorporationIDFwStatsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get corporations corporation Id fw stats not modified response has a 2xx status code
func (o *GetCorporationsCorporationIDFwStatsNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id fw stats not modified response has a 3xx status code
func (o *GetCorporationsCorporationIDFwStatsNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get corporations corporation Id fw stats not modified response has a 4xx status code
func (o *GetCorporationsCorporationIDFwStatsNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id fw stats not modified response has a 5xx status code
func (o *GetCorporationsCorporationIDFwStatsNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id fw stats not modified response a status code equal to that given
func (o *GetCorporationsCorporationIDFwStatsNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get corporations corporation Id fw stats not modified response
func (o *GetCorporationsCorporationIDFwStatsNotModified) Code() int {
	return 304
}

func (o *GetCorporationsCorporationIDFwStatsNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsNotModified ", 304)
}

func (o *GetCorporationsCorporationIDFwStatsNotModified) String() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsNotModified ", 304)
}

func (o *GetCorporationsCorporationIDFwStatsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCorporationsCorporationIDFwStatsBadRequest creates a GetCorporationsCorporationIDFwStatsBadRequest with default headers values
func NewGetCorporationsCorporationIDFwStatsBadRequest() *GetCorporationsCorporationIDFwStatsBadRequest {
	return &GetCorporationsCorporationIDFwStatsBadRequest{}
}

/*
GetCorporationsCorporationIDFwStatsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCorporationsCorporationIDFwStatsBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get corporations corporation Id fw stats bad request response has a 2xx status code
func (o *GetCorporationsCorporationIDFwStatsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id fw stats bad request response has a 3xx status code
func (o *GetCorporationsCorporationIDFwStatsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id fw stats bad request response has a 4xx status code
func (o *GetCorporationsCorporationIDFwStatsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id fw stats bad request response has a 5xx status code
func (o *GetCorporationsCorporationIDFwStatsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id fw stats bad request response a status code equal to that given
func (o *GetCorporationsCorporationIDFwStatsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get corporations corporation Id fw stats bad request response
func (o *GetCorporationsCorporationIDFwStatsBadRequest) Code() int {
	return 400
}

func (o *GetCorporationsCorporationIDFwStatsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCorporationsCorporationIDFwStatsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDFwStatsUnauthorized creates a GetCorporationsCorporationIDFwStatsUnauthorized with default headers values
func NewGetCorporationsCorporationIDFwStatsUnauthorized() *GetCorporationsCorporationIDFwStatsUnauthorized {
	return &GetCorporationsCorporationIDFwStatsUnauthorized{}
}

/*
GetCorporationsCorporationIDFwStatsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDFwStatsUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get corporations corporation Id fw stats unauthorized response has a 2xx status code
func (o *GetCorporationsCorporationIDFwStatsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id fw stats unauthorized response has a 3xx status code
func (o *GetCorporationsCorporationIDFwStatsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id fw stats unauthorized response has a 4xx status code
func (o *GetCorporationsCorporationIDFwStatsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id fw stats unauthorized response has a 5xx status code
func (o *GetCorporationsCorporationIDFwStatsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id fw stats unauthorized response a status code equal to that given
func (o *GetCorporationsCorporationIDFwStatsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get corporations corporation Id fw stats unauthorized response
func (o *GetCorporationsCorporationIDFwStatsUnauthorized) Code() int {
	return 401
}

func (o *GetCorporationsCorporationIDFwStatsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCorporationsCorporationIDFwStatsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDFwStatsForbidden creates a GetCorporationsCorporationIDFwStatsForbidden with default headers values
func NewGetCorporationsCorporationIDFwStatsForbidden() *GetCorporationsCorporationIDFwStatsForbidden {
	return &GetCorporationsCorporationIDFwStatsForbidden{}
}

/*
GetCorporationsCorporationIDFwStatsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCorporationsCorporationIDFwStatsForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get corporations corporation Id fw stats forbidden response has a 2xx status code
func (o *GetCorporationsCorporationIDFwStatsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id fw stats forbidden response has a 3xx status code
func (o *GetCorporationsCorporationIDFwStatsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id fw stats forbidden response has a 4xx status code
func (o *GetCorporationsCorporationIDFwStatsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id fw stats forbidden response has a 5xx status code
func (o *GetCorporationsCorporationIDFwStatsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id fw stats forbidden response a status code equal to that given
func (o *GetCorporationsCorporationIDFwStatsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get corporations corporation Id fw stats forbidden response
func (o *GetCorporationsCorporationIDFwStatsForbidden) Code() int {
	return 403
}

func (o *GetCorporationsCorporationIDFwStatsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCorporationsCorporationIDFwStatsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDFwStatsEnhanceYourCalm creates a GetCorporationsCorporationIDFwStatsEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDFwStatsEnhanceYourCalm() *GetCorporationsCorporationIDFwStatsEnhanceYourCalm {
	return &GetCorporationsCorporationIDFwStatsEnhanceYourCalm{}
}

/*
GetCorporationsCorporationIDFwStatsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCorporationsCorporationIDFwStatsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get corporations corporation Id fw stats enhance your calm response has a 2xx status code
func (o *GetCorporationsCorporationIDFwStatsEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id fw stats enhance your calm response has a 3xx status code
func (o *GetCorporationsCorporationIDFwStatsEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id fw stats enhance your calm response has a 4xx status code
func (o *GetCorporationsCorporationIDFwStatsEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id fw stats enhance your calm response has a 5xx status code
func (o *GetCorporationsCorporationIDFwStatsEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id fw stats enhance your calm response a status code equal to that given
func (o *GetCorporationsCorporationIDFwStatsEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get corporations corporation Id fw stats enhance your calm response
func (o *GetCorporationsCorporationIDFwStatsEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetCorporationsCorporationIDFwStatsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCorporationsCorporationIDFwStatsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDFwStatsInternalServerError creates a GetCorporationsCorporationIDFwStatsInternalServerError with default headers values
func NewGetCorporationsCorporationIDFwStatsInternalServerError() *GetCorporationsCorporationIDFwStatsInternalServerError {
	return &GetCorporationsCorporationIDFwStatsInternalServerError{}
}

/*
GetCorporationsCorporationIDFwStatsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCorporationsCorporationIDFwStatsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get corporations corporation Id fw stats internal server error response has a 2xx status code
func (o *GetCorporationsCorporationIDFwStatsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id fw stats internal server error response has a 3xx status code
func (o *GetCorporationsCorporationIDFwStatsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id fw stats internal server error response has a 4xx status code
func (o *GetCorporationsCorporationIDFwStatsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id fw stats internal server error response has a 5xx status code
func (o *GetCorporationsCorporationIDFwStatsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id fw stats internal server error response a status code equal to that given
func (o *GetCorporationsCorporationIDFwStatsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get corporations corporation Id fw stats internal server error response
func (o *GetCorporationsCorporationIDFwStatsInternalServerError) Code() int {
	return 500
}

func (o *GetCorporationsCorporationIDFwStatsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCorporationsCorporationIDFwStatsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDFwStatsServiceUnavailable creates a GetCorporationsCorporationIDFwStatsServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDFwStatsServiceUnavailable() *GetCorporationsCorporationIDFwStatsServiceUnavailable {
	return &GetCorporationsCorporationIDFwStatsServiceUnavailable{}
}

/*
GetCorporationsCorporationIDFwStatsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDFwStatsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get corporations corporation Id fw stats service unavailable response has a 2xx status code
func (o *GetCorporationsCorporationIDFwStatsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id fw stats service unavailable response has a 3xx status code
func (o *GetCorporationsCorporationIDFwStatsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id fw stats service unavailable response has a 4xx status code
func (o *GetCorporationsCorporationIDFwStatsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id fw stats service unavailable response has a 5xx status code
func (o *GetCorporationsCorporationIDFwStatsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id fw stats service unavailable response a status code equal to that given
func (o *GetCorporationsCorporationIDFwStatsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get corporations corporation Id fw stats service unavailable response
func (o *GetCorporationsCorporationIDFwStatsServiceUnavailable) Code() int {
	return 503
}

func (o *GetCorporationsCorporationIDFwStatsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCorporationsCorporationIDFwStatsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDFwStatsGatewayTimeout creates a GetCorporationsCorporationIDFwStatsGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDFwStatsGatewayTimeout() *GetCorporationsCorporationIDFwStatsGatewayTimeout {
	return &GetCorporationsCorporationIDFwStatsGatewayTimeout{}
}

/*
GetCorporationsCorporationIDFwStatsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDFwStatsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get corporations corporation Id fw stats gateway timeout response has a 2xx status code
func (o *GetCorporationsCorporationIDFwStatsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id fw stats gateway timeout response has a 3xx status code
func (o *GetCorporationsCorporationIDFwStatsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id fw stats gateway timeout response has a 4xx status code
func (o *GetCorporationsCorporationIDFwStatsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id fw stats gateway timeout response has a 5xx status code
func (o *GetCorporationsCorporationIDFwStatsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id fw stats gateway timeout response a status code equal to that given
func (o *GetCorporationsCorporationIDFwStatsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get corporations corporation Id fw stats gateway timeout response
func (o *GetCorporationsCorporationIDFwStatsGatewayTimeout) Code() int {
	return 504
}

func (o *GetCorporationsCorporationIDFwStatsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/fw/stats/][%d] getCorporationsCorporationIdFwStatsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDFwStatsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCorporationsCorporationIDFwStatsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCorporationsCorporationIDFwStatsOKBody get_corporations_corporation_id_fw_stats_ok
//
// 200 ok object
swagger:model GetCorporationsCorporationIDFwStatsOKBody
*/
type GetCorporationsCorporationIDFwStatsOKBody struct {

	// get_corporations_corporation_id_fw_stats_enlisted_on
	//
	// The enlistment date of the given corporation into faction warfare. Will not be included if corporation is not enlisted in faction warfare
	// Format: date-time
	EnlistedOn strfmt.DateTime `json:"enlisted_on,omitempty"`

	// get_corporations_corporation_id_fw_stats_faction_id
	//
	// The faction the given corporation is enlisted to fight for. Will not be included if corporation is not enlisted in faction warfare
	FactionID int32 `json:"faction_id,omitempty"`

	// kills
	// Required: true
	Kills *GetCorporationsCorporationIDFwStatsOKBodyKills `json:"kills"`

	// get_corporations_corporation_id_fw_stats_pilots
	//
	// How many pilots the enlisted corporation has. Will not be included if corporation is not enlisted in faction warfare
	Pilots int32 `json:"pilots,omitempty"`

	// victory points
	// Required: true
	VictoryPoints *GetCorporationsCorporationIDFwStatsOKBodyVictoryPoints `json:"victory_points"`
}

// Validate validates this get corporations corporation ID fw stats o k body
func (o *GetCorporationsCorporationIDFwStatsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEnlistedOn(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateKills(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVictoryPoints(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDFwStatsOKBody) validateEnlistedOn(formats strfmt.Registry) error {
	if swag.IsZero(o.EnlistedOn) { // not required
		return nil
	}

	if err := validate.FormatOf("getCorporationsCorporationIdFwStatsOK"+"."+"enlisted_on", "body", "date-time", o.EnlistedOn.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDFwStatsOKBody) validateKills(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdFwStatsOK"+"."+"kills", "body", o.Kills); err != nil {
		return err
	}

	if o.Kills != nil {
		if err := o.Kills.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCorporationsCorporationIdFwStatsOK" + "." + "kills")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCorporationsCorporationIdFwStatsOK" + "." + "kills")
			}
			return err
		}
	}

	return nil
}

func (o *GetCorporationsCorporationIDFwStatsOKBody) validateVictoryPoints(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdFwStatsOK"+"."+"victory_points", "body", o.VictoryPoints); err != nil {
		return err
	}

	if o.VictoryPoints != nil {
		if err := o.VictoryPoints.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCorporationsCorporationIdFwStatsOK" + "." + "victory_points")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCorporationsCorporationIdFwStatsOK" + "." + "victory_points")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get corporations corporation ID fw stats o k body based on the context it is used
func (o *GetCorporationsCorporationIDFwStatsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateKills(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateVictoryPoints(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDFwStatsOKBody) contextValidateKills(ctx context.Context, formats strfmt.Registry) error {

	if o.Kills != nil {

		if err := o.Kills.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCorporationsCorporationIdFwStatsOK" + "." + "kills")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCorporationsCorporationIdFwStatsOK" + "." + "kills")
			}
			return err
		}
	}

	return nil
}

func (o *GetCorporationsCorporationIDFwStatsOKBody) contextValidateVictoryPoints(ctx context.Context, formats strfmt.Registry) error {

	if o.VictoryPoints != nil {

		if err := o.VictoryPoints.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCorporationsCorporationIdFwStatsOK" + "." + "victory_points")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCorporationsCorporationIdFwStatsOK" + "." + "victory_points")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDFwStatsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDFwStatsOKBody) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDFwStatsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCorporationsCorporationIDFwStatsOKBodyKills get_corporations_corporation_id_fw_stats_kills
//
// Summary of kills done by the given corporation against enemy factions
swagger:model GetCorporationsCorporationIDFwStatsOKBodyKills
*/
type GetCorporationsCorporationIDFwStatsOKBodyKills struct {

	// get_corporations_corporation_id_fw_stats_last_week
	//
	// Last week's total number of kills by members of the given corporation against enemy factions
	// Required: true
	LastWeek *int32 `json:"last_week"`

	// get_corporations_corporation_id_fw_stats_total
	//
	// Total number of kills by members of the given corporation against enemy factions since the corporation enlisted
	// Required: true
	Total *int32 `json:"total"`

	// get_corporations_corporation_id_fw_stats_yesterday
	//
	// Yesterday's total number of kills by members of the given corporation against enemy factions
	// Required: true
	Yesterday *int32 `json:"yesterday"`
}

// Validate validates this get corporations corporation ID fw stats o k body kills
func (o *GetCorporationsCorporationIDFwStatsOKBodyKills) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLastWeek(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTotal(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateYesterday(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDFwStatsOKBodyKills) validateLastWeek(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdFwStatsOK"+"."+"kills"+"."+"last_week", "body", o.LastWeek); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDFwStatsOKBodyKills) validateTotal(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdFwStatsOK"+"."+"kills"+"."+"total", "body", o.Total); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDFwStatsOKBodyKills) validateYesterday(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdFwStatsOK"+"."+"kills"+"."+"yesterday", "body", o.Yesterday); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get corporations corporation ID fw stats o k body kills based on context it is used
func (o *GetCorporationsCorporationIDFwStatsOKBodyKills) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDFwStatsOKBodyKills) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDFwStatsOKBodyKills) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDFwStatsOKBodyKills
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCorporationsCorporationIDFwStatsOKBodyVictoryPoints get_corporations_corporation_id_fw_stats_victory_points
//
// Summary of victory points gained by the given corporation for the enlisted faction
swagger:model GetCorporationsCorporationIDFwStatsOKBodyVictoryPoints
*/
type GetCorporationsCorporationIDFwStatsOKBodyVictoryPoints struct {

	// get_corporations_corporation_id_fw_stats_victory_points_last_week
	//
	// Last week's victory points gained by members of the given corporation
	// Required: true
	LastWeek *int32 `json:"last_week"`

	// get_corporations_corporation_id_fw_stats_victory_points_total
	//
	// Total victory points gained since the given corporation enlisted
	// Required: true
	Total *int32 `json:"total"`

	// get_corporations_corporation_id_fw_stats_victory_points_yesterday
	//
	// Yesterday's victory points gained by members of the given corporation
	// Required: true
	Yesterday *int32 `json:"yesterday"`
}

// Validate validates this get corporations corporation ID fw stats o k body victory points
func (o *GetCorporationsCorporationIDFwStatsOKBodyVictoryPoints) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLastWeek(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTotal(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateYesterday(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDFwStatsOKBodyVictoryPoints) validateLastWeek(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdFwStatsOK"+"."+"victory_points"+"."+"last_week", "body", o.LastWeek); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDFwStatsOKBodyVictoryPoints) validateTotal(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdFwStatsOK"+"."+"victory_points"+"."+"total", "body", o.Total); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDFwStatsOKBodyVictoryPoints) validateYesterday(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdFwStatsOK"+"."+"victory_points"+"."+"yesterday", "body", o.Yesterday); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get corporations corporation ID fw stats o k body victory points based on context it is used
func (o *GetCorporationsCorporationIDFwStatsOKBodyVictoryPoints) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDFwStatsOKBodyVictoryPoints) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDFwStatsOKBodyVictoryPoints) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDFwStatsOKBodyVictoryPoints
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
