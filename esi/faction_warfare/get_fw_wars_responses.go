// Code generated by go-swagger; DO NOT EDIT.

package faction_warfare

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetFwWarsReader is a Reader for the GetFwWars structure.
type GetFwWarsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFwWarsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFwWarsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetFwWarsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetFwWarsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetFwWarsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFwWarsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFwWarsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFwWarsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/fw/wars/] get_fw_wars", response, response.Code())
	}
}

// NewGetFwWarsOK creates a GetFwWarsOK with default headers values
func NewGetFwWarsOK() *GetFwWarsOK {
	return &GetFwWarsOK{}
}

/*
GetFwWarsOK describes a response with status code 200, with default header values.

A list of NPC factions at war
*/
type GetFwWarsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetFwWarsOKBodyItems0
}

// IsSuccess returns true when this get fw wars o k response has a 2xx status code
func (o *GetFwWarsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fw wars o k response has a 3xx status code
func (o *GetFwWarsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fw wars o k response has a 4xx status code
func (o *GetFwWarsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fw wars o k response has a 5xx status code
func (o *GetFwWarsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fw wars o k response a status code equal to that given
func (o *GetFwWarsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fw wars o k response
func (o *GetFwWarsOK) Code() int {
	return 200
}

func (o *GetFwWarsOK) Error() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsOK  %+v", 200, o.Payload)
}

func (o *GetFwWarsOK) String() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsOK  %+v", 200, o.Payload)
}

func (o *GetFwWarsOK) GetPayload() []*GetFwWarsOKBodyItems0 {
	return o.Payload
}

func (o *GetFwWarsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwWarsNotModified creates a GetFwWarsNotModified with default headers values
func NewGetFwWarsNotModified() *GetFwWarsNotModified {
	return &GetFwWarsNotModified{}
}

/*
GetFwWarsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetFwWarsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get fw wars not modified response has a 2xx status code
func (o *GetFwWarsNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fw wars not modified response has a 3xx status code
func (o *GetFwWarsNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get fw wars not modified response has a 4xx status code
func (o *GetFwWarsNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fw wars not modified response has a 5xx status code
func (o *GetFwWarsNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get fw wars not modified response a status code equal to that given
func (o *GetFwWarsNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get fw wars not modified response
func (o *GetFwWarsNotModified) Code() int {
	return 304
}

func (o *GetFwWarsNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsNotModified ", 304)
}

func (o *GetFwWarsNotModified) String() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsNotModified ", 304)
}

func (o *GetFwWarsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetFwWarsBadRequest creates a GetFwWarsBadRequest with default headers values
func NewGetFwWarsBadRequest() *GetFwWarsBadRequest {
	return &GetFwWarsBadRequest{}
}

/*
GetFwWarsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetFwWarsBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get fw wars bad request response has a 2xx status code
func (o *GetFwWarsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fw wars bad request response has a 3xx status code
func (o *GetFwWarsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fw wars bad request response has a 4xx status code
func (o *GetFwWarsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fw wars bad request response has a 5xx status code
func (o *GetFwWarsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fw wars bad request response a status code equal to that given
func (o *GetFwWarsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fw wars bad request response
func (o *GetFwWarsBadRequest) Code() int {
	return 400
}

func (o *GetFwWarsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFwWarsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFwWarsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetFwWarsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwWarsEnhanceYourCalm creates a GetFwWarsEnhanceYourCalm with default headers values
func NewGetFwWarsEnhanceYourCalm() *GetFwWarsEnhanceYourCalm {
	return &GetFwWarsEnhanceYourCalm{}
}

/*
GetFwWarsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetFwWarsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get fw wars enhance your calm response has a 2xx status code
func (o *GetFwWarsEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fw wars enhance your calm response has a 3xx status code
func (o *GetFwWarsEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fw wars enhance your calm response has a 4xx status code
func (o *GetFwWarsEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fw wars enhance your calm response has a 5xx status code
func (o *GetFwWarsEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get fw wars enhance your calm response a status code equal to that given
func (o *GetFwWarsEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get fw wars enhance your calm response
func (o *GetFwWarsEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetFwWarsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetFwWarsEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetFwWarsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetFwWarsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwWarsInternalServerError creates a GetFwWarsInternalServerError with default headers values
func NewGetFwWarsInternalServerError() *GetFwWarsInternalServerError {
	return &GetFwWarsInternalServerError{}
}

/*
GetFwWarsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetFwWarsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get fw wars internal server error response has a 2xx status code
func (o *GetFwWarsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fw wars internal server error response has a 3xx status code
func (o *GetFwWarsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fw wars internal server error response has a 4xx status code
func (o *GetFwWarsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fw wars internal server error response has a 5xx status code
func (o *GetFwWarsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fw wars internal server error response a status code equal to that given
func (o *GetFwWarsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get fw wars internal server error response
func (o *GetFwWarsInternalServerError) Code() int {
	return 500
}

func (o *GetFwWarsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFwWarsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFwWarsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetFwWarsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwWarsServiceUnavailable creates a GetFwWarsServiceUnavailable with default headers values
func NewGetFwWarsServiceUnavailable() *GetFwWarsServiceUnavailable {
	return &GetFwWarsServiceUnavailable{}
}

/*
GetFwWarsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetFwWarsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get fw wars service unavailable response has a 2xx status code
func (o *GetFwWarsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fw wars service unavailable response has a 3xx status code
func (o *GetFwWarsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fw wars service unavailable response has a 4xx status code
func (o *GetFwWarsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fw wars service unavailable response has a 5xx status code
func (o *GetFwWarsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get fw wars service unavailable response a status code equal to that given
func (o *GetFwWarsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get fw wars service unavailable response
func (o *GetFwWarsServiceUnavailable) Code() int {
	return 503
}

func (o *GetFwWarsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFwWarsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFwWarsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetFwWarsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwWarsGatewayTimeout creates a GetFwWarsGatewayTimeout with default headers values
func NewGetFwWarsGatewayTimeout() *GetFwWarsGatewayTimeout {
	return &GetFwWarsGatewayTimeout{}
}

/*
GetFwWarsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetFwWarsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get fw wars gateway timeout response has a 2xx status code
func (o *GetFwWarsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fw wars gateway timeout response has a 3xx status code
func (o *GetFwWarsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fw wars gateway timeout response has a 4xx status code
func (o *GetFwWarsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fw wars gateway timeout response has a 5xx status code
func (o *GetFwWarsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get fw wars gateway timeout response a status code equal to that given
func (o *GetFwWarsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get fw wars gateway timeout response
func (o *GetFwWarsGatewayTimeout) Code() int {
	return 504
}

func (o *GetFwWarsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFwWarsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/fw/wars/][%d] getFwWarsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFwWarsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetFwWarsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetFwWarsOKBodyItems0 get_fw_wars_200_ok
//
// 200 ok object
swagger:model GetFwWarsOKBodyItems0
*/
type GetFwWarsOKBodyItems0 struct {

	// get_fw_wars_against_id
	//
	// The faction ID of the enemy faction.
	// Required: true
	AgainstID *int32 `json:"against_id"`

	// get_fw_wars_faction_id
	//
	// faction_id integer
	// Required: true
	FactionID *int32 `json:"faction_id"`
}

// Validate validates this get fw wars o k body items0
func (o *GetFwWarsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAgainstID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFactionID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwWarsOKBodyItems0) validateAgainstID(formats strfmt.Registry) error {

	if err := validate.Required("against_id", "body", o.AgainstID); err != nil {
		return err
	}

	return nil
}

func (o *GetFwWarsOKBodyItems0) validateFactionID(formats strfmt.Registry) error {

	if err := validate.Required("faction_id", "body", o.FactionID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get fw wars o k body items0 based on context it is used
func (o *GetFwWarsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwWarsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwWarsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetFwWarsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
