// Code generated by go-swagger; DO NOT EDIT.

package faction_warfare

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCharactersCharacterIDFwStatsReader is a Reader for the GetCharactersCharacterIDFwStats structure.
type GetCharactersCharacterIDFwStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDFwStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCharactersCharacterIDFwStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCharactersCharacterIDFwStatsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCharactersCharacterIDFwStatsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCharactersCharacterIDFwStatsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCharactersCharacterIDFwStatsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCharactersCharacterIDFwStatsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCharactersCharacterIDFwStatsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCharactersCharacterIDFwStatsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCharactersCharacterIDFwStatsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCharactersCharacterIDFwStatsOK creates a GetCharactersCharacterIDFwStatsOK with default headers values
func NewGetCharactersCharacterIDFwStatsOK() *GetCharactersCharacterIDFwStatsOK {
	return &GetCharactersCharacterIDFwStatsOK{}
}

/* GetCharactersCharacterIDFwStatsOK describes a response with status code 200, with default header values.

Faction warfare statistics for a given character
*/
type GetCharactersCharacterIDFwStatsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetCharactersCharacterIDFwStatsOKBody
}

func (o *GetCharactersCharacterIDFwStatsOK) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/fw/stats/][%d] getCharactersCharacterIdFwStatsOK  %+v", 200, o.Payload)
}
func (o *GetCharactersCharacterIDFwStatsOK) GetPayload() *GetCharactersCharacterIDFwStatsOKBody {
	return o.Payload
}

func (o *GetCharactersCharacterIDFwStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetCharactersCharacterIDFwStatsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDFwStatsNotModified creates a GetCharactersCharacterIDFwStatsNotModified with default headers values
func NewGetCharactersCharacterIDFwStatsNotModified() *GetCharactersCharacterIDFwStatsNotModified {
	return &GetCharactersCharacterIDFwStatsNotModified{}
}

/* GetCharactersCharacterIDFwStatsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCharactersCharacterIDFwStatsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDFwStatsNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/fw/stats/][%d] getCharactersCharacterIdFwStatsNotModified ", 304)
}

func (o *GetCharactersCharacterIDFwStatsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCharactersCharacterIDFwStatsBadRequest creates a GetCharactersCharacterIDFwStatsBadRequest with default headers values
func NewGetCharactersCharacterIDFwStatsBadRequest() *GetCharactersCharacterIDFwStatsBadRequest {
	return &GetCharactersCharacterIDFwStatsBadRequest{}
}

/* GetCharactersCharacterIDFwStatsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCharactersCharacterIDFwStatsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDFwStatsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/fw/stats/][%d] getCharactersCharacterIdFwStatsBadRequest  %+v", 400, o.Payload)
}
func (o *GetCharactersCharacterIDFwStatsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCharactersCharacterIDFwStatsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDFwStatsUnauthorized creates a GetCharactersCharacterIDFwStatsUnauthorized with default headers values
func NewGetCharactersCharacterIDFwStatsUnauthorized() *GetCharactersCharacterIDFwStatsUnauthorized {
	return &GetCharactersCharacterIDFwStatsUnauthorized{}
}

/* GetCharactersCharacterIDFwStatsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCharactersCharacterIDFwStatsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDFwStatsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/fw/stats/][%d] getCharactersCharacterIdFwStatsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCharactersCharacterIDFwStatsUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCharactersCharacterIDFwStatsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDFwStatsForbidden creates a GetCharactersCharacterIDFwStatsForbidden with default headers values
func NewGetCharactersCharacterIDFwStatsForbidden() *GetCharactersCharacterIDFwStatsForbidden {
	return &GetCharactersCharacterIDFwStatsForbidden{}
}

/* GetCharactersCharacterIDFwStatsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCharactersCharacterIDFwStatsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDFwStatsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/fw/stats/][%d] getCharactersCharacterIdFwStatsForbidden  %+v", 403, o.Payload)
}
func (o *GetCharactersCharacterIDFwStatsForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCharactersCharacterIDFwStatsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDFwStatsEnhanceYourCalm creates a GetCharactersCharacterIDFwStatsEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDFwStatsEnhanceYourCalm() *GetCharactersCharacterIDFwStatsEnhanceYourCalm {
	return &GetCharactersCharacterIDFwStatsEnhanceYourCalm{}
}

/* GetCharactersCharacterIDFwStatsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCharactersCharacterIDFwStatsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDFwStatsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/fw/stats/][%d] getCharactersCharacterIdFwStatsEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetCharactersCharacterIDFwStatsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCharactersCharacterIDFwStatsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDFwStatsInternalServerError creates a GetCharactersCharacterIDFwStatsInternalServerError with default headers values
func NewGetCharactersCharacterIDFwStatsInternalServerError() *GetCharactersCharacterIDFwStatsInternalServerError {
	return &GetCharactersCharacterIDFwStatsInternalServerError{}
}

/* GetCharactersCharacterIDFwStatsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCharactersCharacterIDFwStatsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDFwStatsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/fw/stats/][%d] getCharactersCharacterIdFwStatsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCharactersCharacterIDFwStatsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCharactersCharacterIDFwStatsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDFwStatsServiceUnavailable creates a GetCharactersCharacterIDFwStatsServiceUnavailable with default headers values
func NewGetCharactersCharacterIDFwStatsServiceUnavailable() *GetCharactersCharacterIDFwStatsServiceUnavailable {
	return &GetCharactersCharacterIDFwStatsServiceUnavailable{}
}

/* GetCharactersCharacterIDFwStatsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCharactersCharacterIDFwStatsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDFwStatsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/fw/stats/][%d] getCharactersCharacterIdFwStatsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetCharactersCharacterIDFwStatsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCharactersCharacterIDFwStatsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDFwStatsGatewayTimeout creates a GetCharactersCharacterIDFwStatsGatewayTimeout with default headers values
func NewGetCharactersCharacterIDFwStatsGatewayTimeout() *GetCharactersCharacterIDFwStatsGatewayTimeout {
	return &GetCharactersCharacterIDFwStatsGatewayTimeout{}
}

/* GetCharactersCharacterIDFwStatsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDFwStatsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDFwStatsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/fw/stats/][%d] getCharactersCharacterIdFwStatsGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetCharactersCharacterIDFwStatsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCharactersCharacterIDFwStatsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDFwStatsOKBody get_characters_character_id_fw_stats_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDFwStatsOKBody
*/
type GetCharactersCharacterIDFwStatsOKBody struct {

	// get_characters_character_id_fw_stats_current_rank
	//
	// The given character's current faction rank
	// Maximum: 9
	// Minimum: 0
	CurrentRank *int32 `json:"current_rank,omitempty"`

	// get_characters_character_id_fw_stats_enlisted_on
	//
	// The enlistment date of the given character into faction warfare. Will not be included if character is not enlisted in faction warfare
	// Format: date-time
	EnlistedOn strfmt.DateTime `json:"enlisted_on,omitempty"`

	// get_characters_character_id_fw_stats_faction_id
	//
	// The faction the given character is enlisted to fight for. Will not be included if character is not enlisted in faction warfare
	FactionID int32 `json:"faction_id,omitempty"`

	// get_characters_character_id_fw_stats_highest_rank
	//
	// The given character's highest faction rank achieved
	// Maximum: 9
	// Minimum: 0
	HighestRank *int32 `json:"highest_rank,omitempty"`

	// kills
	// Required: true
	Kills *GetCharactersCharacterIDFwStatsOKBodyKills `json:"kills"`

	// victory points
	// Required: true
	VictoryPoints *GetCharactersCharacterIDFwStatsOKBodyVictoryPoints `json:"victory_points"`
}

// Validate validates this get characters character ID fw stats o k body
func (o *GetCharactersCharacterIDFwStatsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCurrentRank(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEnlistedOn(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateHighestRank(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateKills(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVictoryPoints(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBody) validateCurrentRank(formats strfmt.Registry) error {
	if swag.IsZero(o.CurrentRank) { // not required
		return nil
	}

	if err := validate.MinimumInt("getCharactersCharacterIdFwStatsOK"+"."+"current_rank", "body", int64(*o.CurrentRank), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("getCharactersCharacterIdFwStatsOK"+"."+"current_rank", "body", int64(*o.CurrentRank), 9, false); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBody) validateEnlistedOn(formats strfmt.Registry) error {
	if swag.IsZero(o.EnlistedOn) { // not required
		return nil
	}

	if err := validate.FormatOf("getCharactersCharacterIdFwStatsOK"+"."+"enlisted_on", "body", "date-time", o.EnlistedOn.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBody) validateHighestRank(formats strfmt.Registry) error {
	if swag.IsZero(o.HighestRank) { // not required
		return nil
	}

	if err := validate.MinimumInt("getCharactersCharacterIdFwStatsOK"+"."+"highest_rank", "body", int64(*o.HighestRank), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("getCharactersCharacterIdFwStatsOK"+"."+"highest_rank", "body", int64(*o.HighestRank), 9, false); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBody) validateKills(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdFwStatsOK"+"."+"kills", "body", o.Kills); err != nil {
		return err
	}

	if o.Kills != nil {
		if err := o.Kills.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCharactersCharacterIdFwStatsOK" + "." + "kills")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCharactersCharacterIdFwStatsOK" + "." + "kills")
			}
			return err
		}
	}

	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBody) validateVictoryPoints(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdFwStatsOK"+"."+"victory_points", "body", o.VictoryPoints); err != nil {
		return err
	}

	if o.VictoryPoints != nil {
		if err := o.VictoryPoints.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCharactersCharacterIdFwStatsOK" + "." + "victory_points")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCharactersCharacterIdFwStatsOK" + "." + "victory_points")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get characters character ID fw stats o k body based on the context it is used
func (o *GetCharactersCharacterIDFwStatsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateKills(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateVictoryPoints(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBody) contextValidateKills(ctx context.Context, formats strfmt.Registry) error {

	if o.Kills != nil {
		if err := o.Kills.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCharactersCharacterIdFwStatsOK" + "." + "kills")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCharactersCharacterIdFwStatsOK" + "." + "kills")
			}
			return err
		}
	}

	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBody) contextValidateVictoryPoints(ctx context.Context, formats strfmt.Registry) error {

	if o.VictoryPoints != nil {
		if err := o.VictoryPoints.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCharactersCharacterIdFwStatsOK" + "." + "victory_points")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCharactersCharacterIdFwStatsOK" + "." + "victory_points")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDFwStatsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDFwStatsOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDFwStatsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCharactersCharacterIDFwStatsOKBodyKills get_characters_character_id_fw_stats_kills
//
// Summary of kills done by the given character against enemy factions
swagger:model GetCharactersCharacterIDFwStatsOKBodyKills
*/
type GetCharactersCharacterIDFwStatsOKBodyKills struct {

	// get_characters_character_id_fw_stats_last_week
	//
	// Last week's total number of kills by a given character against enemy factions
	// Required: true
	LastWeek *int32 `json:"last_week"`

	// get_characters_character_id_fw_stats_total
	//
	// Total number of kills by a given character against enemy factions since the character enlisted
	// Required: true
	Total *int32 `json:"total"`

	// get_characters_character_id_fw_stats_yesterday
	//
	// Yesterday's total number of kills by a given character against enemy factions
	// Required: true
	Yesterday *int32 `json:"yesterday"`
}

// Validate validates this get characters character ID fw stats o k body kills
func (o *GetCharactersCharacterIDFwStatsOKBodyKills) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLastWeek(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTotal(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateYesterday(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBodyKills) validateLastWeek(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdFwStatsOK"+"."+"kills"+"."+"last_week", "body", o.LastWeek); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBodyKills) validateTotal(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdFwStatsOK"+"."+"kills"+"."+"total", "body", o.Total); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBodyKills) validateYesterday(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdFwStatsOK"+"."+"kills"+"."+"yesterday", "body", o.Yesterday); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID fw stats o k body kills based on context it is used
func (o *GetCharactersCharacterIDFwStatsOKBodyKills) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDFwStatsOKBodyKills) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDFwStatsOKBodyKills) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDFwStatsOKBodyKills
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCharactersCharacterIDFwStatsOKBodyVictoryPoints get_characters_character_id_fw_stats_victory_points
//
// Summary of victory points gained by the given character for the enlisted faction
swagger:model GetCharactersCharacterIDFwStatsOKBodyVictoryPoints
*/
type GetCharactersCharacterIDFwStatsOKBodyVictoryPoints struct {

	// get_characters_character_id_fw_stats_victory_points_last_week
	//
	// Last week's victory points gained by the given character
	// Required: true
	LastWeek *int32 `json:"last_week"`

	// get_characters_character_id_fw_stats_victory_points_total
	//
	// Total victory points gained since the given character enlisted
	// Required: true
	Total *int32 `json:"total"`

	// get_characters_character_id_fw_stats_victory_points_yesterday
	//
	// Yesterday's victory points gained by the given character
	// Required: true
	Yesterday *int32 `json:"yesterday"`
}

// Validate validates this get characters character ID fw stats o k body victory points
func (o *GetCharactersCharacterIDFwStatsOKBodyVictoryPoints) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLastWeek(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTotal(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateYesterday(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBodyVictoryPoints) validateLastWeek(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdFwStatsOK"+"."+"victory_points"+"."+"last_week", "body", o.LastWeek); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBodyVictoryPoints) validateTotal(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdFwStatsOK"+"."+"victory_points"+"."+"total", "body", o.Total); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDFwStatsOKBodyVictoryPoints) validateYesterday(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdFwStatsOK"+"."+"victory_points"+"."+"yesterday", "body", o.Yesterday); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID fw stats o k body victory points based on context it is used
func (o *GetCharactersCharacterIDFwStatsOKBodyVictoryPoints) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDFwStatsOKBodyVictoryPoints) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDFwStatsOKBodyVictoryPoints) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDFwStatsOKBodyVictoryPoints
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
