// Code generated by go-swagger; DO NOT EDIT.

package faction_warfare

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetFwStatsReader is a Reader for the GetFwStats structure.
type GetFwStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFwStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFwStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetFwStatsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetFwStatsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetFwStatsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFwStatsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFwStatsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFwStatsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/fw/stats/] get_fw_stats", response, response.Code())
	}
}

// NewGetFwStatsOK creates a GetFwStatsOK with default headers values
func NewGetFwStatsOK() *GetFwStatsOK {
	return &GetFwStatsOK{}
}

/*
GetFwStatsOK describes a response with status code 200, with default header values.

Per faction breakdown of faction warfare statistics
*/
type GetFwStatsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetFwStatsOKBodyItems0
}

// IsSuccess returns true when this get fw stats o k response has a 2xx status code
func (o *GetFwStatsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fw stats o k response has a 3xx status code
func (o *GetFwStatsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fw stats o k response has a 4xx status code
func (o *GetFwStatsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fw stats o k response has a 5xx status code
func (o *GetFwStatsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fw stats o k response a status code equal to that given
func (o *GetFwStatsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fw stats o k response
func (o *GetFwStatsOK) Code() int {
	return 200
}

func (o *GetFwStatsOK) Error() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsOK  %+v", 200, o.Payload)
}

func (o *GetFwStatsOK) String() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsOK  %+v", 200, o.Payload)
}

func (o *GetFwStatsOK) GetPayload() []*GetFwStatsOKBodyItems0 {
	return o.Payload
}

func (o *GetFwStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwStatsNotModified creates a GetFwStatsNotModified with default headers values
func NewGetFwStatsNotModified() *GetFwStatsNotModified {
	return &GetFwStatsNotModified{}
}

/*
GetFwStatsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetFwStatsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get fw stats not modified response has a 2xx status code
func (o *GetFwStatsNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fw stats not modified response has a 3xx status code
func (o *GetFwStatsNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get fw stats not modified response has a 4xx status code
func (o *GetFwStatsNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fw stats not modified response has a 5xx status code
func (o *GetFwStatsNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get fw stats not modified response a status code equal to that given
func (o *GetFwStatsNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get fw stats not modified response
func (o *GetFwStatsNotModified) Code() int {
	return 304
}

func (o *GetFwStatsNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsNotModified ", 304)
}

func (o *GetFwStatsNotModified) String() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsNotModified ", 304)
}

func (o *GetFwStatsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetFwStatsBadRequest creates a GetFwStatsBadRequest with default headers values
func NewGetFwStatsBadRequest() *GetFwStatsBadRequest {
	return &GetFwStatsBadRequest{}
}

/*
GetFwStatsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetFwStatsBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get fw stats bad request response has a 2xx status code
func (o *GetFwStatsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fw stats bad request response has a 3xx status code
func (o *GetFwStatsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fw stats bad request response has a 4xx status code
func (o *GetFwStatsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fw stats bad request response has a 5xx status code
func (o *GetFwStatsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fw stats bad request response a status code equal to that given
func (o *GetFwStatsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fw stats bad request response
func (o *GetFwStatsBadRequest) Code() int {
	return 400
}

func (o *GetFwStatsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFwStatsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFwStatsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetFwStatsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwStatsEnhanceYourCalm creates a GetFwStatsEnhanceYourCalm with default headers values
func NewGetFwStatsEnhanceYourCalm() *GetFwStatsEnhanceYourCalm {
	return &GetFwStatsEnhanceYourCalm{}
}

/*
GetFwStatsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetFwStatsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get fw stats enhance your calm response has a 2xx status code
func (o *GetFwStatsEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fw stats enhance your calm response has a 3xx status code
func (o *GetFwStatsEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fw stats enhance your calm response has a 4xx status code
func (o *GetFwStatsEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fw stats enhance your calm response has a 5xx status code
func (o *GetFwStatsEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get fw stats enhance your calm response a status code equal to that given
func (o *GetFwStatsEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get fw stats enhance your calm response
func (o *GetFwStatsEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetFwStatsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetFwStatsEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetFwStatsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetFwStatsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwStatsInternalServerError creates a GetFwStatsInternalServerError with default headers values
func NewGetFwStatsInternalServerError() *GetFwStatsInternalServerError {
	return &GetFwStatsInternalServerError{}
}

/*
GetFwStatsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetFwStatsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get fw stats internal server error response has a 2xx status code
func (o *GetFwStatsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fw stats internal server error response has a 3xx status code
func (o *GetFwStatsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fw stats internal server error response has a 4xx status code
func (o *GetFwStatsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fw stats internal server error response has a 5xx status code
func (o *GetFwStatsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fw stats internal server error response a status code equal to that given
func (o *GetFwStatsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get fw stats internal server error response
func (o *GetFwStatsInternalServerError) Code() int {
	return 500
}

func (o *GetFwStatsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFwStatsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFwStatsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetFwStatsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwStatsServiceUnavailable creates a GetFwStatsServiceUnavailable with default headers values
func NewGetFwStatsServiceUnavailable() *GetFwStatsServiceUnavailable {
	return &GetFwStatsServiceUnavailable{}
}

/*
GetFwStatsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetFwStatsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get fw stats service unavailable response has a 2xx status code
func (o *GetFwStatsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fw stats service unavailable response has a 3xx status code
func (o *GetFwStatsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fw stats service unavailable response has a 4xx status code
func (o *GetFwStatsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fw stats service unavailable response has a 5xx status code
func (o *GetFwStatsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get fw stats service unavailable response a status code equal to that given
func (o *GetFwStatsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get fw stats service unavailable response
func (o *GetFwStatsServiceUnavailable) Code() int {
	return 503
}

func (o *GetFwStatsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFwStatsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFwStatsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetFwStatsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwStatsGatewayTimeout creates a GetFwStatsGatewayTimeout with default headers values
func NewGetFwStatsGatewayTimeout() *GetFwStatsGatewayTimeout {
	return &GetFwStatsGatewayTimeout{}
}

/*
GetFwStatsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetFwStatsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get fw stats gateway timeout response has a 2xx status code
func (o *GetFwStatsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fw stats gateway timeout response has a 3xx status code
func (o *GetFwStatsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fw stats gateway timeout response has a 4xx status code
func (o *GetFwStatsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fw stats gateway timeout response has a 5xx status code
func (o *GetFwStatsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get fw stats gateway timeout response a status code equal to that given
func (o *GetFwStatsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get fw stats gateway timeout response
func (o *GetFwStatsGatewayTimeout) Code() int {
	return 504
}

func (o *GetFwStatsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFwStatsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/fw/stats/][%d] getFwStatsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFwStatsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetFwStatsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetFwStatsOKBodyItems0 get_fw_stats_200_ok
//
// 200 ok object
swagger:model GetFwStatsOKBodyItems0
*/
type GetFwStatsOKBodyItems0 struct {

	// get_fw_stats_faction_id
	//
	// faction_id integer
	// Required: true
	FactionID *int32 `json:"faction_id"`

	// kills
	// Required: true
	Kills *GetFwStatsOKBodyItems0Kills `json:"kills"`

	// get_fw_stats_pilots
	//
	// How many pilots fight for the given faction
	// Required: true
	Pilots *int32 `json:"pilots"`

	// get_fw_stats_systems_controlled
	//
	// The number of solar systems controlled by the given faction
	// Required: true
	SystemsControlled *int32 `json:"systems_controlled"`

	// victory points
	// Required: true
	VictoryPoints *GetFwStatsOKBodyItems0VictoryPoints `json:"victory_points"`
}

// Validate validates this get fw stats o k body items0
func (o *GetFwStatsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFactionID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateKills(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePilots(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSystemsControlled(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVictoryPoints(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwStatsOKBodyItems0) validateFactionID(formats strfmt.Registry) error {

	if err := validate.Required("faction_id", "body", o.FactionID); err != nil {
		return err
	}

	return nil
}

func (o *GetFwStatsOKBodyItems0) validateKills(formats strfmt.Registry) error {

	if err := validate.Required("kills", "body", o.Kills); err != nil {
		return err
	}

	if o.Kills != nil {
		if err := o.Kills.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("kills")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("kills")
			}
			return err
		}
	}

	return nil
}

func (o *GetFwStatsOKBodyItems0) validatePilots(formats strfmt.Registry) error {

	if err := validate.Required("pilots", "body", o.Pilots); err != nil {
		return err
	}

	return nil
}

func (o *GetFwStatsOKBodyItems0) validateSystemsControlled(formats strfmt.Registry) error {

	if err := validate.Required("systems_controlled", "body", o.SystemsControlled); err != nil {
		return err
	}

	return nil
}

func (o *GetFwStatsOKBodyItems0) validateVictoryPoints(formats strfmt.Registry) error {

	if err := validate.Required("victory_points", "body", o.VictoryPoints); err != nil {
		return err
	}

	if o.VictoryPoints != nil {
		if err := o.VictoryPoints.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("victory_points")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("victory_points")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get fw stats o k body items0 based on the context it is used
func (o *GetFwStatsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateKills(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateVictoryPoints(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwStatsOKBodyItems0) contextValidateKills(ctx context.Context, formats strfmt.Registry) error {

	if o.Kills != nil {

		if err := o.Kills.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("kills")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("kills")
			}
			return err
		}
	}

	return nil
}

func (o *GetFwStatsOKBodyItems0) contextValidateVictoryPoints(ctx context.Context, formats strfmt.Registry) error {

	if o.VictoryPoints != nil {

		if err := o.VictoryPoints.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("victory_points")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("victory_points")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetFwStatsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwStatsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetFwStatsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetFwStatsOKBodyItems0Kills get_fw_stats_kills
//
// Summary of kills against an enemy faction for the given faction
swagger:model GetFwStatsOKBodyItems0Kills
*/
type GetFwStatsOKBodyItems0Kills struct {

	// get_fw_stats_last_week
	//
	// Last week's total number of kills against enemy factions
	// Required: true
	LastWeek *int32 `json:"last_week"`

	// get_fw_stats_total
	//
	// Total number of kills against enemy factions since faction warfare began
	// Required: true
	Total *int32 `json:"total"`

	// get_fw_stats_yesterday
	//
	// Yesterday's total number of kills against enemy factions
	// Required: true
	Yesterday *int32 `json:"yesterday"`
}

// Validate validates this get fw stats o k body items0 kills
func (o *GetFwStatsOKBodyItems0Kills) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLastWeek(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTotal(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateYesterday(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwStatsOKBodyItems0Kills) validateLastWeek(formats strfmt.Registry) error {

	if err := validate.Required("kills"+"."+"last_week", "body", o.LastWeek); err != nil {
		return err
	}

	return nil
}

func (o *GetFwStatsOKBodyItems0Kills) validateTotal(formats strfmt.Registry) error {

	if err := validate.Required("kills"+"."+"total", "body", o.Total); err != nil {
		return err
	}

	return nil
}

func (o *GetFwStatsOKBodyItems0Kills) validateYesterday(formats strfmt.Registry) error {

	if err := validate.Required("kills"+"."+"yesterday", "body", o.Yesterday); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get fw stats o k body items0 kills based on context it is used
func (o *GetFwStatsOKBodyItems0Kills) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwStatsOKBodyItems0Kills) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwStatsOKBodyItems0Kills) UnmarshalBinary(b []byte) error {
	var res GetFwStatsOKBodyItems0Kills
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetFwStatsOKBodyItems0VictoryPoints get_fw_stats_victory_points
//
// Summary of victory points gained for the given faction
swagger:model GetFwStatsOKBodyItems0VictoryPoints
*/
type GetFwStatsOKBodyItems0VictoryPoints struct {

	// get_fw_stats_victory_points_last_week
	//
	// Last week's victory points gained
	// Required: true
	LastWeek *int32 `json:"last_week"`

	// get_fw_stats_victory_points_total
	//
	// Total victory points gained since faction warfare began
	// Required: true
	Total *int32 `json:"total"`

	// get_fw_stats_victory_points_yesterday
	//
	// Yesterday's victory points gained
	// Required: true
	Yesterday *int32 `json:"yesterday"`
}

// Validate validates this get fw stats o k body items0 victory points
func (o *GetFwStatsOKBodyItems0VictoryPoints) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLastWeek(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTotal(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateYesterday(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwStatsOKBodyItems0VictoryPoints) validateLastWeek(formats strfmt.Registry) error {

	if err := validate.Required("victory_points"+"."+"last_week", "body", o.LastWeek); err != nil {
		return err
	}

	return nil
}

func (o *GetFwStatsOKBodyItems0VictoryPoints) validateTotal(formats strfmt.Registry) error {

	if err := validate.Required("victory_points"+"."+"total", "body", o.Total); err != nil {
		return err
	}

	return nil
}

func (o *GetFwStatsOKBodyItems0VictoryPoints) validateYesterday(formats strfmt.Registry) error {

	if err := validate.Required("victory_points"+"."+"yesterday", "body", o.Yesterday); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get fw stats o k body items0 victory points based on context it is used
func (o *GetFwStatsOKBodyItems0VictoryPoints) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwStatsOKBodyItems0VictoryPoints) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwStatsOKBodyItems0VictoryPoints) UnmarshalBinary(b []byte) error {
	var res GetFwStatsOKBodyItems0VictoryPoints
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
