// Code generated by go-swagger; DO NOT EDIT.

package faction_warfare

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetFwLeaderboardsCharactersReader is a Reader for the GetFwLeaderboardsCharacters structure.
type GetFwLeaderboardsCharactersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFwLeaderboardsCharactersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFwLeaderboardsCharactersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetFwLeaderboardsCharactersNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetFwLeaderboardsCharactersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetFwLeaderboardsCharactersEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFwLeaderboardsCharactersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFwLeaderboardsCharactersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetFwLeaderboardsCharactersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFwLeaderboardsCharactersOK creates a GetFwLeaderboardsCharactersOK with default headers values
func NewGetFwLeaderboardsCharactersOK() *GetFwLeaderboardsCharactersOK {
	return &GetFwLeaderboardsCharactersOK{}
}

/* GetFwLeaderboardsCharactersOK describes a response with status code 200, with default header values.

Character leaderboard of kills and victory points within faction warfare
*/
type GetFwLeaderboardsCharactersOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetFwLeaderboardsCharactersOKBody
}

func (o *GetFwLeaderboardsCharactersOK) Error() string {
	return fmt.Sprintf("[GET /v1/fw/leaderboards/characters/][%d] getFwLeaderboardsCharactersOK  %+v", 200, o.Payload)
}
func (o *GetFwLeaderboardsCharactersOK) GetPayload() *GetFwLeaderboardsCharactersOKBody {
	return o.Payload
}

func (o *GetFwLeaderboardsCharactersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetFwLeaderboardsCharactersOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwLeaderboardsCharactersNotModified creates a GetFwLeaderboardsCharactersNotModified with default headers values
func NewGetFwLeaderboardsCharactersNotModified() *GetFwLeaderboardsCharactersNotModified {
	return &GetFwLeaderboardsCharactersNotModified{}
}

/* GetFwLeaderboardsCharactersNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetFwLeaderboardsCharactersNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetFwLeaderboardsCharactersNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/fw/leaderboards/characters/][%d] getFwLeaderboardsCharactersNotModified ", 304)
}

func (o *GetFwLeaderboardsCharactersNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetFwLeaderboardsCharactersBadRequest creates a GetFwLeaderboardsCharactersBadRequest with default headers values
func NewGetFwLeaderboardsCharactersBadRequest() *GetFwLeaderboardsCharactersBadRequest {
	return &GetFwLeaderboardsCharactersBadRequest{}
}

/* GetFwLeaderboardsCharactersBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetFwLeaderboardsCharactersBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetFwLeaderboardsCharactersBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/fw/leaderboards/characters/][%d] getFwLeaderboardsCharactersBadRequest  %+v", 400, o.Payload)
}
func (o *GetFwLeaderboardsCharactersBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetFwLeaderboardsCharactersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwLeaderboardsCharactersEnhanceYourCalm creates a GetFwLeaderboardsCharactersEnhanceYourCalm with default headers values
func NewGetFwLeaderboardsCharactersEnhanceYourCalm() *GetFwLeaderboardsCharactersEnhanceYourCalm {
	return &GetFwLeaderboardsCharactersEnhanceYourCalm{}
}

/* GetFwLeaderboardsCharactersEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetFwLeaderboardsCharactersEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetFwLeaderboardsCharactersEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/fw/leaderboards/characters/][%d] getFwLeaderboardsCharactersEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetFwLeaderboardsCharactersEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetFwLeaderboardsCharactersEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwLeaderboardsCharactersInternalServerError creates a GetFwLeaderboardsCharactersInternalServerError with default headers values
func NewGetFwLeaderboardsCharactersInternalServerError() *GetFwLeaderboardsCharactersInternalServerError {
	return &GetFwLeaderboardsCharactersInternalServerError{}
}

/* GetFwLeaderboardsCharactersInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetFwLeaderboardsCharactersInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetFwLeaderboardsCharactersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/fw/leaderboards/characters/][%d] getFwLeaderboardsCharactersInternalServerError  %+v", 500, o.Payload)
}
func (o *GetFwLeaderboardsCharactersInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetFwLeaderboardsCharactersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwLeaderboardsCharactersServiceUnavailable creates a GetFwLeaderboardsCharactersServiceUnavailable with default headers values
func NewGetFwLeaderboardsCharactersServiceUnavailable() *GetFwLeaderboardsCharactersServiceUnavailable {
	return &GetFwLeaderboardsCharactersServiceUnavailable{}
}

/* GetFwLeaderboardsCharactersServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetFwLeaderboardsCharactersServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetFwLeaderboardsCharactersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/fw/leaderboards/characters/][%d] getFwLeaderboardsCharactersServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetFwLeaderboardsCharactersServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetFwLeaderboardsCharactersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwLeaderboardsCharactersGatewayTimeout creates a GetFwLeaderboardsCharactersGatewayTimeout with default headers values
func NewGetFwLeaderboardsCharactersGatewayTimeout() *GetFwLeaderboardsCharactersGatewayTimeout {
	return &GetFwLeaderboardsCharactersGatewayTimeout{}
}

/* GetFwLeaderboardsCharactersGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetFwLeaderboardsCharactersGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetFwLeaderboardsCharactersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/fw/leaderboards/characters/][%d] getFwLeaderboardsCharactersGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetFwLeaderboardsCharactersGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetFwLeaderboardsCharactersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetFwLeaderboardsCharactersOKBody get_fw_leaderboards_characters_ok
//
// 200 ok object
swagger:model GetFwLeaderboardsCharactersOKBody
*/
type GetFwLeaderboardsCharactersOKBody struct {

	// kills
	// Required: true
	Kills *GetFwLeaderboardsCharactersOKBodyKills `json:"kills"`

	// victory points
	// Required: true
	VictoryPoints *GetFwLeaderboardsCharactersOKBodyVictoryPoints `json:"victory_points"`
}

// Validate validates this get fw leaderboards characters o k body
func (o *GetFwLeaderboardsCharactersOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKills(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVictoryPoints(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwLeaderboardsCharactersOKBody) validateKills(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCharactersOK"+"."+"kills", "body", o.Kills); err != nil {
		return err
	}

	if o.Kills != nil {
		if err := o.Kills.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "kills")
			}
			return err
		}
	}

	return nil
}

func (o *GetFwLeaderboardsCharactersOKBody) validateVictoryPoints(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCharactersOK"+"."+"victory_points", "body", o.VictoryPoints); err != nil {
		return err
	}

	if o.VictoryPoints != nil {
		if err := o.VictoryPoints.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "victory_points")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get fw leaderboards characters o k body based on the context it is used
func (o *GetFwLeaderboardsCharactersOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateKills(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateVictoryPoints(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwLeaderboardsCharactersOKBody) contextValidateKills(ctx context.Context, formats strfmt.Registry) error {

	if o.Kills != nil {
		if err := o.Kills.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "kills")
			}
			return err
		}
	}

	return nil
}

func (o *GetFwLeaderboardsCharactersOKBody) contextValidateVictoryPoints(ctx context.Context, formats strfmt.Registry) error {

	if o.VictoryPoints != nil {
		if err := o.VictoryPoints.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "victory_points")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBody) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCharactersOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCharactersOKBodyKills get_fw_leaderboards_characters_kills
//
// Top 100 rankings of pilots by number of kills from yesterday, last week and in total
swagger:model GetFwLeaderboardsCharactersOKBodyKills
*/
type GetFwLeaderboardsCharactersOKBodyKills struct {

	// get_fw_leaderboards_characters_active_total
	//
	// Top 100 ranking of pilots active in faction warfare by total kills. A pilot is considered "active" if they have participated in faction warfare in the past 14 days
	// Required: true
	// Max Items: 100
	ActiveTotal []*GetFwLeaderboardsCharactersOKBodyKillsActiveTotalItems0 `json:"active_total"`

	// get_fw_leaderboards_characters_last_week
	//
	// Top 100 ranking of pilots by kills in the past week
	// Required: true
	// Max Items: 100
	LastWeek []*GetFwLeaderboardsCharactersOKBodyKillsLastWeekItems0 `json:"last_week"`

	// get_fw_leaderboards_characters_yesterday
	//
	// Top 100 ranking of pilots by kills in the past day
	// Required: true
	// Max Items: 100
	Yesterday []*GetFwLeaderboardsCharactersOKBodyKillsYesterdayItems0 `json:"yesterday"`
}

// Validate validates this get fw leaderboards characters o k body kills
func (o *GetFwLeaderboardsCharactersOKBodyKills) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActiveTotal(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastWeek(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateYesterday(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwLeaderboardsCharactersOKBodyKills) validateActiveTotal(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCharactersOK"+"."+"kills"+"."+"active_total", "body", o.ActiveTotal); err != nil {
		return err
	}

	iActiveTotalSize := int64(len(o.ActiveTotal))

	if err := validate.MaxItems("getFwLeaderboardsCharactersOK"+"."+"kills"+"."+"active_total", "body", iActiveTotalSize, 100); err != nil {
		return err
	}

	for i := 0; i < len(o.ActiveTotal); i++ {
		if swag.IsZero(o.ActiveTotal[i]) { // not required
			continue
		}

		if o.ActiveTotal[i] != nil {
			if err := o.ActiveTotal[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "kills" + "." + "active_total" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetFwLeaderboardsCharactersOKBodyKills) validateLastWeek(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCharactersOK"+"."+"kills"+"."+"last_week", "body", o.LastWeek); err != nil {
		return err
	}

	iLastWeekSize := int64(len(o.LastWeek))

	if err := validate.MaxItems("getFwLeaderboardsCharactersOK"+"."+"kills"+"."+"last_week", "body", iLastWeekSize, 100); err != nil {
		return err
	}

	for i := 0; i < len(o.LastWeek); i++ {
		if swag.IsZero(o.LastWeek[i]) { // not required
			continue
		}

		if o.LastWeek[i] != nil {
			if err := o.LastWeek[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "kills" + "." + "last_week" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetFwLeaderboardsCharactersOKBodyKills) validateYesterday(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCharactersOK"+"."+"kills"+"."+"yesterday", "body", o.Yesterday); err != nil {
		return err
	}

	iYesterdaySize := int64(len(o.Yesterday))

	if err := validate.MaxItems("getFwLeaderboardsCharactersOK"+"."+"kills"+"."+"yesterday", "body", iYesterdaySize, 100); err != nil {
		return err
	}

	for i := 0; i < len(o.Yesterday); i++ {
		if swag.IsZero(o.Yesterday[i]) { // not required
			continue
		}

		if o.Yesterday[i] != nil {
			if err := o.Yesterday[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "kills" + "." + "yesterday" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get fw leaderboards characters o k body kills based on the context it is used
func (o *GetFwLeaderboardsCharactersOKBodyKills) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateActiveTotal(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateLastWeek(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateYesterday(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwLeaderboardsCharactersOKBodyKills) contextValidateActiveTotal(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.ActiveTotal); i++ {

		if o.ActiveTotal[i] != nil {
			if err := o.ActiveTotal[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "kills" + "." + "active_total" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetFwLeaderboardsCharactersOKBodyKills) contextValidateLastWeek(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.LastWeek); i++ {

		if o.LastWeek[i] != nil {
			if err := o.LastWeek[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "kills" + "." + "last_week" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetFwLeaderboardsCharactersOKBodyKills) contextValidateYesterday(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Yesterday); i++ {

		if o.Yesterday[i] != nil {
			if err := o.Yesterday[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "kills" + "." + "yesterday" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyKills) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyKills) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCharactersOKBodyKills
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCharactersOKBodyKillsActiveTotalItems0 get_fw_leaderboards_characters_active_total_active_total
//
// active_total object
swagger:model GetFwLeaderboardsCharactersOKBodyKillsActiveTotalItems0
*/
type GetFwLeaderboardsCharactersOKBodyKillsActiveTotalItems0 struct {

	// get_fw_leaderboards_characters_amount
	//
	// Amount of kills
	Amount int32 `json:"amount,omitempty"`

	// get_fw_leaderboards_characters_character_id
	//
	// character_id integer
	CharacterID int32 `json:"character_id,omitempty"`
}

// Validate validates this get fw leaderboards characters o k body kills active total items0
func (o *GetFwLeaderboardsCharactersOKBodyKillsActiveTotalItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get fw leaderboards characters o k body kills active total items0 based on context it is used
func (o *GetFwLeaderboardsCharactersOKBodyKillsActiveTotalItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyKillsActiveTotalItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyKillsActiveTotalItems0) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCharactersOKBodyKillsActiveTotalItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCharactersOKBodyKillsLastWeekItems0 get_fw_leaderboards_characters_last_week_last_week
//
// last_week object
swagger:model GetFwLeaderboardsCharactersOKBodyKillsLastWeekItems0
*/
type GetFwLeaderboardsCharactersOKBodyKillsLastWeekItems0 struct {

	// get_fw_leaderboards_characters_last_week_amount
	//
	// Amount of kills
	Amount int32 `json:"amount,omitempty"`

	// get_fw_leaderboards_characters_last_week_character_id
	//
	// character_id integer
	CharacterID int32 `json:"character_id,omitempty"`
}

// Validate validates this get fw leaderboards characters o k body kills last week items0
func (o *GetFwLeaderboardsCharactersOKBodyKillsLastWeekItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get fw leaderboards characters o k body kills last week items0 based on context it is used
func (o *GetFwLeaderboardsCharactersOKBodyKillsLastWeekItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyKillsLastWeekItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyKillsLastWeekItems0) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCharactersOKBodyKillsLastWeekItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCharactersOKBodyKillsYesterdayItems0 get_fw_leaderboards_characters_yesterday_yesterday
//
// yesterday object
swagger:model GetFwLeaderboardsCharactersOKBodyKillsYesterdayItems0
*/
type GetFwLeaderboardsCharactersOKBodyKillsYesterdayItems0 struct {

	// get_fw_leaderboards_characters_yesterday_amount
	//
	// Amount of kills
	Amount int32 `json:"amount,omitempty"`

	// get_fw_leaderboards_characters_yesterday_character_id
	//
	// character_id integer
	CharacterID int32 `json:"character_id,omitempty"`
}

// Validate validates this get fw leaderboards characters o k body kills yesterday items0
func (o *GetFwLeaderboardsCharactersOKBodyKillsYesterdayItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get fw leaderboards characters o k body kills yesterday items0 based on context it is used
func (o *GetFwLeaderboardsCharactersOKBodyKillsYesterdayItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyKillsYesterdayItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyKillsYesterdayItems0) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCharactersOKBodyKillsYesterdayItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCharactersOKBodyVictoryPoints get_fw_leaderboards_characters_victory_points
//
// Top 100 rankings of pilots by victory points from yesterday, last week and in total
swagger:model GetFwLeaderboardsCharactersOKBodyVictoryPoints
*/
type GetFwLeaderboardsCharactersOKBodyVictoryPoints struct {

	// get_fw_leaderboards_characters_victory_points_active_total
	//
	// Top 100 ranking of pilots active in faction warfare by total victory points. A pilot is considered "active" if they have participated in faction warfare in the past 14 days
	// Required: true
	// Max Items: 100
	ActiveTotal []*GetFwLeaderboardsCharactersOKBodyVictoryPointsActiveTotalItems0 `json:"active_total"`

	// get_fw_leaderboards_characters_victory_points_last_week
	//
	// Top 100 ranking of pilots by victory points in the past week
	// Required: true
	// Max Items: 100
	LastWeek []*GetFwLeaderboardsCharactersOKBodyVictoryPointsLastWeekItems0 `json:"last_week"`

	// get_fw_leaderboards_characters_victory_points_yesterday
	//
	// Top 100 ranking of pilots by victory points in the past day
	// Required: true
	// Max Items: 100
	Yesterday []*GetFwLeaderboardsCharactersOKBodyVictoryPointsYesterdayItems0 `json:"yesterday"`
}

// Validate validates this get fw leaderboards characters o k body victory points
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPoints) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActiveTotal(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastWeek(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateYesterday(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwLeaderboardsCharactersOKBodyVictoryPoints) validateActiveTotal(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCharactersOK"+"."+"victory_points"+"."+"active_total", "body", o.ActiveTotal); err != nil {
		return err
	}

	iActiveTotalSize := int64(len(o.ActiveTotal))

	if err := validate.MaxItems("getFwLeaderboardsCharactersOK"+"."+"victory_points"+"."+"active_total", "body", iActiveTotalSize, 100); err != nil {
		return err
	}

	for i := 0; i < len(o.ActiveTotal); i++ {
		if swag.IsZero(o.ActiveTotal[i]) { // not required
			continue
		}

		if o.ActiveTotal[i] != nil {
			if err := o.ActiveTotal[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "victory_points" + "." + "active_total" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetFwLeaderboardsCharactersOKBodyVictoryPoints) validateLastWeek(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCharactersOK"+"."+"victory_points"+"."+"last_week", "body", o.LastWeek); err != nil {
		return err
	}

	iLastWeekSize := int64(len(o.LastWeek))

	if err := validate.MaxItems("getFwLeaderboardsCharactersOK"+"."+"victory_points"+"."+"last_week", "body", iLastWeekSize, 100); err != nil {
		return err
	}

	for i := 0; i < len(o.LastWeek); i++ {
		if swag.IsZero(o.LastWeek[i]) { // not required
			continue
		}

		if o.LastWeek[i] != nil {
			if err := o.LastWeek[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "victory_points" + "." + "last_week" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetFwLeaderboardsCharactersOKBodyVictoryPoints) validateYesterday(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCharactersOK"+"."+"victory_points"+"."+"yesterday", "body", o.Yesterday); err != nil {
		return err
	}

	iYesterdaySize := int64(len(o.Yesterday))

	if err := validate.MaxItems("getFwLeaderboardsCharactersOK"+"."+"victory_points"+"."+"yesterday", "body", iYesterdaySize, 100); err != nil {
		return err
	}

	for i := 0; i < len(o.Yesterday); i++ {
		if swag.IsZero(o.Yesterday[i]) { // not required
			continue
		}

		if o.Yesterday[i] != nil {
			if err := o.Yesterday[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "victory_points" + "." + "yesterday" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get fw leaderboards characters o k body victory points based on the context it is used
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPoints) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateActiveTotal(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateLastWeek(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateYesterday(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwLeaderboardsCharactersOKBodyVictoryPoints) contextValidateActiveTotal(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.ActiveTotal); i++ {

		if o.ActiveTotal[i] != nil {
			if err := o.ActiveTotal[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "victory_points" + "." + "active_total" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetFwLeaderboardsCharactersOKBodyVictoryPoints) contextValidateLastWeek(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.LastWeek); i++ {

		if o.LastWeek[i] != nil {
			if err := o.LastWeek[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "victory_points" + "." + "last_week" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetFwLeaderboardsCharactersOKBodyVictoryPoints) contextValidateYesterday(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Yesterday); i++ {

		if o.Yesterday[i] != nil {
			if err := o.Yesterday[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCharactersOK" + "." + "victory_points" + "." + "yesterday" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPoints) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPoints) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCharactersOKBodyVictoryPoints
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCharactersOKBodyVictoryPointsActiveTotalItems0 get_fw_leaderboards_characters_active_total_active_total_1
//
// active_total object
swagger:model GetFwLeaderboardsCharactersOKBodyVictoryPointsActiveTotalItems0
*/
type GetFwLeaderboardsCharactersOKBodyVictoryPointsActiveTotalItems0 struct {

	// get_fw_leaderboards_characters_active_total_amount
	//
	// Amount of victory points
	Amount int32 `json:"amount,omitempty"`

	// get_fw_leaderboards_characters_active_total_character_id
	//
	// character_id integer
	CharacterID int32 `json:"character_id,omitempty"`
}

// Validate validates this get fw leaderboards characters o k body victory points active total items0
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPointsActiveTotalItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get fw leaderboards characters o k body victory points active total items0 based on context it is used
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPointsActiveTotalItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPointsActiveTotalItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPointsActiveTotalItems0) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCharactersOKBodyVictoryPointsActiveTotalItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCharactersOKBodyVictoryPointsLastWeekItems0 get_fw_leaderboards_characters_last_week_last_week_1
//
// last_week object
swagger:model GetFwLeaderboardsCharactersOKBodyVictoryPointsLastWeekItems0
*/
type GetFwLeaderboardsCharactersOKBodyVictoryPointsLastWeekItems0 struct {

	// get_fw_leaderboards_characters_last_week_amount_1
	//
	// Amount of victory points
	Amount int32 `json:"amount,omitempty"`

	// get_fw_leaderboards_characters_last_week_character_id_1
	//
	// character_id integer
	CharacterID int32 `json:"character_id,omitempty"`
}

// Validate validates this get fw leaderboards characters o k body victory points last week items0
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPointsLastWeekItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get fw leaderboards characters o k body victory points last week items0 based on context it is used
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPointsLastWeekItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPointsLastWeekItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPointsLastWeekItems0) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCharactersOKBodyVictoryPointsLastWeekItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCharactersOKBodyVictoryPointsYesterdayItems0 get_fw_leaderboards_characters_yesterday_yesterday_1
//
// yesterday object
swagger:model GetFwLeaderboardsCharactersOKBodyVictoryPointsYesterdayItems0
*/
type GetFwLeaderboardsCharactersOKBodyVictoryPointsYesterdayItems0 struct {

	// get_fw_leaderboards_characters_yesterday_amount_1
	//
	// Amount of victory points
	Amount int32 `json:"amount,omitempty"`

	// get_fw_leaderboards_characters_yesterday_character_id_1
	//
	// character_id integer
	CharacterID int32 `json:"character_id,omitempty"`
}

// Validate validates this get fw leaderboards characters o k body victory points yesterday items0
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPointsYesterdayItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get fw leaderboards characters o k body victory points yesterday items0 based on context it is used
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPointsYesterdayItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPointsYesterdayItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCharactersOKBodyVictoryPointsYesterdayItems0) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCharactersOKBodyVictoryPointsYesterdayItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
