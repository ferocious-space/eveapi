// Code generated by go-swagger; DO NOT EDIT.

package alliance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/ferocious-space/eveapi/models"
)

// GetAlliancesAllianceIDIconsReader is a Reader for the GetAlliancesAllianceIDIcons structure.
type GetAlliancesAllianceIDIconsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAlliancesAllianceIDIconsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAlliancesAllianceIDIconsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetAlliancesAllianceIDIconsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetAlliancesAllianceIDIconsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAlliancesAllianceIDIconsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetAlliancesAllianceIDIconsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAlliancesAllianceIDIconsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAlliancesAllianceIDIconsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetAlliancesAllianceIDIconsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/alliances/{alliance_id}/icons/] get_alliances_alliance_id_icons", response, response.Code())
	}
}

// NewGetAlliancesAllianceIDIconsOK creates a GetAlliancesAllianceIDIconsOK with default headers values
func NewGetAlliancesAllianceIDIconsOK() *GetAlliancesAllianceIDIconsOK {
	return &GetAlliancesAllianceIDIconsOK{}
}

/*
GetAlliancesAllianceIDIconsOK describes a response with status code 200, with default header values.

Icon URLs for the given alliance id and server
*/
type GetAlliancesAllianceIDIconsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetAlliancesAllianceIDIconsOKBody
}

// IsSuccess returns true when this get alliances alliance Id icons o k response has a 2xx status code
func (o *GetAlliancesAllianceIDIconsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get alliances alliance Id icons o k response has a 3xx status code
func (o *GetAlliancesAllianceIDIconsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alliances alliance Id icons o k response has a 4xx status code
func (o *GetAlliancesAllianceIDIconsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get alliances alliance Id icons o k response has a 5xx status code
func (o *GetAlliancesAllianceIDIconsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get alliances alliance Id icons o k response a status code equal to that given
func (o *GetAlliancesAllianceIDIconsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get alliances alliance Id icons o k response
func (o *GetAlliancesAllianceIDIconsOK) Code() int {
	return 200
}

func (o *GetAlliancesAllianceIDIconsOK) Error() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsOK  %+v", 200, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsOK) String() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsOK  %+v", 200, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsOK) GetPayload() *GetAlliancesAllianceIDIconsOKBody {
	return o.Payload
}

func (o *GetAlliancesAllianceIDIconsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetAlliancesAllianceIDIconsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlliancesAllianceIDIconsNotModified creates a GetAlliancesAllianceIDIconsNotModified with default headers values
func NewGetAlliancesAllianceIDIconsNotModified() *GetAlliancesAllianceIDIconsNotModified {
	return &GetAlliancesAllianceIDIconsNotModified{}
}

/*
GetAlliancesAllianceIDIconsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetAlliancesAllianceIDIconsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get alliances alliance Id icons not modified response has a 2xx status code
func (o *GetAlliancesAllianceIDIconsNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alliances alliance Id icons not modified response has a 3xx status code
func (o *GetAlliancesAllianceIDIconsNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get alliances alliance Id icons not modified response has a 4xx status code
func (o *GetAlliancesAllianceIDIconsNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get alliances alliance Id icons not modified response has a 5xx status code
func (o *GetAlliancesAllianceIDIconsNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get alliances alliance Id icons not modified response a status code equal to that given
func (o *GetAlliancesAllianceIDIconsNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get alliances alliance Id icons not modified response
func (o *GetAlliancesAllianceIDIconsNotModified) Code() int {
	return 304
}

func (o *GetAlliancesAllianceIDIconsNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsNotModified ", 304)
}

func (o *GetAlliancesAllianceIDIconsNotModified) String() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsNotModified ", 304)
}

func (o *GetAlliancesAllianceIDIconsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetAlliancesAllianceIDIconsBadRequest creates a GetAlliancesAllianceIDIconsBadRequest with default headers values
func NewGetAlliancesAllianceIDIconsBadRequest() *GetAlliancesAllianceIDIconsBadRequest {
	return &GetAlliancesAllianceIDIconsBadRequest{}
}

/*
GetAlliancesAllianceIDIconsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetAlliancesAllianceIDIconsBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get alliances alliance Id icons bad request response has a 2xx status code
func (o *GetAlliancesAllianceIDIconsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alliances alliance Id icons bad request response has a 3xx status code
func (o *GetAlliancesAllianceIDIconsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alliances alliance Id icons bad request response has a 4xx status code
func (o *GetAlliancesAllianceIDIconsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alliances alliance Id icons bad request response has a 5xx status code
func (o *GetAlliancesAllianceIDIconsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get alliances alliance Id icons bad request response a status code equal to that given
func (o *GetAlliancesAllianceIDIconsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get alliances alliance Id icons bad request response
func (o *GetAlliancesAllianceIDIconsBadRequest) Code() int {
	return 400
}

func (o *GetAlliancesAllianceIDIconsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetAlliancesAllianceIDIconsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlliancesAllianceIDIconsNotFound creates a GetAlliancesAllianceIDIconsNotFound with default headers values
func NewGetAlliancesAllianceIDIconsNotFound() *GetAlliancesAllianceIDIconsNotFound {
	return &GetAlliancesAllianceIDIconsNotFound{}
}

/*
GetAlliancesAllianceIDIconsNotFound describes a response with status code 404, with default header values.

No image server for this datasource
*/
type GetAlliancesAllianceIDIconsNotFound struct {
	Payload *GetAlliancesAllianceIDIconsNotFoundBody
}

// IsSuccess returns true when this get alliances alliance Id icons not found response has a 2xx status code
func (o *GetAlliancesAllianceIDIconsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alliances alliance Id icons not found response has a 3xx status code
func (o *GetAlliancesAllianceIDIconsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alliances alliance Id icons not found response has a 4xx status code
func (o *GetAlliancesAllianceIDIconsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alliances alliance Id icons not found response has a 5xx status code
func (o *GetAlliancesAllianceIDIconsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get alliances alliance Id icons not found response a status code equal to that given
func (o *GetAlliancesAllianceIDIconsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get alliances alliance Id icons not found response
func (o *GetAlliancesAllianceIDIconsNotFound) Code() int {
	return 404
}

func (o *GetAlliancesAllianceIDIconsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsNotFound  %+v", 404, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsNotFound  %+v", 404, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsNotFound) GetPayload() *GetAlliancesAllianceIDIconsNotFoundBody {
	return o.Payload
}

func (o *GetAlliancesAllianceIDIconsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAlliancesAllianceIDIconsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlliancesAllianceIDIconsEnhanceYourCalm creates a GetAlliancesAllianceIDIconsEnhanceYourCalm with default headers values
func NewGetAlliancesAllianceIDIconsEnhanceYourCalm() *GetAlliancesAllianceIDIconsEnhanceYourCalm {
	return &GetAlliancesAllianceIDIconsEnhanceYourCalm{}
}

/*
GetAlliancesAllianceIDIconsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetAlliancesAllianceIDIconsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get alliances alliance Id icons enhance your calm response has a 2xx status code
func (o *GetAlliancesAllianceIDIconsEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alliances alliance Id icons enhance your calm response has a 3xx status code
func (o *GetAlliancesAllianceIDIconsEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alliances alliance Id icons enhance your calm response has a 4xx status code
func (o *GetAlliancesAllianceIDIconsEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alliances alliance Id icons enhance your calm response has a 5xx status code
func (o *GetAlliancesAllianceIDIconsEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get alliances alliance Id icons enhance your calm response a status code equal to that given
func (o *GetAlliancesAllianceIDIconsEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get alliances alliance Id icons enhance your calm response
func (o *GetAlliancesAllianceIDIconsEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetAlliancesAllianceIDIconsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetAlliancesAllianceIDIconsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlliancesAllianceIDIconsInternalServerError creates a GetAlliancesAllianceIDIconsInternalServerError with default headers values
func NewGetAlliancesAllianceIDIconsInternalServerError() *GetAlliancesAllianceIDIconsInternalServerError {
	return &GetAlliancesAllianceIDIconsInternalServerError{}
}

/*
GetAlliancesAllianceIDIconsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetAlliancesAllianceIDIconsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get alliances alliance Id icons internal server error response has a 2xx status code
func (o *GetAlliancesAllianceIDIconsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alliances alliance Id icons internal server error response has a 3xx status code
func (o *GetAlliancesAllianceIDIconsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alliances alliance Id icons internal server error response has a 4xx status code
func (o *GetAlliancesAllianceIDIconsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get alliances alliance Id icons internal server error response has a 5xx status code
func (o *GetAlliancesAllianceIDIconsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get alliances alliance Id icons internal server error response a status code equal to that given
func (o *GetAlliancesAllianceIDIconsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get alliances alliance Id icons internal server error response
func (o *GetAlliancesAllianceIDIconsInternalServerError) Code() int {
	return 500
}

func (o *GetAlliancesAllianceIDIconsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetAlliancesAllianceIDIconsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlliancesAllianceIDIconsServiceUnavailable creates a GetAlliancesAllianceIDIconsServiceUnavailable with default headers values
func NewGetAlliancesAllianceIDIconsServiceUnavailable() *GetAlliancesAllianceIDIconsServiceUnavailable {
	return &GetAlliancesAllianceIDIconsServiceUnavailable{}
}

/*
GetAlliancesAllianceIDIconsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetAlliancesAllianceIDIconsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get alliances alliance Id icons service unavailable response has a 2xx status code
func (o *GetAlliancesAllianceIDIconsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alliances alliance Id icons service unavailable response has a 3xx status code
func (o *GetAlliancesAllianceIDIconsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alliances alliance Id icons service unavailable response has a 4xx status code
func (o *GetAlliancesAllianceIDIconsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get alliances alliance Id icons service unavailable response has a 5xx status code
func (o *GetAlliancesAllianceIDIconsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get alliances alliance Id icons service unavailable response a status code equal to that given
func (o *GetAlliancesAllianceIDIconsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get alliances alliance Id icons service unavailable response
func (o *GetAlliancesAllianceIDIconsServiceUnavailable) Code() int {
	return 503
}

func (o *GetAlliancesAllianceIDIconsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetAlliancesAllianceIDIconsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlliancesAllianceIDIconsGatewayTimeout creates a GetAlliancesAllianceIDIconsGatewayTimeout with default headers values
func NewGetAlliancesAllianceIDIconsGatewayTimeout() *GetAlliancesAllianceIDIconsGatewayTimeout {
	return &GetAlliancesAllianceIDIconsGatewayTimeout{}
}

/*
GetAlliancesAllianceIDIconsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetAlliancesAllianceIDIconsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get alliances alliance Id icons gateway timeout response has a 2xx status code
func (o *GetAlliancesAllianceIDIconsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alliances alliance Id icons gateway timeout response has a 3xx status code
func (o *GetAlliancesAllianceIDIconsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alliances alliance Id icons gateway timeout response has a 4xx status code
func (o *GetAlliancesAllianceIDIconsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get alliances alliance Id icons gateway timeout response has a 5xx status code
func (o *GetAlliancesAllianceIDIconsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get alliances alliance Id icons gateway timeout response a status code equal to that given
func (o *GetAlliancesAllianceIDIconsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get alliances alliance Id icons gateway timeout response
func (o *GetAlliancesAllianceIDIconsGatewayTimeout) Code() int {
	return 504
}

func (o *GetAlliancesAllianceIDIconsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/alliances/{alliance_id}/icons/][%d] getAlliancesAllianceIdIconsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetAlliancesAllianceIDIconsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetAlliancesAllianceIDIconsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetAlliancesAllianceIDIconsNotFoundBody get_alliances_alliance_id_icons_not_found
//
// No image server for this datasource
swagger:model GetAlliancesAllianceIDIconsNotFoundBody
*/
type GetAlliancesAllianceIDIconsNotFoundBody struct {

	// get_alliances_alliance_id_icons_error
	//
	// error message
	Error string `json:"error,omitempty"`
}

// Validate validates this get alliances alliance ID icons not found body
func (o *GetAlliancesAllianceIDIconsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get alliances alliance ID icons not found body based on context it is used
func (o *GetAlliancesAllianceIDIconsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAlliancesAllianceIDIconsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAlliancesAllianceIDIconsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetAlliancesAllianceIDIconsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetAlliancesAllianceIDIconsOKBody get_alliances_alliance_id_icons_ok
//
// 200 ok object
swagger:model GetAlliancesAllianceIDIconsOKBody
*/
type GetAlliancesAllianceIDIconsOKBody struct {

	// get_alliances_alliance_id_icons_px128x128
	//
	// px128x128 string
	Px128x128 string `json:"px128x128,omitempty"`

	// get_alliances_alliance_id_icons_px64x64
	//
	// px64x64 string
	Px64x64 string `json:"px64x64,omitempty"`
}

// Validate validates this get alliances alliance ID icons o k body
func (o *GetAlliancesAllianceIDIconsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get alliances alliance ID icons o k body based on context it is used
func (o *GetAlliancesAllianceIDIconsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAlliancesAllianceIDIconsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAlliancesAllianceIDIconsOKBody) UnmarshalBinary(b []byte) error {
	var res GetAlliancesAllianceIDIconsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
