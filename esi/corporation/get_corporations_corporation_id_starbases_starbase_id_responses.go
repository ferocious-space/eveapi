// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCorporationsCorporationIDStarbasesStarbaseIDReader is a Reader for the GetCorporationsCorporationIDStarbasesStarbaseID structure.
type GetCorporationsCorporationIDStarbasesStarbaseIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCorporationsCorporationIDStarbasesStarbaseIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCorporationsCorporationIDStarbasesStarbaseIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCorporationsCorporationIDStarbasesStarbaseIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCorporationsCorporationIDStarbasesStarbaseIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/] get_corporations_corporation_id_starbases_starbase_id", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDStarbasesStarbaseIDOK creates a GetCorporationsCorporationIDStarbasesStarbaseIDOK with default headers values
func NewGetCorporationsCorporationIDStarbasesStarbaseIDOK() *GetCorporationsCorporationIDStarbasesStarbaseIDOK {
	return &GetCorporationsCorporationIDStarbasesStarbaseIDOK{}
}

/*
GetCorporationsCorporationIDStarbasesStarbaseIDOK describes a response with status code 200, with default header values.

List of starbases (POSes)
*/
type GetCorporationsCorporationIDStarbasesStarbaseIDOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody
}

// IsSuccess returns true when this get corporations corporation Id starbases starbase Id o k response has a 2xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get corporations corporation Id starbases starbase Id o k response has a 3xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id starbases starbase Id o k response has a 4xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id starbases starbase Id o k response has a 5xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id starbases starbase Id o k response a status code equal to that given
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get corporations corporation Id starbases starbase Id o k response
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOK) Code() int {
	return 200
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOK) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOK) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOK) GetPayload() *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody {
	return o.Payload
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetCorporationsCorporationIDStarbasesStarbaseIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStarbasesStarbaseIDNotModified creates a GetCorporationsCorporationIDStarbasesStarbaseIDNotModified with default headers values
func NewGetCorporationsCorporationIDStarbasesStarbaseIDNotModified() *GetCorporationsCorporationIDStarbasesStarbaseIDNotModified {
	return &GetCorporationsCorporationIDStarbasesStarbaseIDNotModified{}
}

/*
GetCorporationsCorporationIDStarbasesStarbaseIDNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCorporationsCorporationIDStarbasesStarbaseIDNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get corporations corporation Id starbases starbase Id not modified response has a 2xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id starbases starbase Id not modified response has a 3xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get corporations corporation Id starbases starbase Id not modified response has a 4xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id starbases starbase Id not modified response has a 5xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id starbases starbase Id not modified response a status code equal to that given
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get corporations corporation Id starbases starbase Id not modified response
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDNotModified) Code() int {
	return 304
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDNotModified) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdNotModified ", 304)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDNotModified) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdNotModified ", 304)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCorporationsCorporationIDStarbasesStarbaseIDBadRequest creates a GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest with default headers values
func NewGetCorporationsCorporationIDStarbasesStarbaseIDBadRequest() *GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest {
	return &GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest{}
}

/*
GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get corporations corporation Id starbases starbase Id bad request response has a 2xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id starbases starbase Id bad request response has a 3xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id starbases starbase Id bad request response has a 4xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id starbases starbase Id bad request response has a 5xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id starbases starbase Id bad request response a status code equal to that given
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get corporations corporation Id starbases starbase Id bad request response
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest) Code() int {
	return 400
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized creates a GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized with default headers values
func NewGetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized() *GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized {
	return &GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized{}
}

/*
GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get corporations corporation Id starbases starbase Id unauthorized response has a 2xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id starbases starbase Id unauthorized response has a 3xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id starbases starbase Id unauthorized response has a 4xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id starbases starbase Id unauthorized response has a 5xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id starbases starbase Id unauthorized response a status code equal to that given
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get corporations corporation Id starbases starbase Id unauthorized response
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized) Code() int {
	return 401
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStarbasesStarbaseIDForbidden creates a GetCorporationsCorporationIDStarbasesStarbaseIDForbidden with default headers values
func NewGetCorporationsCorporationIDStarbasesStarbaseIDForbidden() *GetCorporationsCorporationIDStarbasesStarbaseIDForbidden {
	return &GetCorporationsCorporationIDStarbasesStarbaseIDForbidden{}
}

/*
GetCorporationsCorporationIDStarbasesStarbaseIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCorporationsCorporationIDStarbasesStarbaseIDForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get corporations corporation Id starbases starbase Id forbidden response has a 2xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id starbases starbase Id forbidden response has a 3xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id starbases starbase Id forbidden response has a 4xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id starbases starbase Id forbidden response has a 5xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id starbases starbase Id forbidden response a status code equal to that given
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get corporations corporation Id starbases starbase Id forbidden response
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDForbidden) Code() int {
	return 403
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDForbidden) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm creates a GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm() *GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm {
	return &GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm{}
}

/*
GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get corporations corporation Id starbases starbase Id enhance your calm response has a 2xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id starbases starbase Id enhance your calm response has a 3xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id starbases starbase Id enhance your calm response has a 4xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id starbases starbase Id enhance your calm response has a 5xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id starbases starbase Id enhance your calm response a status code equal to that given
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get corporations corporation Id starbases starbase Id enhance your calm response
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError creates a GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError with default headers values
func NewGetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError() *GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError {
	return &GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError{}
}

/*
GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get corporations corporation Id starbases starbase Id internal server error response has a 2xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id starbases starbase Id internal server error response has a 3xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id starbases starbase Id internal server error response has a 4xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id starbases starbase Id internal server error response has a 5xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id starbases starbase Id internal server error response a status code equal to that given
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get corporations corporation Id starbases starbase Id internal server error response
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError) Code() int {
	return 500
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable creates a GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable() *GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable {
	return &GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable{}
}

/*
GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get corporations corporation Id starbases starbase Id service unavailable response has a 2xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id starbases starbase Id service unavailable response has a 3xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id starbases starbase Id service unavailable response has a 4xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id starbases starbase Id service unavailable response has a 5xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id starbases starbase Id service unavailable response a status code equal to that given
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get corporations corporation Id starbases starbase Id service unavailable response
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable) Code() int {
	return 503
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout creates a GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout() *GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout {
	return &GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout{}
}

/*
GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get corporations corporation Id starbases starbase Id gateway timeout response has a 2xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id starbases starbase Id gateway timeout response has a 3xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id starbases starbase Id gateway timeout response has a 4xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id starbases starbase Id gateway timeout response has a 5xx status code
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id starbases starbase Id gateway timeout response a status code equal to that given
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get corporations corporation Id starbases starbase Id gateway timeout response
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout) Code() int {
	return 504
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/starbases/{starbase_id}/][%d] getCorporationsCorporationIdStarbasesStarbaseIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCorporationsCorporationIDStarbasesStarbaseIDOKBody get_corporations_corporation_id_starbases_starbase_id_ok
//
// 200 ok object
swagger:model GetCorporationsCorporationIDStarbasesStarbaseIDOKBody
*/
type GetCorporationsCorporationIDStarbasesStarbaseIDOKBody struct {

	// get_corporations_corporation_id_starbases_starbase_id_allow_alliance_members
	//
	// allow_alliance_members boolean
	// Required: true
	AllowAllianceMembers *bool `json:"allow_alliance_members"`

	// get_corporations_corporation_id_starbases_starbase_id_allow_corporation_members
	//
	// allow_corporation_members boolean
	// Required: true
	AllowCorporationMembers *bool `json:"allow_corporation_members"`

	// get_corporations_corporation_id_starbases_starbase_id_anchor
	//
	// Who can anchor starbase (POS) and its structures
	// Required: true
	// Enum: [alliance_member config_starbase_equipment_role corporation_member starbase_fuel_technician_role]
	Anchor *string `json:"anchor"`

	// get_corporations_corporation_id_starbases_starbase_id_attack_if_at_war
	//
	// attack_if_at_war boolean
	// Required: true
	AttackIfAtWar *bool `json:"attack_if_at_war"`

	// get_corporations_corporation_id_starbases_starbase_id_attack_if_other_security_status_dropping
	//
	// attack_if_other_security_status_dropping boolean
	// Required: true
	AttackIfOtherSecurityStatusDropping *bool `json:"attack_if_other_security_status_dropping"`

	// get_corporations_corporation_id_starbases_starbase_id_attack_security_status_threshold
	//
	// Starbase (POS) will attack if target's security standing is lower than this value
	AttackSecurityStatusThreshold float32 `json:"attack_security_status_threshold,omitempty"`

	// get_corporations_corporation_id_starbases_starbase_id_attack_standing_threshold
	//
	// Starbase (POS) will attack if target's standing is lower than this value
	AttackStandingThreshold float32 `json:"attack_standing_threshold,omitempty"`

	// get_corporations_corporation_id_starbases_starbase_id_fuel_bay_take
	//
	// Who can take fuel blocks out of the starbase (POS)'s fuel bay
	// Required: true
	// Enum: [alliance_member config_starbase_equipment_role corporation_member starbase_fuel_technician_role]
	FuelBayTake *string `json:"fuel_bay_take"`

	// get_corporations_corporation_id_starbases_starbase_id_fuel_bay_view
	//
	// Who can view the starbase (POS)'s fule bay. Characters either need to have required role or belong to the starbase (POS) owner's corporation or alliance, as described by the enum, all other access settings follows the same scheme
	// Required: true
	// Enum: [alliance_member config_starbase_equipment_role corporation_member starbase_fuel_technician_role]
	FuelBayView *string `json:"fuel_bay_view"`

	// get_corporations_corporation_id_starbases_starbase_id_fuels
	//
	// Fuel blocks and other things that will be consumed when operating a starbase (POS)
	// Max Items: 20
	Fuels []*GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems0 `json:"fuels"`

	// get_corporations_corporation_id_starbases_starbase_id_offline
	//
	// Who can offline starbase (POS) and its structures
	// Required: true
	// Enum: [alliance_member config_starbase_equipment_role corporation_member starbase_fuel_technician_role]
	Offline *string `json:"offline"`

	// get_corporations_corporation_id_starbases_starbase_id_online
	//
	// Who can online starbase (POS) and its structures
	// Required: true
	// Enum: [alliance_member config_starbase_equipment_role corporation_member starbase_fuel_technician_role]
	Online *string `json:"online"`

	// get_corporations_corporation_id_starbases_starbase_id_unanchor
	//
	// Who can unanchor starbase (POS) and its structures
	// Required: true
	// Enum: [alliance_member config_starbase_equipment_role corporation_member starbase_fuel_technician_role]
	Unanchor *string `json:"unanchor"`

	// get_corporations_corporation_id_starbases_starbase_id_use_alliance_standings
	//
	// True if the starbase (POS) is using alliance standings, otherwise using corporation's
	// Required: true
	UseAllianceStandings *bool `json:"use_alliance_standings"`
}

// Validate validates this get corporations corporation ID starbases starbase ID o k body
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAllowAllianceMembers(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAllowCorporationMembers(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAnchor(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAttackIfAtWar(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAttackIfOtherSecurityStatusDropping(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFuelBayTake(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFuelBayView(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFuels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOffline(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOnline(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUnanchor(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUseAllianceStandings(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateAllowAllianceMembers(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"allow_alliance_members", "body", o.AllowAllianceMembers); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateAllowCorporationMembers(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"allow_corporation_members", "body", o.AllowCorporationMembers); err != nil {
		return err
	}

	return nil
}

var getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeAnchorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["alliance_member","config_starbase_equipment_role","corporation_member","starbase_fuel_technician_role"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeAnchorPropEnum = append(getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeAnchorPropEnum, v)
	}
}

const (

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyAnchorAllianceMember captures enum value "alliance_member"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyAnchorAllianceMember string = "alliance_member"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyAnchorConfigStarbaseEquipmentRole captures enum value "config_starbase_equipment_role"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyAnchorConfigStarbaseEquipmentRole string = "config_starbase_equipment_role"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyAnchorCorporationMember captures enum value "corporation_member"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyAnchorCorporationMember string = "corporation_member"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyAnchorStarbaseFuelTechnicianRole captures enum value "starbase_fuel_technician_role"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyAnchorStarbaseFuelTechnicianRole string = "starbase_fuel_technician_role"
)

// prop value enum
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateAnchorEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeAnchorPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateAnchor(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"anchor", "body", o.Anchor); err != nil {
		return err
	}

	// value enum
	if err := o.validateAnchorEnum("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"anchor", "body", *o.Anchor); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateAttackIfAtWar(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"attack_if_at_war", "body", o.AttackIfAtWar); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateAttackIfOtherSecurityStatusDropping(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"attack_if_other_security_status_dropping", "body", o.AttackIfOtherSecurityStatusDropping); err != nil {
		return err
	}

	return nil
}

var getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeFuelBayTakePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["alliance_member","config_starbase_equipment_role","corporation_member","starbase_fuel_technician_role"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeFuelBayTakePropEnum = append(getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeFuelBayTakePropEnum, v)
	}
}

const (

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayTakeAllianceMember captures enum value "alliance_member"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayTakeAllianceMember string = "alliance_member"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayTakeConfigStarbaseEquipmentRole captures enum value "config_starbase_equipment_role"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayTakeConfigStarbaseEquipmentRole string = "config_starbase_equipment_role"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayTakeCorporationMember captures enum value "corporation_member"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayTakeCorporationMember string = "corporation_member"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayTakeStarbaseFuelTechnicianRole captures enum value "starbase_fuel_technician_role"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayTakeStarbaseFuelTechnicianRole string = "starbase_fuel_technician_role"
)

// prop value enum
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateFuelBayTakeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeFuelBayTakePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateFuelBayTake(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"fuel_bay_take", "body", o.FuelBayTake); err != nil {
		return err
	}

	// value enum
	if err := o.validateFuelBayTakeEnum("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"fuel_bay_take", "body", *o.FuelBayTake); err != nil {
		return err
	}

	return nil
}

var getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeFuelBayViewPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["alliance_member","config_starbase_equipment_role","corporation_member","starbase_fuel_technician_role"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeFuelBayViewPropEnum = append(getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeFuelBayViewPropEnum, v)
	}
}

const (

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayViewAllianceMember captures enum value "alliance_member"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayViewAllianceMember string = "alliance_member"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayViewConfigStarbaseEquipmentRole captures enum value "config_starbase_equipment_role"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayViewConfigStarbaseEquipmentRole string = "config_starbase_equipment_role"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayViewCorporationMember captures enum value "corporation_member"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayViewCorporationMember string = "corporation_member"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayViewStarbaseFuelTechnicianRole captures enum value "starbase_fuel_technician_role"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelBayViewStarbaseFuelTechnicianRole string = "starbase_fuel_technician_role"
)

// prop value enum
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateFuelBayViewEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeFuelBayViewPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateFuelBayView(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"fuel_bay_view", "body", o.FuelBayView); err != nil {
		return err
	}

	// value enum
	if err := o.validateFuelBayViewEnum("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"fuel_bay_view", "body", *o.FuelBayView); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateFuels(formats strfmt.Registry) error {
	if swag.IsZero(o.Fuels) { // not required
		return nil
	}

	iFuelsSize := int64(len(o.Fuels))

	if err := validate.MaxItems("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"fuels", "body", iFuelsSize, 20); err != nil {
		return err
	}

	for i := 0; i < len(o.Fuels); i++ {
		if swag.IsZero(o.Fuels[i]) { // not required
			continue
		}

		if o.Fuels[i] != nil {
			if err := o.Fuels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCorporationsCorporationIdStarbasesStarbaseIdOK" + "." + "fuels" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCorporationsCorporationIdStarbasesStarbaseIdOK" + "." + "fuels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeOfflinePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["alliance_member","config_starbase_equipment_role","corporation_member","starbase_fuel_technician_role"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeOfflinePropEnum = append(getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeOfflinePropEnum, v)
	}
}

const (

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOfflineAllianceMember captures enum value "alliance_member"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOfflineAllianceMember string = "alliance_member"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOfflineConfigStarbaseEquipmentRole captures enum value "config_starbase_equipment_role"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOfflineConfigStarbaseEquipmentRole string = "config_starbase_equipment_role"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOfflineCorporationMember captures enum value "corporation_member"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOfflineCorporationMember string = "corporation_member"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOfflineStarbaseFuelTechnicianRole captures enum value "starbase_fuel_technician_role"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOfflineStarbaseFuelTechnicianRole string = "starbase_fuel_technician_role"
)

// prop value enum
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateOfflineEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeOfflinePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateOffline(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"offline", "body", o.Offline); err != nil {
		return err
	}

	// value enum
	if err := o.validateOfflineEnum("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"offline", "body", *o.Offline); err != nil {
		return err
	}

	return nil
}

var getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeOnlinePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["alliance_member","config_starbase_equipment_role","corporation_member","starbase_fuel_technician_role"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeOnlinePropEnum = append(getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeOnlinePropEnum, v)
	}
}

const (

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOnlineAllianceMember captures enum value "alliance_member"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOnlineAllianceMember string = "alliance_member"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOnlineConfigStarbaseEquipmentRole captures enum value "config_starbase_equipment_role"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOnlineConfigStarbaseEquipmentRole string = "config_starbase_equipment_role"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOnlineCorporationMember captures enum value "corporation_member"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOnlineCorporationMember string = "corporation_member"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOnlineStarbaseFuelTechnicianRole captures enum value "starbase_fuel_technician_role"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyOnlineStarbaseFuelTechnicianRole string = "starbase_fuel_technician_role"
)

// prop value enum
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateOnlineEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeOnlinePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateOnline(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"online", "body", o.Online); err != nil {
		return err
	}

	// value enum
	if err := o.validateOnlineEnum("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"online", "body", *o.Online); err != nil {
		return err
	}

	return nil
}

var getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeUnanchorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["alliance_member","config_starbase_equipment_role","corporation_member","starbase_fuel_technician_role"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeUnanchorPropEnum = append(getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeUnanchorPropEnum, v)
	}
}

const (

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyUnanchorAllianceMember captures enum value "alliance_member"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyUnanchorAllianceMember string = "alliance_member"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyUnanchorConfigStarbaseEquipmentRole captures enum value "config_starbase_equipment_role"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyUnanchorConfigStarbaseEquipmentRole string = "config_starbase_equipment_role"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyUnanchorCorporationMember captures enum value "corporation_member"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyUnanchorCorporationMember string = "corporation_member"

	// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyUnanchorStarbaseFuelTechnicianRole captures enum value "starbase_fuel_technician_role"
	GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyUnanchorStarbaseFuelTechnicianRole string = "starbase_fuel_technician_role"
)

// prop value enum
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateUnanchorEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdStarbasesStarbaseIdOKBodyTypeUnanchorPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateUnanchor(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"unanchor", "body", o.Unanchor); err != nil {
		return err
	}

	// value enum
	if err := o.validateUnanchorEnum("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"unanchor", "body", *o.Unanchor); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) validateUseAllianceStandings(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdStarbasesStarbaseIdOK"+"."+"use_alliance_standings", "body", o.UseAllianceStandings); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this get corporations corporation ID starbases starbase ID o k body based on the context it is used
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateFuels(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) contextValidateFuels(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Fuels); i++ {

		if o.Fuels[i] != nil {

			if swag.IsZero(o.Fuels[i]) { // not required
				return nil
			}

			if err := o.Fuels[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCorporationsCorporationIdStarbasesStarbaseIdOK" + "." + "fuels" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCorporationsCorporationIdStarbasesStarbaseIdOK" + "." + "fuels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDStarbasesStarbaseIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems0 get_corporations_corporation_id_starbases_starbase_id_fuel
//
// fuel object
swagger:model GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems0
*/
type GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems0 struct {

	// get_corporations_corporation_id_starbases_starbase_id_quantity
	//
	// quantity integer
	// Required: true
	Quantity *int32 `json:"quantity"`

	// get_corporations_corporation_id_starbases_starbase_id_type_id
	//
	// type_id integer
	// Required: true
	TypeID *int32 `json:"type_id"`
}

// Validate validates this get corporations corporation ID starbases starbase ID o k body fuels items0
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuantity(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTypeID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems0) validateQuantity(formats strfmt.Registry) error {

	if err := validate.Required("quantity", "body", o.Quantity); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems0) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("type_id", "body", o.TypeID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get corporations corporation ID starbases starbase ID o k body fuels items0 based on context it is used
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems0) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
