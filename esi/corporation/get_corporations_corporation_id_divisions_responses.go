// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCorporationsCorporationIDDivisionsReader is a Reader for the GetCorporationsCorporationIDDivisions structure.
type GetCorporationsCorporationIDDivisionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDDivisionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCorporationsCorporationIDDivisionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCorporationsCorporationIDDivisionsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCorporationsCorporationIDDivisionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCorporationsCorporationIDDivisionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCorporationsCorporationIDDivisionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCorporationsCorporationIDDivisionsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCorporationsCorporationIDDivisionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCorporationsCorporationIDDivisionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCorporationsCorporationIDDivisionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDDivisionsOK creates a GetCorporationsCorporationIDDivisionsOK with default headers values
func NewGetCorporationsCorporationIDDivisionsOK() *GetCorporationsCorporationIDDivisionsOK {
	return &GetCorporationsCorporationIDDivisionsOK{}
}

/* GetCorporationsCorporationIDDivisionsOK describes a response with status code 200, with default header values.

List of corporation division names
*/
type GetCorporationsCorporationIDDivisionsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetCorporationsCorporationIDDivisionsOKBody
}

func (o *GetCorporationsCorporationIDDivisionsOK) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/divisions/][%d] getCorporationsCorporationIdDivisionsOK  %+v", 200, o.Payload)
}
func (o *GetCorporationsCorporationIDDivisionsOK) GetPayload() *GetCorporationsCorporationIDDivisionsOKBody {
	return o.Payload
}

func (o *GetCorporationsCorporationIDDivisionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetCorporationsCorporationIDDivisionsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDDivisionsNotModified creates a GetCorporationsCorporationIDDivisionsNotModified with default headers values
func NewGetCorporationsCorporationIDDivisionsNotModified() *GetCorporationsCorporationIDDivisionsNotModified {
	return &GetCorporationsCorporationIDDivisionsNotModified{}
}

/* GetCorporationsCorporationIDDivisionsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCorporationsCorporationIDDivisionsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationsCorporationIDDivisionsNotModified) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/divisions/][%d] getCorporationsCorporationIdDivisionsNotModified ", 304)
}

func (o *GetCorporationsCorporationIDDivisionsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCorporationsCorporationIDDivisionsBadRequest creates a GetCorporationsCorporationIDDivisionsBadRequest with default headers values
func NewGetCorporationsCorporationIDDivisionsBadRequest() *GetCorporationsCorporationIDDivisionsBadRequest {
	return &GetCorporationsCorporationIDDivisionsBadRequest{}
}

/* GetCorporationsCorporationIDDivisionsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCorporationsCorporationIDDivisionsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationsCorporationIDDivisionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/divisions/][%d] getCorporationsCorporationIdDivisionsBadRequest  %+v", 400, o.Payload)
}
func (o *GetCorporationsCorporationIDDivisionsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCorporationsCorporationIDDivisionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDDivisionsUnauthorized creates a GetCorporationsCorporationIDDivisionsUnauthorized with default headers values
func NewGetCorporationsCorporationIDDivisionsUnauthorized() *GetCorporationsCorporationIDDivisionsUnauthorized {
	return &GetCorporationsCorporationIDDivisionsUnauthorized{}
}

/* GetCorporationsCorporationIDDivisionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDDivisionsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCorporationsCorporationIDDivisionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/divisions/][%d] getCorporationsCorporationIdDivisionsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCorporationsCorporationIDDivisionsUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCorporationsCorporationIDDivisionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDDivisionsForbidden creates a GetCorporationsCorporationIDDivisionsForbidden with default headers values
func NewGetCorporationsCorporationIDDivisionsForbidden() *GetCorporationsCorporationIDDivisionsForbidden {
	return &GetCorporationsCorporationIDDivisionsForbidden{}
}

/* GetCorporationsCorporationIDDivisionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCorporationsCorporationIDDivisionsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCorporationsCorporationIDDivisionsForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/divisions/][%d] getCorporationsCorporationIdDivisionsForbidden  %+v", 403, o.Payload)
}
func (o *GetCorporationsCorporationIDDivisionsForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCorporationsCorporationIDDivisionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDDivisionsEnhanceYourCalm creates a GetCorporationsCorporationIDDivisionsEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDDivisionsEnhanceYourCalm() *GetCorporationsCorporationIDDivisionsEnhanceYourCalm {
	return &GetCorporationsCorporationIDDivisionsEnhanceYourCalm{}
}

/* GetCorporationsCorporationIDDivisionsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCorporationsCorporationIDDivisionsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationsCorporationIDDivisionsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/divisions/][%d] getCorporationsCorporationIdDivisionsEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetCorporationsCorporationIDDivisionsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCorporationsCorporationIDDivisionsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDDivisionsInternalServerError creates a GetCorporationsCorporationIDDivisionsInternalServerError with default headers values
func NewGetCorporationsCorporationIDDivisionsInternalServerError() *GetCorporationsCorporationIDDivisionsInternalServerError {
	return &GetCorporationsCorporationIDDivisionsInternalServerError{}
}

/* GetCorporationsCorporationIDDivisionsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCorporationsCorporationIDDivisionsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationsCorporationIDDivisionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/divisions/][%d] getCorporationsCorporationIdDivisionsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCorporationsCorporationIDDivisionsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCorporationsCorporationIDDivisionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDDivisionsServiceUnavailable creates a GetCorporationsCorporationIDDivisionsServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDDivisionsServiceUnavailable() *GetCorporationsCorporationIDDivisionsServiceUnavailable {
	return &GetCorporationsCorporationIDDivisionsServiceUnavailable{}
}

/* GetCorporationsCorporationIDDivisionsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDDivisionsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationsCorporationIDDivisionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/divisions/][%d] getCorporationsCorporationIdDivisionsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetCorporationsCorporationIDDivisionsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCorporationsCorporationIDDivisionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDDivisionsGatewayTimeout creates a GetCorporationsCorporationIDDivisionsGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDDivisionsGatewayTimeout() *GetCorporationsCorporationIDDivisionsGatewayTimeout {
	return &GetCorporationsCorporationIDDivisionsGatewayTimeout{}
}

/* GetCorporationsCorporationIDDivisionsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDDivisionsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationsCorporationIDDivisionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/divisions/][%d] getCorporationsCorporationIdDivisionsGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetCorporationsCorporationIDDivisionsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCorporationsCorporationIDDivisionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCorporationsCorporationIDDivisionsOKBody get_corporations_corporation_id_divisions_ok
//
// 200 ok object
swagger:model GetCorporationsCorporationIDDivisionsOKBody
*/
type GetCorporationsCorporationIDDivisionsOKBody struct {

	// get_corporations_corporation_id_divisions_hangar
	//
	// hangar array
	// Max Items: 7
	Hangar []*GetCorporationsCorporationIDDivisionsOKBodyHangarItems0 `json:"hangar"`

	// get_corporations_corporation_id_divisions_wallet
	//
	// wallet array
	// Max Items: 7
	Wallet []*GetCorporationsCorporationIDDivisionsOKBodyWalletItems0 `json:"wallet"`
}

// Validate validates this get corporations corporation ID divisions o k body
func (o *GetCorporationsCorporationIDDivisionsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHangar(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateWallet(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDDivisionsOKBody) validateHangar(formats strfmt.Registry) error {
	if swag.IsZero(o.Hangar) { // not required
		return nil
	}

	iHangarSize := int64(len(o.Hangar))

	if err := validate.MaxItems("getCorporationsCorporationIdDivisionsOK"+"."+"hangar", "body", iHangarSize, 7); err != nil {
		return err
	}

	for i := 0; i < len(o.Hangar); i++ {
		if swag.IsZero(o.Hangar[i]) { // not required
			continue
		}

		if o.Hangar[i] != nil {
			if err := o.Hangar[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCorporationsCorporationIdDivisionsOK" + "." + "hangar" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCorporationsCorporationIdDivisionsOK" + "." + "hangar" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetCorporationsCorporationIDDivisionsOKBody) validateWallet(formats strfmt.Registry) error {
	if swag.IsZero(o.Wallet) { // not required
		return nil
	}

	iWalletSize := int64(len(o.Wallet))

	if err := validate.MaxItems("getCorporationsCorporationIdDivisionsOK"+"."+"wallet", "body", iWalletSize, 7); err != nil {
		return err
	}

	for i := 0; i < len(o.Wallet); i++ {
		if swag.IsZero(o.Wallet[i]) { // not required
			continue
		}

		if o.Wallet[i] != nil {
			if err := o.Wallet[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCorporationsCorporationIdDivisionsOK" + "." + "wallet" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCorporationsCorporationIdDivisionsOK" + "." + "wallet" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get corporations corporation ID divisions o k body based on the context it is used
func (o *GetCorporationsCorporationIDDivisionsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHangar(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateWallet(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDDivisionsOKBody) contextValidateHangar(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Hangar); i++ {

		if o.Hangar[i] != nil {
			if err := o.Hangar[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCorporationsCorporationIdDivisionsOK" + "." + "hangar" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCorporationsCorporationIdDivisionsOK" + "." + "hangar" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetCorporationsCorporationIDDivisionsOKBody) contextValidateWallet(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Wallet); i++ {

		if o.Wallet[i] != nil {
			if err := o.Wallet[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCorporationsCorporationIdDivisionsOK" + "." + "wallet" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getCorporationsCorporationIdDivisionsOK" + "." + "wallet" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDDivisionsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDDivisionsOKBody) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDDivisionsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCorporationsCorporationIDDivisionsOKBodyHangarItems0 get_corporations_corporation_id_divisions_hangar_hangar
//
// hangar object
swagger:model GetCorporationsCorporationIDDivisionsOKBodyHangarItems0
*/
type GetCorporationsCorporationIDDivisionsOKBodyHangarItems0 struct {

	// get_corporations_corporation_id_divisions_division
	//
	// division integer
	// Maximum: 7
	// Minimum: 1
	Division int32 `json:"division,omitempty"`

	// get_corporations_corporation_id_divisions_name
	//
	// name string
	// Max Length: 50
	Name string `json:"name,omitempty"`
}

// Validate validates this get corporations corporation ID divisions o k body hangar items0
func (o *GetCorporationsCorporationIDDivisionsOKBodyHangarItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDivision(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDDivisionsOKBodyHangarItems0) validateDivision(formats strfmt.Registry) error {
	if swag.IsZero(o.Division) { // not required
		return nil
	}

	if err := validate.MinimumInt("division", "body", int64(o.Division), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("division", "body", int64(o.Division), 7, false); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDDivisionsOKBodyHangarItems0) validateName(formats strfmt.Registry) error {
	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if err := validate.MaxLength("name", "body", o.Name, 50); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get corporations corporation ID divisions o k body hangar items0 based on context it is used
func (o *GetCorporationsCorporationIDDivisionsOKBodyHangarItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDDivisionsOKBodyHangarItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDDivisionsOKBodyHangarItems0) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDDivisionsOKBodyHangarItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCorporationsCorporationIDDivisionsOKBodyWalletItems0 get_corporations_corporation_id_divisions_wallet_wallet
//
// wallet object
swagger:model GetCorporationsCorporationIDDivisionsOKBodyWalletItems0
*/
type GetCorporationsCorporationIDDivisionsOKBodyWalletItems0 struct {

	// get_corporations_corporation_id_divisions_wallet_division
	//
	// division integer
	// Maximum: 7
	// Minimum: 1
	Division int32 `json:"division,omitempty"`

	// get_corporations_corporation_id_divisions_wallet_name
	//
	// name string
	// Max Length: 50
	Name string `json:"name,omitempty"`
}

// Validate validates this get corporations corporation ID divisions o k body wallet items0
func (o *GetCorporationsCorporationIDDivisionsOKBodyWalletItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDivision(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDDivisionsOKBodyWalletItems0) validateDivision(formats strfmt.Registry) error {
	if swag.IsZero(o.Division) { // not required
		return nil
	}

	if err := validate.MinimumInt("division", "body", int64(o.Division), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("division", "body", int64(o.Division), 7, false); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDDivisionsOKBodyWalletItems0) validateName(formats strfmt.Registry) error {
	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if err := validate.MaxLength("name", "body", o.Name, 50); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get corporations corporation ID divisions o k body wallet items0 based on context it is used
func (o *GetCorporationsCorporationIDDivisionsOKBodyWalletItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDDivisionsOKBodyWalletItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDDivisionsOKBodyWalletItems0) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDDivisionsOKBodyWalletItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
