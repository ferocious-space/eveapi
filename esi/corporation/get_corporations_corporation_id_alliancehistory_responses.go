// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCorporationsCorporationIDAlliancehistoryReader is a Reader for the GetCorporationsCorporationIDAlliancehistory structure.
type GetCorporationsCorporationIDAlliancehistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDAlliancehistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCorporationsCorporationIDAlliancehistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCorporationsCorporationIDAlliancehistoryNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCorporationsCorporationIDAlliancehistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCorporationsCorporationIDAlliancehistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCorporationsCorporationIDAlliancehistoryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCorporationsCorporationIDAlliancehistoryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDAlliancehistoryOK creates a GetCorporationsCorporationIDAlliancehistoryOK with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryOK() *GetCorporationsCorporationIDAlliancehistoryOK {
	return &GetCorporationsCorporationIDAlliancehistoryOK{}
}

/*
GetCorporationsCorporationIDAlliancehistoryOK describes a response with status code 200, with default header values.

Alliance history for the given corporation
*/
type GetCorporationsCorporationIDAlliancehistoryOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetCorporationsCorporationIDAlliancehistoryOKBodyItems0
}

// IsSuccess returns true when this get corporations corporation Id alliancehistory o k response has a 2xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get corporations corporation Id alliancehistory o k response has a 3xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id alliancehistory o k response has a 4xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id alliancehistory o k response has a 5xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id alliancehistory o k response a status code equal to that given
func (o *GetCorporationsCorporationIDAlliancehistoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get corporations corporation Id alliancehistory o k response
func (o *GetCorporationsCorporationIDAlliancehistoryOK) Code() int {
	return 200
}

func (o *GetCorporationsCorporationIDAlliancehistoryOK) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryOK) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryOK) GetPayload() []*GetCorporationsCorporationIDAlliancehistoryOKBodyItems0 {
	return o.Payload
}

func (o *GetCorporationsCorporationIDAlliancehistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDAlliancehistoryNotModified creates a GetCorporationsCorporationIDAlliancehistoryNotModified with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryNotModified() *GetCorporationsCorporationIDAlliancehistoryNotModified {
	return &GetCorporationsCorporationIDAlliancehistoryNotModified{}
}

/*
GetCorporationsCorporationIDAlliancehistoryNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCorporationsCorporationIDAlliancehistoryNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get corporations corporation Id alliancehistory not modified response has a 2xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id alliancehistory not modified response has a 3xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get corporations corporation Id alliancehistory not modified response has a 4xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id alliancehistory not modified response has a 5xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id alliancehistory not modified response a status code equal to that given
func (o *GetCorporationsCorporationIDAlliancehistoryNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get corporations corporation Id alliancehistory not modified response
func (o *GetCorporationsCorporationIDAlliancehistoryNotModified) Code() int {
	return 304
}

func (o *GetCorporationsCorporationIDAlliancehistoryNotModified) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryNotModified ", 304)
}

func (o *GetCorporationsCorporationIDAlliancehistoryNotModified) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryNotModified ", 304)
}

func (o *GetCorporationsCorporationIDAlliancehistoryNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCorporationsCorporationIDAlliancehistoryBadRequest creates a GetCorporationsCorporationIDAlliancehistoryBadRequest with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryBadRequest() *GetCorporationsCorporationIDAlliancehistoryBadRequest {
	return &GetCorporationsCorporationIDAlliancehistoryBadRequest{}
}

/*
GetCorporationsCorporationIDAlliancehistoryBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCorporationsCorporationIDAlliancehistoryBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get corporations corporation Id alliancehistory bad request response has a 2xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id alliancehistory bad request response has a 3xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id alliancehistory bad request response has a 4xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id alliancehistory bad request response has a 5xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id alliancehistory bad request response a status code equal to that given
func (o *GetCorporationsCorporationIDAlliancehistoryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get corporations corporation Id alliancehistory bad request response
func (o *GetCorporationsCorporationIDAlliancehistoryBadRequest) Code() int {
	return 400
}

func (o *GetCorporationsCorporationIDAlliancehistoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryBadRequest) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCorporationsCorporationIDAlliancehistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm creates a GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm() *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm {
	return &GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm{}
}

/*
GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get corporations corporation Id alliancehistory enhance your calm response has a 2xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id alliancehistory enhance your calm response has a 3xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id alliancehistory enhance your calm response has a 4xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id alliancehistory enhance your calm response has a 5xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id alliancehistory enhance your calm response a status code equal to that given
func (o *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get corporations corporation Id alliancehistory enhance your calm response
func (o *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDAlliancehistoryInternalServerError creates a GetCorporationsCorporationIDAlliancehistoryInternalServerError with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryInternalServerError() *GetCorporationsCorporationIDAlliancehistoryInternalServerError {
	return &GetCorporationsCorporationIDAlliancehistoryInternalServerError{}
}

/*
GetCorporationsCorporationIDAlliancehistoryInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCorporationsCorporationIDAlliancehistoryInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get corporations corporation Id alliancehistory internal server error response has a 2xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id alliancehistory internal server error response has a 3xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id alliancehistory internal server error response has a 4xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id alliancehistory internal server error response has a 5xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id alliancehistory internal server error response a status code equal to that given
func (o *GetCorporationsCorporationIDAlliancehistoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get corporations corporation Id alliancehistory internal server error response
func (o *GetCorporationsCorporationIDAlliancehistoryInternalServerError) Code() int {
	return 500
}

func (o *GetCorporationsCorporationIDAlliancehistoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryInternalServerError) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCorporationsCorporationIDAlliancehistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDAlliancehistoryServiceUnavailable creates a GetCorporationsCorporationIDAlliancehistoryServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryServiceUnavailable() *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable {
	return &GetCorporationsCorporationIDAlliancehistoryServiceUnavailable{}
}

/*
GetCorporationsCorporationIDAlliancehistoryServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDAlliancehistoryServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get corporations corporation Id alliancehistory service unavailable response has a 2xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id alliancehistory service unavailable response has a 3xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id alliancehistory service unavailable response has a 4xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id alliancehistory service unavailable response has a 5xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id alliancehistory service unavailable response a status code equal to that given
func (o *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get corporations corporation Id alliancehistory service unavailable response
func (o *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable) Code() int {
	return 503
}

func (o *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDAlliancehistoryGatewayTimeout creates a GetCorporationsCorporationIDAlliancehistoryGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryGatewayTimeout() *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout {
	return &GetCorporationsCorporationIDAlliancehistoryGatewayTimeout{}
}

/*
GetCorporationsCorporationIDAlliancehistoryGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDAlliancehistoryGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get corporations corporation Id alliancehistory gateway timeout response has a 2xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id alliancehistory gateway timeout response has a 3xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id alliancehistory gateway timeout response has a 4xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id alliancehistory gateway timeout response has a 5xx status code
func (o *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id alliancehistory gateway timeout response a status code equal to that given
func (o *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get corporations corporation Id alliancehistory gateway timeout response
func (o *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout) Code() int {
	return 504
}

func (o *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v3/corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCorporationsCorporationIDAlliancehistoryOKBodyItems0 get_corporations_corporation_id_alliancehistory_200_ok
//
// 200 ok object
swagger:model GetCorporationsCorporationIDAlliancehistoryOKBodyItems0
*/
type GetCorporationsCorporationIDAlliancehistoryOKBodyItems0 struct {

	// get_corporations_corporation_id_alliancehistory_alliance_id
	//
	// alliance_id integer
	AllianceID int32 `json:"alliance_id,omitempty"`

	// get_corporations_corporation_id_alliancehistory_is_deleted
	//
	// True if the alliance has been closed
	IsDeleted bool `json:"is_deleted,omitempty"`

	// get_corporations_corporation_id_alliancehistory_record_id
	//
	// An incrementing ID that can be used to canonically establish order of records in cases where dates may be ambiguous
	// Required: true
	RecordID *int32 `json:"record_id"`

	// get_corporations_corporation_id_alliancehistory_start_date
	//
	// start_date string
	// Required: true
	// Format: date-time
	StartDate *strfmt.DateTime `json:"start_date"`
}

// Validate validates this get corporations corporation ID alliancehistory o k body items0
func (o *GetCorporationsCorporationIDAlliancehistoryOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRecordID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDAlliancehistoryOKBodyItems0) validateRecordID(formats strfmt.Registry) error {

	if err := validate.Required("record_id", "body", o.RecordID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDAlliancehistoryOKBodyItems0) validateStartDate(formats strfmt.Registry) error {

	if err := validate.Required("start_date", "body", o.StartDate); err != nil {
		return err
	}

	if err := validate.FormatOf("start_date", "body", "date-time", o.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get corporations corporation ID alliancehistory o k body items0 based on context it is used
func (o *GetCorporationsCorporationIDAlliancehistoryOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDAlliancehistoryOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDAlliancehistoryOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDAlliancehistoryOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
