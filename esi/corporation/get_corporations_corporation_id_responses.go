// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCorporationsCorporationIDReader is a Reader for the GetCorporationsCorporationID structure.
type GetCorporationsCorporationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCorporationsCorporationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCorporationsCorporationIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCorporationsCorporationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCorporationsCorporationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCorporationsCorporationIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCorporationsCorporationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCorporationsCorporationIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCorporationsCorporationIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDOK creates a GetCorporationsCorporationIDOK with default headers values
func NewGetCorporationsCorporationIDOK() *GetCorporationsCorporationIDOK {
	return &GetCorporationsCorporationIDOK{}
}

/*
GetCorporationsCorporationIDOK describes a response with status code 200, with default header values.

Public information about a corporation
*/
type GetCorporationsCorporationIDOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetCorporationsCorporationIDOKBody
}

// IsSuccess returns true when this get corporations corporation Id o k response has a 2xx status code
func (o *GetCorporationsCorporationIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get corporations corporation Id o k response has a 3xx status code
func (o *GetCorporationsCorporationIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id o k response has a 4xx status code
func (o *GetCorporationsCorporationIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id o k response has a 5xx status code
func (o *GetCorporationsCorporationIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id o k response a status code equal to that given
func (o *GetCorporationsCorporationIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCorporationsCorporationIDOK) Error() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDOK) String() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDOK) GetPayload() *GetCorporationsCorporationIDOKBody {
	return o.Payload
}

func (o *GetCorporationsCorporationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetCorporationsCorporationIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDNotModified creates a GetCorporationsCorporationIDNotModified with default headers values
func NewGetCorporationsCorporationIDNotModified() *GetCorporationsCorporationIDNotModified {
	return &GetCorporationsCorporationIDNotModified{}
}

/*
GetCorporationsCorporationIDNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCorporationsCorporationIDNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get corporations corporation Id not modified response has a 2xx status code
func (o *GetCorporationsCorporationIDNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id not modified response has a 3xx status code
func (o *GetCorporationsCorporationIDNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get corporations corporation Id not modified response has a 4xx status code
func (o *GetCorporationsCorporationIDNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id not modified response has a 5xx status code
func (o *GetCorporationsCorporationIDNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id not modified response a status code equal to that given
func (o *GetCorporationsCorporationIDNotModified) IsCode(code int) bool {
	return code == 304
}

func (o *GetCorporationsCorporationIDNotModified) Error() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdNotModified ", 304)
}

func (o *GetCorporationsCorporationIDNotModified) String() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdNotModified ", 304)
}

func (o *GetCorporationsCorporationIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCorporationsCorporationIDBadRequest creates a GetCorporationsCorporationIDBadRequest with default headers values
func NewGetCorporationsCorporationIDBadRequest() *GetCorporationsCorporationIDBadRequest {
	return &GetCorporationsCorporationIDBadRequest{}
}

/*
GetCorporationsCorporationIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCorporationsCorporationIDBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get corporations corporation Id bad request response has a 2xx status code
func (o *GetCorporationsCorporationIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id bad request response has a 3xx status code
func (o *GetCorporationsCorporationIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id bad request response has a 4xx status code
func (o *GetCorporationsCorporationIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id bad request response has a 5xx status code
func (o *GetCorporationsCorporationIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id bad request response a status code equal to that given
func (o *GetCorporationsCorporationIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetCorporationsCorporationIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDBadRequest) String() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCorporationsCorporationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDNotFound creates a GetCorporationsCorporationIDNotFound with default headers values
func NewGetCorporationsCorporationIDNotFound() *GetCorporationsCorporationIDNotFound {
	return &GetCorporationsCorporationIDNotFound{}
}

/*
GetCorporationsCorporationIDNotFound describes a response with status code 404, with default header values.

Corporation not found
*/
type GetCorporationsCorporationIDNotFound struct {
	Payload *GetCorporationsCorporationIDNotFoundBody
}

// IsSuccess returns true when this get corporations corporation Id not found response has a 2xx status code
func (o *GetCorporationsCorporationIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id not found response has a 3xx status code
func (o *GetCorporationsCorporationIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id not found response has a 4xx status code
func (o *GetCorporationsCorporationIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id not found response has a 5xx status code
func (o *GetCorporationsCorporationIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id not found response a status code equal to that given
func (o *GetCorporationsCorporationIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetCorporationsCorporationIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdNotFound  %+v", 404, o.Payload)
}

func (o *GetCorporationsCorporationIDNotFound) String() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdNotFound  %+v", 404, o.Payload)
}

func (o *GetCorporationsCorporationIDNotFound) GetPayload() *GetCorporationsCorporationIDNotFoundBody {
	return o.Payload
}

func (o *GetCorporationsCorporationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCorporationsCorporationIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDEnhanceYourCalm creates a GetCorporationsCorporationIDEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDEnhanceYourCalm() *GetCorporationsCorporationIDEnhanceYourCalm {
	return &GetCorporationsCorporationIDEnhanceYourCalm{}
}

/*
GetCorporationsCorporationIDEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCorporationsCorporationIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get corporations corporation Id enhance your calm response has a 2xx status code
func (o *GetCorporationsCorporationIDEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id enhance your calm response has a 3xx status code
func (o *GetCorporationsCorporationIDEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id enhance your calm response has a 4xx status code
func (o *GetCorporationsCorporationIDEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id enhance your calm response has a 5xx status code
func (o *GetCorporationsCorporationIDEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id enhance your calm response a status code equal to that given
func (o *GetCorporationsCorporationIDEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

func (o *GetCorporationsCorporationIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCorporationsCorporationIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDInternalServerError creates a GetCorporationsCorporationIDInternalServerError with default headers values
func NewGetCorporationsCorporationIDInternalServerError() *GetCorporationsCorporationIDInternalServerError {
	return &GetCorporationsCorporationIDInternalServerError{}
}

/*
GetCorporationsCorporationIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCorporationsCorporationIDInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get corporations corporation Id internal server error response has a 2xx status code
func (o *GetCorporationsCorporationIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id internal server error response has a 3xx status code
func (o *GetCorporationsCorporationIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id internal server error response has a 4xx status code
func (o *GetCorporationsCorporationIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id internal server error response has a 5xx status code
func (o *GetCorporationsCorporationIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id internal server error response a status code equal to that given
func (o *GetCorporationsCorporationIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCorporationsCorporationIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCorporationsCorporationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDServiceUnavailable creates a GetCorporationsCorporationIDServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDServiceUnavailable() *GetCorporationsCorporationIDServiceUnavailable {
	return &GetCorporationsCorporationIDServiceUnavailable{}
}

/*
GetCorporationsCorporationIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get corporations corporation Id service unavailable response has a 2xx status code
func (o *GetCorporationsCorporationIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id service unavailable response has a 3xx status code
func (o *GetCorporationsCorporationIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id service unavailable response has a 4xx status code
func (o *GetCorporationsCorporationIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id service unavailable response has a 5xx status code
func (o *GetCorporationsCorporationIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id service unavailable response a status code equal to that given
func (o *GetCorporationsCorporationIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetCorporationsCorporationIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCorporationsCorporationIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDGatewayTimeout creates a GetCorporationsCorporationIDGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDGatewayTimeout() *GetCorporationsCorporationIDGatewayTimeout {
	return &GetCorporationsCorporationIDGatewayTimeout{}
}

/*
GetCorporationsCorporationIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get corporations corporation Id gateway timeout response has a 2xx status code
func (o *GetCorporationsCorporationIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id gateway timeout response has a 3xx status code
func (o *GetCorporationsCorporationIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id gateway timeout response has a 4xx status code
func (o *GetCorporationsCorporationIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id gateway timeout response has a 5xx status code
func (o *GetCorporationsCorporationIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id gateway timeout response a status code equal to that given
func (o *GetCorporationsCorporationIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetCorporationsCorporationIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v5/corporations/{corporation_id}/][%d] getCorporationsCorporationIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCorporationsCorporationIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCorporationsCorporationIDNotFoundBody get_corporations_corporation_id_not_found
//
// Not found
swagger:model GetCorporationsCorporationIDNotFoundBody
*/
type GetCorporationsCorporationIDNotFoundBody struct {

	// get_corporations_corporation_id_404_not_found
	//
	// Not found message
	Error string `json:"error,omitempty"`
}

// Validate validates this get corporations corporation ID not found body
func (o *GetCorporationsCorporationIDNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get corporations corporation ID not found body based on context it is used
func (o *GetCorporationsCorporationIDNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetCorporationsCorporationIDOKBody get_corporations_corporation_id_ok
//
// 200 ok object
swagger:model GetCorporationsCorporationIDOKBody
*/
type GetCorporationsCorporationIDOKBody struct {

	// get_corporations_corporation_id_alliance_id
	//
	// ID of the alliance that corporation is a member of, if any
	AllianceID int32 `json:"alliance_id,omitempty"`

	// get_corporations_corporation_id_ceo_id
	//
	// ceo_id integer
	// Required: true
	CeoID *int32 `json:"ceo_id"`

	// get_corporations_corporation_id_creator_id
	//
	// creator_id integer
	// Required: true
	CreatorID *int32 `json:"creator_id"`

	// get_corporations_corporation_id_date_founded
	//
	// date_founded string
	// Format: date-time
	DateFounded strfmt.DateTime `json:"date_founded,omitempty"`

	// get_corporations_corporation_id_description
	//
	// description string
	Description string `json:"description,omitempty"`

	// get_corporations_corporation_id_faction_id
	//
	// faction_id integer
	FactionID int32 `json:"faction_id,omitempty"`

	// get_corporations_corporation_id_home_station_id
	//
	// home_station_id integer
	HomeStationID int32 `json:"home_station_id,omitempty"`

	// get_corporations_corporation_id_member_count
	//
	// member_count integer
	// Required: true
	MemberCount *int32 `json:"member_count"`

	// get_corporations_corporation_id_name
	//
	// the full name of the corporation
	// Required: true
	Name *string `json:"name"`

	// get_corporations_corporation_id_shares
	//
	// shares integer
	Shares int64 `json:"shares,omitempty"`

	// get_corporations_corporation_id_tax_rate
	//
	// tax_rate number
	// Required: true
	// Maximum: 1
	// Minimum: 0
	TaxRate *float32 `json:"tax_rate"`

	// get_corporations_corporation_id_ticker
	//
	// the short name of the corporation
	// Required: true
	Ticker *string `json:"ticker"`

	// get_corporations_corporation_id_url
	//
	// url string
	URL string `json:"url,omitempty"`

	// get_corporations_corporation_id_war_eligible
	//
	// war_eligible boolean
	WarEligible bool `json:"war_eligible,omitempty"`
}

// Validate validates this get corporations corporation ID o k body
func (o *GetCorporationsCorporationIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCeoID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatorID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDateFounded(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMemberCount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTaxRate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTicker(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDOKBody) validateCeoID(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdOK"+"."+"ceo_id", "body", o.CeoID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOKBody) validateCreatorID(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdOK"+"."+"creator_id", "body", o.CreatorID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOKBody) validateDateFounded(formats strfmt.Registry) error {
	if swag.IsZero(o.DateFounded) { // not required
		return nil
	}

	if err := validate.FormatOf("getCorporationsCorporationIdOK"+"."+"date_founded", "body", "date-time", o.DateFounded.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOKBody) validateMemberCount(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdOK"+"."+"member_count", "body", o.MemberCount); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOKBody) validateTaxRate(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdOK"+"."+"tax_rate", "body", o.TaxRate); err != nil {
		return err
	}

	if err := validate.Minimum("getCorporationsCorporationIdOK"+"."+"tax_rate", "body", float64(*o.TaxRate), 0, false); err != nil {
		return err
	}

	if err := validate.Maximum("getCorporationsCorporationIdOK"+"."+"tax_rate", "body", float64(*o.TaxRate), 1, false); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDOKBody) validateTicker(formats strfmt.Registry) error {

	if err := validate.Required("getCorporationsCorporationIdOK"+"."+"ticker", "body", o.Ticker); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get corporations corporation ID o k body based on context it is used
func (o *GetCorporationsCorporationIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
