// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ferocious-space/eveapi/models"
)

// GetCorporationsNpccorpsReader is a Reader for the GetCorporationsNpccorps structure.
type GetCorporationsNpccorpsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsNpccorpsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCorporationsNpccorpsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCorporationsNpccorpsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCorporationsNpccorpsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCorporationsNpccorpsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCorporationsNpccorpsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCorporationsNpccorpsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCorporationsNpccorpsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCorporationsNpccorpsOK creates a GetCorporationsNpccorpsOK with default headers values
func NewGetCorporationsNpccorpsOK() *GetCorporationsNpccorpsOK {
	return &GetCorporationsNpccorpsOK{}
}

/*
GetCorporationsNpccorpsOK describes a response with status code 200, with default header values.

A list of npc corporation ids
*/
type GetCorporationsNpccorpsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []int32
}

// IsSuccess returns true when this get corporations npccorps o k response has a 2xx status code
func (o *GetCorporationsNpccorpsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get corporations npccorps o k response has a 3xx status code
func (o *GetCorporationsNpccorpsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations npccorps o k response has a 4xx status code
func (o *GetCorporationsNpccorpsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations npccorps o k response has a 5xx status code
func (o *GetCorporationsNpccorpsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations npccorps o k response a status code equal to that given
func (o *GetCorporationsNpccorpsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get corporations npccorps o k response
func (o *GetCorporationsNpccorpsOK) Code() int {
	return 200
}

func (o *GetCorporationsNpccorpsOK) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsNpccorpsOK) String() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsNpccorpsOK) GetPayload() []int32 {
	return o.Payload
}

func (o *GetCorporationsNpccorpsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsNpccorpsNotModified creates a GetCorporationsNpccorpsNotModified with default headers values
func NewGetCorporationsNpccorpsNotModified() *GetCorporationsNpccorpsNotModified {
	return &GetCorporationsNpccorpsNotModified{}
}

/*
GetCorporationsNpccorpsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCorporationsNpccorpsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get corporations npccorps not modified response has a 2xx status code
func (o *GetCorporationsNpccorpsNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations npccorps not modified response has a 3xx status code
func (o *GetCorporationsNpccorpsNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get corporations npccorps not modified response has a 4xx status code
func (o *GetCorporationsNpccorpsNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations npccorps not modified response has a 5xx status code
func (o *GetCorporationsNpccorpsNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations npccorps not modified response a status code equal to that given
func (o *GetCorporationsNpccorpsNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get corporations npccorps not modified response
func (o *GetCorporationsNpccorpsNotModified) Code() int {
	return 304
}

func (o *GetCorporationsNpccorpsNotModified) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsNotModified ", 304)
}

func (o *GetCorporationsNpccorpsNotModified) String() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsNotModified ", 304)
}

func (o *GetCorporationsNpccorpsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCorporationsNpccorpsBadRequest creates a GetCorporationsNpccorpsBadRequest with default headers values
func NewGetCorporationsNpccorpsBadRequest() *GetCorporationsNpccorpsBadRequest {
	return &GetCorporationsNpccorpsBadRequest{}
}

/*
GetCorporationsNpccorpsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCorporationsNpccorpsBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get corporations npccorps bad request response has a 2xx status code
func (o *GetCorporationsNpccorpsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations npccorps bad request response has a 3xx status code
func (o *GetCorporationsNpccorpsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations npccorps bad request response has a 4xx status code
func (o *GetCorporationsNpccorpsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations npccorps bad request response has a 5xx status code
func (o *GetCorporationsNpccorpsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations npccorps bad request response a status code equal to that given
func (o *GetCorporationsNpccorpsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get corporations npccorps bad request response
func (o *GetCorporationsNpccorpsBadRequest) Code() int {
	return 400
}

func (o *GetCorporationsNpccorpsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsNpccorpsBadRequest) String() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsNpccorpsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCorporationsNpccorpsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsNpccorpsEnhanceYourCalm creates a GetCorporationsNpccorpsEnhanceYourCalm with default headers values
func NewGetCorporationsNpccorpsEnhanceYourCalm() *GetCorporationsNpccorpsEnhanceYourCalm {
	return &GetCorporationsNpccorpsEnhanceYourCalm{}
}

/*
GetCorporationsNpccorpsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCorporationsNpccorpsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get corporations npccorps enhance your calm response has a 2xx status code
func (o *GetCorporationsNpccorpsEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations npccorps enhance your calm response has a 3xx status code
func (o *GetCorporationsNpccorpsEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations npccorps enhance your calm response has a 4xx status code
func (o *GetCorporationsNpccorpsEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations npccorps enhance your calm response has a 5xx status code
func (o *GetCorporationsNpccorpsEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations npccorps enhance your calm response a status code equal to that given
func (o *GetCorporationsNpccorpsEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get corporations npccorps enhance your calm response
func (o *GetCorporationsNpccorpsEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetCorporationsNpccorpsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsNpccorpsEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsNpccorpsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCorporationsNpccorpsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsNpccorpsInternalServerError creates a GetCorporationsNpccorpsInternalServerError with default headers values
func NewGetCorporationsNpccorpsInternalServerError() *GetCorporationsNpccorpsInternalServerError {
	return &GetCorporationsNpccorpsInternalServerError{}
}

/*
GetCorporationsNpccorpsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCorporationsNpccorpsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get corporations npccorps internal server error response has a 2xx status code
func (o *GetCorporationsNpccorpsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations npccorps internal server error response has a 3xx status code
func (o *GetCorporationsNpccorpsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations npccorps internal server error response has a 4xx status code
func (o *GetCorporationsNpccorpsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations npccorps internal server error response has a 5xx status code
func (o *GetCorporationsNpccorpsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations npccorps internal server error response a status code equal to that given
func (o *GetCorporationsNpccorpsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get corporations npccorps internal server error response
func (o *GetCorporationsNpccorpsInternalServerError) Code() int {
	return 500
}

func (o *GetCorporationsNpccorpsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsNpccorpsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsNpccorpsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCorporationsNpccorpsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsNpccorpsServiceUnavailable creates a GetCorporationsNpccorpsServiceUnavailable with default headers values
func NewGetCorporationsNpccorpsServiceUnavailable() *GetCorporationsNpccorpsServiceUnavailable {
	return &GetCorporationsNpccorpsServiceUnavailable{}
}

/*
GetCorporationsNpccorpsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCorporationsNpccorpsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get corporations npccorps service unavailable response has a 2xx status code
func (o *GetCorporationsNpccorpsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations npccorps service unavailable response has a 3xx status code
func (o *GetCorporationsNpccorpsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations npccorps service unavailable response has a 4xx status code
func (o *GetCorporationsNpccorpsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations npccorps service unavailable response has a 5xx status code
func (o *GetCorporationsNpccorpsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations npccorps service unavailable response a status code equal to that given
func (o *GetCorporationsNpccorpsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get corporations npccorps service unavailable response
func (o *GetCorporationsNpccorpsServiceUnavailable) Code() int {
	return 503
}

func (o *GetCorporationsNpccorpsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsNpccorpsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsNpccorpsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCorporationsNpccorpsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsNpccorpsGatewayTimeout creates a GetCorporationsNpccorpsGatewayTimeout with default headers values
func NewGetCorporationsNpccorpsGatewayTimeout() *GetCorporationsNpccorpsGatewayTimeout {
	return &GetCorporationsNpccorpsGatewayTimeout{}
}

/*
GetCorporationsNpccorpsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCorporationsNpccorpsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get corporations npccorps gateway timeout response has a 2xx status code
func (o *GetCorporationsNpccorpsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations npccorps gateway timeout response has a 3xx status code
func (o *GetCorporationsNpccorpsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations npccorps gateway timeout response has a 4xx status code
func (o *GetCorporationsNpccorpsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations npccorps gateway timeout response has a 5xx status code
func (o *GetCorporationsNpccorpsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations npccorps gateway timeout response a status code equal to that given
func (o *GetCorporationsNpccorpsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get corporations npccorps gateway timeout response
func (o *GetCorporationsNpccorpsGatewayTimeout) Code() int {
	return 504
}

func (o *GetCorporationsNpccorpsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsNpccorpsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v2/corporations/npccorps/][%d] getCorporationsNpccorpsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsNpccorpsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCorporationsNpccorpsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
