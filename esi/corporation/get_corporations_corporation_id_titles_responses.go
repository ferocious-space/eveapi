// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCorporationsCorporationIDTitlesReader is a Reader for the GetCorporationsCorporationIDTitles structure.
type GetCorporationsCorporationIDTitlesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDTitlesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCorporationsCorporationIDTitlesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCorporationsCorporationIDTitlesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCorporationsCorporationIDTitlesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCorporationsCorporationIDTitlesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCorporationsCorporationIDTitlesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCorporationsCorporationIDTitlesEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCorporationsCorporationIDTitlesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCorporationsCorporationIDTitlesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCorporationsCorporationIDTitlesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v2/corporations/{corporation_id}/titles/] get_corporations_corporation_id_titles", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDTitlesOK creates a GetCorporationsCorporationIDTitlesOK with default headers values
func NewGetCorporationsCorporationIDTitlesOK() *GetCorporationsCorporationIDTitlesOK {
	return &GetCorporationsCorporationIDTitlesOK{}
}

/*
GetCorporationsCorporationIDTitlesOK describes a response with status code 200, with default header values.

A list of titles
*/
type GetCorporationsCorporationIDTitlesOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetCorporationsCorporationIDTitlesOKBodyItems0
}

// IsSuccess returns true when this get corporations corporation Id titles o k response has a 2xx status code
func (o *GetCorporationsCorporationIDTitlesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get corporations corporation Id titles o k response has a 3xx status code
func (o *GetCorporationsCorporationIDTitlesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id titles o k response has a 4xx status code
func (o *GetCorporationsCorporationIDTitlesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id titles o k response has a 5xx status code
func (o *GetCorporationsCorporationIDTitlesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id titles o k response a status code equal to that given
func (o *GetCorporationsCorporationIDTitlesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get corporations corporation Id titles o k response
func (o *GetCorporationsCorporationIDTitlesOK) Code() int {
	return 200
}

func (o *GetCorporationsCorporationIDTitlesOK) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesOK) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesOK) GetPayload() []*GetCorporationsCorporationIDTitlesOKBodyItems0 {
	return o.Payload
}

func (o *GetCorporationsCorporationIDTitlesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesNotModified creates a GetCorporationsCorporationIDTitlesNotModified with default headers values
func NewGetCorporationsCorporationIDTitlesNotModified() *GetCorporationsCorporationIDTitlesNotModified {
	return &GetCorporationsCorporationIDTitlesNotModified{}
}

/*
GetCorporationsCorporationIDTitlesNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCorporationsCorporationIDTitlesNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get corporations corporation Id titles not modified response has a 2xx status code
func (o *GetCorporationsCorporationIDTitlesNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id titles not modified response has a 3xx status code
func (o *GetCorporationsCorporationIDTitlesNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get corporations corporation Id titles not modified response has a 4xx status code
func (o *GetCorporationsCorporationIDTitlesNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id titles not modified response has a 5xx status code
func (o *GetCorporationsCorporationIDTitlesNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id titles not modified response a status code equal to that given
func (o *GetCorporationsCorporationIDTitlesNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get corporations corporation Id titles not modified response
func (o *GetCorporationsCorporationIDTitlesNotModified) Code() int {
	return 304
}

func (o *GetCorporationsCorporationIDTitlesNotModified) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesNotModified ", 304)
}

func (o *GetCorporationsCorporationIDTitlesNotModified) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesNotModified ", 304)
}

func (o *GetCorporationsCorporationIDTitlesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesBadRequest creates a GetCorporationsCorporationIDTitlesBadRequest with default headers values
func NewGetCorporationsCorporationIDTitlesBadRequest() *GetCorporationsCorporationIDTitlesBadRequest {
	return &GetCorporationsCorporationIDTitlesBadRequest{}
}

/*
GetCorporationsCorporationIDTitlesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCorporationsCorporationIDTitlesBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get corporations corporation Id titles bad request response has a 2xx status code
func (o *GetCorporationsCorporationIDTitlesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id titles bad request response has a 3xx status code
func (o *GetCorporationsCorporationIDTitlesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id titles bad request response has a 4xx status code
func (o *GetCorporationsCorporationIDTitlesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id titles bad request response has a 5xx status code
func (o *GetCorporationsCorporationIDTitlesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id titles bad request response a status code equal to that given
func (o *GetCorporationsCorporationIDTitlesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get corporations corporation Id titles bad request response
func (o *GetCorporationsCorporationIDTitlesBadRequest) Code() int {
	return 400
}

func (o *GetCorporationsCorporationIDTitlesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesBadRequest) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCorporationsCorporationIDTitlesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesUnauthorized creates a GetCorporationsCorporationIDTitlesUnauthorized with default headers values
func NewGetCorporationsCorporationIDTitlesUnauthorized() *GetCorporationsCorporationIDTitlesUnauthorized {
	return &GetCorporationsCorporationIDTitlesUnauthorized{}
}

/*
GetCorporationsCorporationIDTitlesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDTitlesUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get corporations corporation Id titles unauthorized response has a 2xx status code
func (o *GetCorporationsCorporationIDTitlesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id titles unauthorized response has a 3xx status code
func (o *GetCorporationsCorporationIDTitlesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id titles unauthorized response has a 4xx status code
func (o *GetCorporationsCorporationIDTitlesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id titles unauthorized response has a 5xx status code
func (o *GetCorporationsCorporationIDTitlesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id titles unauthorized response a status code equal to that given
func (o *GetCorporationsCorporationIDTitlesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get corporations corporation Id titles unauthorized response
func (o *GetCorporationsCorporationIDTitlesUnauthorized) Code() int {
	return 401
}

func (o *GetCorporationsCorporationIDTitlesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesUnauthorized) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCorporationsCorporationIDTitlesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesForbidden creates a GetCorporationsCorporationIDTitlesForbidden with default headers values
func NewGetCorporationsCorporationIDTitlesForbidden() *GetCorporationsCorporationIDTitlesForbidden {
	return &GetCorporationsCorporationIDTitlesForbidden{}
}

/*
GetCorporationsCorporationIDTitlesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCorporationsCorporationIDTitlesForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get corporations corporation Id titles forbidden response has a 2xx status code
func (o *GetCorporationsCorporationIDTitlesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id titles forbidden response has a 3xx status code
func (o *GetCorporationsCorporationIDTitlesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id titles forbidden response has a 4xx status code
func (o *GetCorporationsCorporationIDTitlesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id titles forbidden response has a 5xx status code
func (o *GetCorporationsCorporationIDTitlesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id titles forbidden response a status code equal to that given
func (o *GetCorporationsCorporationIDTitlesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get corporations corporation Id titles forbidden response
func (o *GetCorporationsCorporationIDTitlesForbidden) Code() int {
	return 403
}

func (o *GetCorporationsCorporationIDTitlesForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesForbidden) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCorporationsCorporationIDTitlesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesEnhanceYourCalm creates a GetCorporationsCorporationIDTitlesEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDTitlesEnhanceYourCalm() *GetCorporationsCorporationIDTitlesEnhanceYourCalm {
	return &GetCorporationsCorporationIDTitlesEnhanceYourCalm{}
}

/*
GetCorporationsCorporationIDTitlesEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCorporationsCorporationIDTitlesEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get corporations corporation Id titles enhance your calm response has a 2xx status code
func (o *GetCorporationsCorporationIDTitlesEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id titles enhance your calm response has a 3xx status code
func (o *GetCorporationsCorporationIDTitlesEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id titles enhance your calm response has a 4xx status code
func (o *GetCorporationsCorporationIDTitlesEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporations corporation Id titles enhance your calm response has a 5xx status code
func (o *GetCorporationsCorporationIDTitlesEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporations corporation Id titles enhance your calm response a status code equal to that given
func (o *GetCorporationsCorporationIDTitlesEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get corporations corporation Id titles enhance your calm response
func (o *GetCorporationsCorporationIDTitlesEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetCorporationsCorporationIDTitlesEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCorporationsCorporationIDTitlesEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesInternalServerError creates a GetCorporationsCorporationIDTitlesInternalServerError with default headers values
func NewGetCorporationsCorporationIDTitlesInternalServerError() *GetCorporationsCorporationIDTitlesInternalServerError {
	return &GetCorporationsCorporationIDTitlesInternalServerError{}
}

/*
GetCorporationsCorporationIDTitlesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCorporationsCorporationIDTitlesInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get corporations corporation Id titles internal server error response has a 2xx status code
func (o *GetCorporationsCorporationIDTitlesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id titles internal server error response has a 3xx status code
func (o *GetCorporationsCorporationIDTitlesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id titles internal server error response has a 4xx status code
func (o *GetCorporationsCorporationIDTitlesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id titles internal server error response has a 5xx status code
func (o *GetCorporationsCorporationIDTitlesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id titles internal server error response a status code equal to that given
func (o *GetCorporationsCorporationIDTitlesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get corporations corporation Id titles internal server error response
func (o *GetCorporationsCorporationIDTitlesInternalServerError) Code() int {
	return 500
}

func (o *GetCorporationsCorporationIDTitlesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCorporationsCorporationIDTitlesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesServiceUnavailable creates a GetCorporationsCorporationIDTitlesServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDTitlesServiceUnavailable() *GetCorporationsCorporationIDTitlesServiceUnavailable {
	return &GetCorporationsCorporationIDTitlesServiceUnavailable{}
}

/*
GetCorporationsCorporationIDTitlesServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDTitlesServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get corporations corporation Id titles service unavailable response has a 2xx status code
func (o *GetCorporationsCorporationIDTitlesServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id titles service unavailable response has a 3xx status code
func (o *GetCorporationsCorporationIDTitlesServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id titles service unavailable response has a 4xx status code
func (o *GetCorporationsCorporationIDTitlesServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id titles service unavailable response has a 5xx status code
func (o *GetCorporationsCorporationIDTitlesServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id titles service unavailable response a status code equal to that given
func (o *GetCorporationsCorporationIDTitlesServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get corporations corporation Id titles service unavailable response
func (o *GetCorporationsCorporationIDTitlesServiceUnavailable) Code() int {
	return 503
}

func (o *GetCorporationsCorporationIDTitlesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCorporationsCorporationIDTitlesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesGatewayTimeout creates a GetCorporationsCorporationIDTitlesGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDTitlesGatewayTimeout() *GetCorporationsCorporationIDTitlesGatewayTimeout {
	return &GetCorporationsCorporationIDTitlesGatewayTimeout{}
}

/*
GetCorporationsCorporationIDTitlesGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDTitlesGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get corporations corporation Id titles gateway timeout response has a 2xx status code
func (o *GetCorporationsCorporationIDTitlesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporations corporation Id titles gateway timeout response has a 3xx status code
func (o *GetCorporationsCorporationIDTitlesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporations corporation Id titles gateway timeout response has a 4xx status code
func (o *GetCorporationsCorporationIDTitlesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporations corporation Id titles gateway timeout response has a 5xx status code
func (o *GetCorporationsCorporationIDTitlesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporations corporation Id titles gateway timeout response a status code equal to that given
func (o *GetCorporationsCorporationIDTitlesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get corporations corporation Id titles gateway timeout response
func (o *GetCorporationsCorporationIDTitlesGatewayTimeout) Code() int {
	return 504
}

func (o *GetCorporationsCorporationIDTitlesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v2/corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCorporationsCorporationIDTitlesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCorporationsCorporationIDTitlesOKBodyItems0 get_corporations_corporation_id_titles_200_ok
//
// 200 ok object
swagger:model GetCorporationsCorporationIDTitlesOKBodyItems0
*/
type GetCorporationsCorporationIDTitlesOKBodyItems0 struct {

	// get_corporations_corporation_id_titles_grantable_roles
	//
	// grantable_roles array
	// Max Items: 50
	GrantableRoles []string `json:"grantable_roles"`

	// get_corporations_corporation_id_titles_grantable_roles_at_base
	//
	// grantable_roles_at_base array
	// Max Items: 50
	GrantableRolesAtBase []string `json:"grantable_roles_at_base"`

	// get_corporations_corporation_id_titles_grantable_roles_at_hq
	//
	// grantable_roles_at_hq array
	// Max Items: 50
	GrantableRolesAtHq []string `json:"grantable_roles_at_hq"`

	// get_corporations_corporation_id_titles_grantable_roles_at_other
	//
	// grantable_roles_at_other array
	// Max Items: 50
	GrantableRolesAtOther []string `json:"grantable_roles_at_other"`

	// get_corporations_corporation_id_titles_name
	//
	// name string
	Name string `json:"name,omitempty"`

	// get_corporations_corporation_id_titles_roles
	//
	// roles array
	// Max Items: 50
	Roles []string `json:"roles"`

	// get_corporations_corporation_id_titles_roles_at_base
	//
	// roles_at_base array
	// Max Items: 50
	RolesAtBase []string `json:"roles_at_base"`

	// get_corporations_corporation_id_titles_roles_at_hq
	//
	// roles_at_hq array
	// Max Items: 50
	RolesAtHq []string `json:"roles_at_hq"`

	// get_corporations_corporation_id_titles_roles_at_other
	//
	// roles_at_other array
	// Max Items: 50
	RolesAtOther []string `json:"roles_at_other"`

	// get_corporations_corporation_id_titles_title_id
	//
	// title_id integer
	TitleID int32 `json:"title_id,omitempty"`
}

// Validate validates this get corporations corporation ID titles o k body items0
func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateGrantableRoles(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGrantableRolesAtBase(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGrantableRolesAtHq(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGrantableRolesAtOther(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRoles(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRolesAtBase(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRolesAtHq(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRolesAtOther(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Accountant","Auditor","Communications_Officer","Config_Equipment","Config_Starbase_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Contract_Manager","Diplomat","Director","Factory_Manager","Fitting_Manager","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Junior_Accountant","Personnel_Manager","Rent_Factory_Facility","Rent_Office","Rent_Research_Facility","Security_Officer","Starbase_Defense_Operator","Starbase_Fuel_Technician","Station_Manager","Trader"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesItemsEnum = append(getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesItemsEnum, v)
	}
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateGrantableRolesItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateGrantableRoles(formats strfmt.Registry) error {
	if swag.IsZero(o.GrantableRoles) { // not required
		return nil
	}

	iGrantableRolesSize := int64(len(o.GrantableRoles))

	if err := validate.MaxItems("grantable_roles", "body", iGrantableRolesSize, 50); err != nil {
		return err
	}

	for i := 0; i < len(o.GrantableRoles); i++ {

		// value enum
		if err := o.validateGrantableRolesItemsEnum("grantable_roles"+"."+strconv.Itoa(i), "body", o.GrantableRoles[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesAtBaseItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Accountant","Auditor","Communications_Officer","Config_Equipment","Config_Starbase_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Contract_Manager","Diplomat","Director","Factory_Manager","Fitting_Manager","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Junior_Accountant","Personnel_Manager","Rent_Factory_Facility","Rent_Office","Rent_Research_Facility","Security_Officer","Starbase_Defense_Operator","Starbase_Fuel_Technician","Station_Manager","Trader"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesAtBaseItemsEnum = append(getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesAtBaseItemsEnum, v)
	}
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateGrantableRolesAtBaseItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesAtBaseItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateGrantableRolesAtBase(formats strfmt.Registry) error {
	if swag.IsZero(o.GrantableRolesAtBase) { // not required
		return nil
	}

	iGrantableRolesAtBaseSize := int64(len(o.GrantableRolesAtBase))

	if err := validate.MaxItems("grantable_roles_at_base", "body", iGrantableRolesAtBaseSize, 50); err != nil {
		return err
	}

	for i := 0; i < len(o.GrantableRolesAtBase); i++ {

		// value enum
		if err := o.validateGrantableRolesAtBaseItemsEnum("grantable_roles_at_base"+"."+strconv.Itoa(i), "body", o.GrantableRolesAtBase[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesAtHqItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Accountant","Auditor","Communications_Officer","Config_Equipment","Config_Starbase_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Contract_Manager","Diplomat","Director","Factory_Manager","Fitting_Manager","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Junior_Accountant","Personnel_Manager","Rent_Factory_Facility","Rent_Office","Rent_Research_Facility","Security_Officer","Starbase_Defense_Operator","Starbase_Fuel_Technician","Station_Manager","Trader"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesAtHqItemsEnum = append(getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesAtHqItemsEnum, v)
	}
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateGrantableRolesAtHqItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesAtHqItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateGrantableRolesAtHq(formats strfmt.Registry) error {
	if swag.IsZero(o.GrantableRolesAtHq) { // not required
		return nil
	}

	iGrantableRolesAtHqSize := int64(len(o.GrantableRolesAtHq))

	if err := validate.MaxItems("grantable_roles_at_hq", "body", iGrantableRolesAtHqSize, 50); err != nil {
		return err
	}

	for i := 0; i < len(o.GrantableRolesAtHq); i++ {

		// value enum
		if err := o.validateGrantableRolesAtHqItemsEnum("grantable_roles_at_hq"+"."+strconv.Itoa(i), "body", o.GrantableRolesAtHq[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesAtOtherItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Accountant","Auditor","Communications_Officer","Config_Equipment","Config_Starbase_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Contract_Manager","Diplomat","Director","Factory_Manager","Fitting_Manager","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Junior_Accountant","Personnel_Manager","Rent_Factory_Facility","Rent_Office","Rent_Research_Facility","Security_Officer","Starbase_Defense_Operator","Starbase_Fuel_Technician","Station_Manager","Trader"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesAtOtherItemsEnum = append(getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesAtOtherItemsEnum, v)
	}
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateGrantableRolesAtOtherItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdTitlesOKBodyItems0GrantableRolesAtOtherItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateGrantableRolesAtOther(formats strfmt.Registry) error {
	if swag.IsZero(o.GrantableRolesAtOther) { // not required
		return nil
	}

	iGrantableRolesAtOtherSize := int64(len(o.GrantableRolesAtOther))

	if err := validate.MaxItems("grantable_roles_at_other", "body", iGrantableRolesAtOtherSize, 50); err != nil {
		return err
	}

	for i := 0; i < len(o.GrantableRolesAtOther); i++ {

		// value enum
		if err := o.validateGrantableRolesAtOtherItemsEnum("grantable_roles_at_other"+"."+strconv.Itoa(i), "body", o.GrantableRolesAtOther[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdTitlesOKBodyItems0RolesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Accountant","Auditor","Communications_Officer","Config_Equipment","Config_Starbase_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Contract_Manager","Diplomat","Director","Factory_Manager","Fitting_Manager","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Junior_Accountant","Personnel_Manager","Rent_Factory_Facility","Rent_Office","Rent_Research_Facility","Security_Officer","Starbase_Defense_Operator","Starbase_Fuel_Technician","Station_Manager","Trader"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdTitlesOKBodyItems0RolesItemsEnum = append(getCorporationsCorporationIdTitlesOKBodyItems0RolesItemsEnum, v)
	}
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateRolesItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdTitlesOKBodyItems0RolesItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateRoles(formats strfmt.Registry) error {
	if swag.IsZero(o.Roles) { // not required
		return nil
	}

	iRolesSize := int64(len(o.Roles))

	if err := validate.MaxItems("roles", "body", iRolesSize, 50); err != nil {
		return err
	}

	for i := 0; i < len(o.Roles); i++ {

		// value enum
		if err := o.validateRolesItemsEnum("roles"+"."+strconv.Itoa(i), "body", o.Roles[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdTitlesOKBodyItems0RolesAtBaseItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Accountant","Auditor","Communications_Officer","Config_Equipment","Config_Starbase_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Contract_Manager","Diplomat","Director","Factory_Manager","Fitting_Manager","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Junior_Accountant","Personnel_Manager","Rent_Factory_Facility","Rent_Office","Rent_Research_Facility","Security_Officer","Starbase_Defense_Operator","Starbase_Fuel_Technician","Station_Manager","Trader"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdTitlesOKBodyItems0RolesAtBaseItemsEnum = append(getCorporationsCorporationIdTitlesOKBodyItems0RolesAtBaseItemsEnum, v)
	}
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateRolesAtBaseItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdTitlesOKBodyItems0RolesAtBaseItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateRolesAtBase(formats strfmt.Registry) error {
	if swag.IsZero(o.RolesAtBase) { // not required
		return nil
	}

	iRolesAtBaseSize := int64(len(o.RolesAtBase))

	if err := validate.MaxItems("roles_at_base", "body", iRolesAtBaseSize, 50); err != nil {
		return err
	}

	for i := 0; i < len(o.RolesAtBase); i++ {

		// value enum
		if err := o.validateRolesAtBaseItemsEnum("roles_at_base"+"."+strconv.Itoa(i), "body", o.RolesAtBase[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdTitlesOKBodyItems0RolesAtHqItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Accountant","Auditor","Communications_Officer","Config_Equipment","Config_Starbase_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Contract_Manager","Diplomat","Director","Factory_Manager","Fitting_Manager","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Junior_Accountant","Personnel_Manager","Rent_Factory_Facility","Rent_Office","Rent_Research_Facility","Security_Officer","Starbase_Defense_Operator","Starbase_Fuel_Technician","Station_Manager","Trader"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdTitlesOKBodyItems0RolesAtHqItemsEnum = append(getCorporationsCorporationIdTitlesOKBodyItems0RolesAtHqItemsEnum, v)
	}
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateRolesAtHqItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdTitlesOKBodyItems0RolesAtHqItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateRolesAtHq(formats strfmt.Registry) error {
	if swag.IsZero(o.RolesAtHq) { // not required
		return nil
	}

	iRolesAtHqSize := int64(len(o.RolesAtHq))

	if err := validate.MaxItems("roles_at_hq", "body", iRolesAtHqSize, 50); err != nil {
		return err
	}

	for i := 0; i < len(o.RolesAtHq); i++ {

		// value enum
		if err := o.validateRolesAtHqItemsEnum("roles_at_hq"+"."+strconv.Itoa(i), "body", o.RolesAtHq[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdTitlesOKBodyItems0RolesAtOtherItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Accountant","Auditor","Communications_Officer","Config_Equipment","Config_Starbase_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Contract_Manager","Diplomat","Director","Factory_Manager","Fitting_Manager","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Junior_Accountant","Personnel_Manager","Rent_Factory_Facility","Rent_Office","Rent_Research_Facility","Security_Officer","Starbase_Defense_Operator","Starbase_Fuel_Technician","Station_Manager","Trader"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdTitlesOKBodyItems0RolesAtOtherItemsEnum = append(getCorporationsCorporationIdTitlesOKBodyItems0RolesAtOtherItemsEnum, v)
	}
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateRolesAtOtherItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdTitlesOKBodyItems0RolesAtOtherItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) validateRolesAtOther(formats strfmt.Registry) error {
	if swag.IsZero(o.RolesAtOther) { // not required
		return nil
	}

	iRolesAtOtherSize := int64(len(o.RolesAtOther))

	if err := validate.MaxItems("roles_at_other", "body", iRolesAtOtherSize, 50); err != nil {
		return err
	}

	for i := 0; i < len(o.RolesAtOther); i++ {

		// value enum
		if err := o.validateRolesAtOtherItemsEnum("roles_at_other"+"."+strconv.Itoa(i), "body", o.RolesAtOther[i]); err != nil {
			return err
		}

	}

	return nil
}

// ContextValidate validates this get corporations corporation ID titles o k body items0 based on context it is used
func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDTitlesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDTitlesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
