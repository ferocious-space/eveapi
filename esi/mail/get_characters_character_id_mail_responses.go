// Code generated by go-swagger; DO NOT EDIT.

package mail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCharactersCharacterIDMailReader is a Reader for the GetCharactersCharacterIDMail structure.
type GetCharactersCharacterIDMailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDMailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCharactersCharacterIDMailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCharactersCharacterIDMailNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCharactersCharacterIDMailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCharactersCharacterIDMailUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCharactersCharacterIDMailForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCharactersCharacterIDMailEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCharactersCharacterIDMailInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCharactersCharacterIDMailServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCharactersCharacterIDMailGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCharactersCharacterIDMailOK creates a GetCharactersCharacterIDMailOK with default headers values
func NewGetCharactersCharacterIDMailOK() *GetCharactersCharacterIDMailOK {
	return &GetCharactersCharacterIDMailOK{}
}

/* GetCharactersCharacterIDMailOK describes a response with status code 200, with default header values.

The requested mail
*/
type GetCharactersCharacterIDMailOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetCharactersCharacterIDMailOKBodyItems0
}

func (o *GetCharactersCharacterIDMailOK) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/][%d] getCharactersCharacterIdMailOK  %+v", 200, o.Payload)
}
func (o *GetCharactersCharacterIDMailOK) GetPayload() []*GetCharactersCharacterIDMailOKBodyItems0 {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailNotModified creates a GetCharactersCharacterIDMailNotModified with default headers values
func NewGetCharactersCharacterIDMailNotModified() *GetCharactersCharacterIDMailNotModified {
	return &GetCharactersCharacterIDMailNotModified{}
}

/* GetCharactersCharacterIDMailNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCharactersCharacterIDMailNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDMailNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/][%d] getCharactersCharacterIdMailNotModified ", 304)
}

func (o *GetCharactersCharacterIDMailNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCharactersCharacterIDMailBadRequest creates a GetCharactersCharacterIDMailBadRequest with default headers values
func NewGetCharactersCharacterIDMailBadRequest() *GetCharactersCharacterIDMailBadRequest {
	return &GetCharactersCharacterIDMailBadRequest{}
}

/* GetCharactersCharacterIDMailBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCharactersCharacterIDMailBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDMailBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/][%d] getCharactersCharacterIdMailBadRequest  %+v", 400, o.Payload)
}
func (o *GetCharactersCharacterIDMailBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailUnauthorized creates a GetCharactersCharacterIDMailUnauthorized with default headers values
func NewGetCharactersCharacterIDMailUnauthorized() *GetCharactersCharacterIDMailUnauthorized {
	return &GetCharactersCharacterIDMailUnauthorized{}
}

/* GetCharactersCharacterIDMailUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCharactersCharacterIDMailUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDMailUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/][%d] getCharactersCharacterIdMailUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCharactersCharacterIDMailUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailForbidden creates a GetCharactersCharacterIDMailForbidden with default headers values
func NewGetCharactersCharacterIDMailForbidden() *GetCharactersCharacterIDMailForbidden {
	return &GetCharactersCharacterIDMailForbidden{}
}

/* GetCharactersCharacterIDMailForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCharactersCharacterIDMailForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDMailForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/][%d] getCharactersCharacterIdMailForbidden  %+v", 403, o.Payload)
}
func (o *GetCharactersCharacterIDMailForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailEnhanceYourCalm creates a GetCharactersCharacterIDMailEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDMailEnhanceYourCalm() *GetCharactersCharacterIDMailEnhanceYourCalm {
	return &GetCharactersCharacterIDMailEnhanceYourCalm{}
}

/* GetCharactersCharacterIDMailEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCharactersCharacterIDMailEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDMailEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/][%d] getCharactersCharacterIdMailEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetCharactersCharacterIDMailEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailInternalServerError creates a GetCharactersCharacterIDMailInternalServerError with default headers values
func NewGetCharactersCharacterIDMailInternalServerError() *GetCharactersCharacterIDMailInternalServerError {
	return &GetCharactersCharacterIDMailInternalServerError{}
}

/* GetCharactersCharacterIDMailInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCharactersCharacterIDMailInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDMailInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/][%d] getCharactersCharacterIdMailInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCharactersCharacterIDMailInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailServiceUnavailable creates a GetCharactersCharacterIDMailServiceUnavailable with default headers values
func NewGetCharactersCharacterIDMailServiceUnavailable() *GetCharactersCharacterIDMailServiceUnavailable {
	return &GetCharactersCharacterIDMailServiceUnavailable{}
}

/* GetCharactersCharacterIDMailServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCharactersCharacterIDMailServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDMailServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/][%d] getCharactersCharacterIdMailServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetCharactersCharacterIDMailServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailGatewayTimeout creates a GetCharactersCharacterIDMailGatewayTimeout with default headers values
func NewGetCharactersCharacterIDMailGatewayTimeout() *GetCharactersCharacterIDMailGatewayTimeout {
	return &GetCharactersCharacterIDMailGatewayTimeout{}
}

/* GetCharactersCharacterIDMailGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDMailGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDMailGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/][%d] getCharactersCharacterIdMailGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetCharactersCharacterIDMailGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDMailOKBodyItems0 get_characters_character_id_mail_200_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDMailOKBodyItems0
*/
type GetCharactersCharacterIDMailOKBodyItems0 struct {

	// get_characters_character_id_mail_from
	//
	// From whom the mail was sent
	From int32 `json:"from,omitempty"`

	// get_characters_character_id_mail_is_read
	//
	// is_read boolean
	IsRead bool `json:"is_read,omitempty"`

	// get_characters_character_id_mail_labels
	//
	// labels array
	// Max Items: 25
	// Unique: true
	Labels []int32 `json:"labels"`

	// get_characters_character_id_mail_mail_id
	//
	// mail_id integer
	MailID int32 `json:"mail_id,omitempty"`

	// get_characters_character_id_mail_recipients
	//
	// Recipients of the mail
	// Max Items: 52
	// Min Items: 0
	// Unique: true
	Recipients []*GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0 `json:"recipients"`

	// get_characters_character_id_mail_subject
	//
	// Mail subject
	Subject string `json:"subject,omitempty"`

	// get_characters_character_id_mail_timestamp
	//
	// When the mail was sent
	// Format: date-time
	Timestamp strfmt.DateTime `json:"timestamp,omitempty"`
}

// Validate validates this get characters character ID mail o k body items0
func (o *GetCharactersCharacterIDMailOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRecipients(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailOKBodyItems0) validateLabels(formats strfmt.Registry) error {
	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	iLabelsSize := int64(len(o.Labels))

	if err := validate.MaxItems("labels", "body", iLabelsSize, 25); err != nil {
		return err
	}

	if err := validate.UniqueItems("labels", "body", o.Labels); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDMailOKBodyItems0) validateRecipients(formats strfmt.Registry) error {
	if swag.IsZero(o.Recipients) { // not required
		return nil
	}

	iRecipientsSize := int64(len(o.Recipients))

	if err := validate.MinItems("recipients", "body", iRecipientsSize, 0); err != nil {
		return err
	}

	if err := validate.MaxItems("recipients", "body", iRecipientsSize, 52); err != nil {
		return err
	}

	if err := validate.UniqueItems("recipients", "body", o.Recipients); err != nil {
		return err
	}

	for i := 0; i < len(o.Recipients); i++ {
		if swag.IsZero(o.Recipients[i]) { // not required
			continue
		}

		if o.Recipients[i] != nil {
			if err := o.Recipients[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("recipients" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetCharactersCharacterIDMailOKBodyItems0) validateTimestamp(formats strfmt.Registry) error {
	if swag.IsZero(o.Timestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("timestamp", "body", "date-time", o.Timestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this get characters character ID mail o k body items0 based on the context it is used
func (o *GetCharactersCharacterIDMailOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateRecipients(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailOKBodyItems0) contextValidateRecipients(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Recipients); i++ {

		if o.Recipients[i] != nil {
			if err := o.Recipients[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("recipients" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDMailOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0 get_characters_character_id_mail_recipient
//
// recipient object
swagger:model GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0
*/
type GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0 struct {

	// get_characters_character_id_mail_recipient_id
	//
	// recipient_id integer
	// Required: true
	RecipientID *int32 `json:"recipient_id"`

	// get_characters_character_id_mail_recipient_type
	//
	// recipient_type string
	// Required: true
	// Enum: [alliance character corporation mailing_list]
	RecipientType *string `json:"recipient_type"`
}

// Validate validates this get characters character ID mail o k body items0 recipients items0
func (o *GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRecipientID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRecipientType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0) validateRecipientID(formats strfmt.Registry) error {

	if err := validate.Required("recipient_id", "body", o.RecipientID); err != nil {
		return err
	}

	return nil
}

var getCharactersCharacterIdMailOKBodyItems0RecipientsItems0TypeRecipientTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["alliance","character","corporation","mailing_list"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCharactersCharacterIdMailOKBodyItems0RecipientsItems0TypeRecipientTypePropEnum = append(getCharactersCharacterIdMailOKBodyItems0RecipientsItems0TypeRecipientTypePropEnum, v)
	}
}

const (

	// GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0RecipientTypeAlliance captures enum value "alliance"
	GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0RecipientTypeAlliance string = "alliance"

	// GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0RecipientTypeCharacter captures enum value "character"
	GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0RecipientTypeCharacter string = "character"

	// GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0RecipientTypeCorporation captures enum value "corporation"
	GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0RecipientTypeCorporation string = "corporation"

	// GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0RecipientTypeMailingList captures enum value "mailing_list"
	GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0RecipientTypeMailingList string = "mailing_list"
)

// prop value enum
func (o *GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0) validateRecipientTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCharactersCharacterIdMailOKBodyItems0RecipientsItems0TypeRecipientTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0) validateRecipientType(formats strfmt.Registry) error {

	if err := validate.Required("recipient_type", "body", o.RecipientType); err != nil {
		return err
	}

	// value enum
	if err := o.validateRecipientTypeEnum("recipient_type", "body", *o.RecipientType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID mail o k body items0 recipients items0 based on context it is used
func (o *GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDMailOKBodyItems0RecipientsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
