// Code generated by go-swagger; DO NOT EDIT.

package mail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCharactersCharacterIDMailLabelsReader is a Reader for the GetCharactersCharacterIDMailLabels structure.
type GetCharactersCharacterIDMailLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDMailLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCharactersCharacterIDMailLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCharactersCharacterIDMailLabelsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCharactersCharacterIDMailLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCharactersCharacterIDMailLabelsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCharactersCharacterIDMailLabelsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCharactersCharacterIDMailLabelsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCharactersCharacterIDMailLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCharactersCharacterIDMailLabelsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCharactersCharacterIDMailLabelsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCharactersCharacterIDMailLabelsOK creates a GetCharactersCharacterIDMailLabelsOK with default headers values
func NewGetCharactersCharacterIDMailLabelsOK() *GetCharactersCharacterIDMailLabelsOK {
	return &GetCharactersCharacterIDMailLabelsOK{}
}

/* GetCharactersCharacterIDMailLabelsOK describes a response with status code 200, with default header values.

A list of mail labels and unread counts
*/
type GetCharactersCharacterIDMailLabelsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetCharactersCharacterIDMailLabelsOKBody
}

func (o *GetCharactersCharacterIDMailLabelsOK) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/mail/labels/][%d] getCharactersCharacterIdMailLabelsOK  %+v", 200, o.Payload)
}
func (o *GetCharactersCharacterIDMailLabelsOK) GetPayload() *GetCharactersCharacterIDMailLabelsOKBody {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetCharactersCharacterIDMailLabelsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailLabelsNotModified creates a GetCharactersCharacterIDMailLabelsNotModified with default headers values
func NewGetCharactersCharacterIDMailLabelsNotModified() *GetCharactersCharacterIDMailLabelsNotModified {
	return &GetCharactersCharacterIDMailLabelsNotModified{}
}

/* GetCharactersCharacterIDMailLabelsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCharactersCharacterIDMailLabelsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDMailLabelsNotModified) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/mail/labels/][%d] getCharactersCharacterIdMailLabelsNotModified ", 304)
}

func (o *GetCharactersCharacterIDMailLabelsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCharactersCharacterIDMailLabelsBadRequest creates a GetCharactersCharacterIDMailLabelsBadRequest with default headers values
func NewGetCharactersCharacterIDMailLabelsBadRequest() *GetCharactersCharacterIDMailLabelsBadRequest {
	return &GetCharactersCharacterIDMailLabelsBadRequest{}
}

/* GetCharactersCharacterIDMailLabelsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCharactersCharacterIDMailLabelsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDMailLabelsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/mail/labels/][%d] getCharactersCharacterIdMailLabelsBadRequest  %+v", 400, o.Payload)
}
func (o *GetCharactersCharacterIDMailLabelsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailLabelsUnauthorized creates a GetCharactersCharacterIDMailLabelsUnauthorized with default headers values
func NewGetCharactersCharacterIDMailLabelsUnauthorized() *GetCharactersCharacterIDMailLabelsUnauthorized {
	return &GetCharactersCharacterIDMailLabelsUnauthorized{}
}

/* GetCharactersCharacterIDMailLabelsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCharactersCharacterIDMailLabelsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDMailLabelsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/mail/labels/][%d] getCharactersCharacterIdMailLabelsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCharactersCharacterIDMailLabelsUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailLabelsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailLabelsForbidden creates a GetCharactersCharacterIDMailLabelsForbidden with default headers values
func NewGetCharactersCharacterIDMailLabelsForbidden() *GetCharactersCharacterIDMailLabelsForbidden {
	return &GetCharactersCharacterIDMailLabelsForbidden{}
}

/* GetCharactersCharacterIDMailLabelsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCharactersCharacterIDMailLabelsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDMailLabelsForbidden) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/mail/labels/][%d] getCharactersCharacterIdMailLabelsForbidden  %+v", 403, o.Payload)
}
func (o *GetCharactersCharacterIDMailLabelsForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailLabelsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailLabelsEnhanceYourCalm creates a GetCharactersCharacterIDMailLabelsEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDMailLabelsEnhanceYourCalm() *GetCharactersCharacterIDMailLabelsEnhanceYourCalm {
	return &GetCharactersCharacterIDMailLabelsEnhanceYourCalm{}
}

/* GetCharactersCharacterIDMailLabelsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCharactersCharacterIDMailLabelsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDMailLabelsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/mail/labels/][%d] getCharactersCharacterIdMailLabelsEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetCharactersCharacterIDMailLabelsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailLabelsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailLabelsInternalServerError creates a GetCharactersCharacterIDMailLabelsInternalServerError with default headers values
func NewGetCharactersCharacterIDMailLabelsInternalServerError() *GetCharactersCharacterIDMailLabelsInternalServerError {
	return &GetCharactersCharacterIDMailLabelsInternalServerError{}
}

/* GetCharactersCharacterIDMailLabelsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCharactersCharacterIDMailLabelsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDMailLabelsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/mail/labels/][%d] getCharactersCharacterIdMailLabelsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCharactersCharacterIDMailLabelsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailLabelsServiceUnavailable creates a GetCharactersCharacterIDMailLabelsServiceUnavailable with default headers values
func NewGetCharactersCharacterIDMailLabelsServiceUnavailable() *GetCharactersCharacterIDMailLabelsServiceUnavailable {
	return &GetCharactersCharacterIDMailLabelsServiceUnavailable{}
}

/* GetCharactersCharacterIDMailLabelsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCharactersCharacterIDMailLabelsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDMailLabelsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/mail/labels/][%d] getCharactersCharacterIdMailLabelsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetCharactersCharacterIDMailLabelsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailLabelsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailLabelsGatewayTimeout creates a GetCharactersCharacterIDMailLabelsGatewayTimeout with default headers values
func NewGetCharactersCharacterIDMailLabelsGatewayTimeout() *GetCharactersCharacterIDMailLabelsGatewayTimeout {
	return &GetCharactersCharacterIDMailLabelsGatewayTimeout{}
}

/* GetCharactersCharacterIDMailLabelsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDMailLabelsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDMailLabelsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v3/characters/{character_id}/mail/labels/][%d] getCharactersCharacterIdMailLabelsGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetCharactersCharacterIDMailLabelsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailLabelsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDMailLabelsOKBody get_characters_character_id_mail_labels_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDMailLabelsOKBody
*/
type GetCharactersCharacterIDMailLabelsOKBody struct {

	// get_characters_character_id_mail_labels_labels
	//
	// labels array
	// Max Items: 30
	Labels []*GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0 `json:"labels"`

	// get_characters_character_id_mail_labels_total_unread_count
	//
	// total_unread_count integer
	// Minimum: 0
	TotalUnreadCount *int32 `json:"total_unread_count,omitempty"`
}

// Validate validates this get characters character ID mail labels o k body
func (o *GetCharactersCharacterIDMailLabelsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTotalUnreadCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailLabelsOKBody) validateLabels(formats strfmt.Registry) error {
	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	iLabelsSize := int64(len(o.Labels))

	if err := validate.MaxItems("getCharactersCharacterIdMailLabelsOK"+"."+"labels", "body", iLabelsSize, 30); err != nil {
		return err
	}

	for i := 0; i < len(o.Labels); i++ {
		if swag.IsZero(o.Labels[i]) { // not required
			continue
		}

		if o.Labels[i] != nil {
			if err := o.Labels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCharactersCharacterIdMailLabelsOK" + "." + "labels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetCharactersCharacterIDMailLabelsOKBody) validateTotalUnreadCount(formats strfmt.Registry) error {
	if swag.IsZero(o.TotalUnreadCount) { // not required
		return nil
	}

	if err := validate.MinimumInt("getCharactersCharacterIdMailLabelsOK"+"."+"total_unread_count", "body", int64(*o.TotalUnreadCount), 0, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this get characters character ID mail labels o k body based on the context it is used
func (o *GetCharactersCharacterIDMailLabelsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLabels(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailLabelsOKBody) contextValidateLabels(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Labels); i++ {

		if o.Labels[i] != nil {
			if err := o.Labels[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCharactersCharacterIdMailLabelsOK" + "." + "labels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailLabelsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailLabelsOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDMailLabelsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0 get_characters_character_id_mail_labels_label
//
// label object
swagger:model GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0
*/
type GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0 struct {

	// get_characters_character_id_mail_labels_color
	//
	// color string
	// Enum: [#0000fe #006634 #0099ff #00ff33 #01ffff #349800 #660066 #666666 #999999 #99ffff #9a0000 #ccff9a #e6e6e6 #fe0000 #ff6600 #ffff01 #ffffcd #ffffff]
	Color *string `json:"color,omitempty"`

	// get_characters_character_id_mail_labels_label_id
	//
	// label_id integer
	// Minimum: 0
	LabelID *int32 `json:"label_id,omitempty"`

	// get_characters_character_id_mail_labels_name
	//
	// name string
	// Max Length: 40
	Name string `json:"name,omitempty"`

	// get_characters_character_id_mail_labels_unread_count
	//
	// unread_count integer
	// Minimum: 0
	UnreadCount *int32 `json:"unread_count,omitempty"`
}

// Validate validates this get characters character ID mail labels o k body labels items0
func (o *GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateColor(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabelID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUnreadCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getCharactersCharacterIdMailLabelsOKBodyLabelsItems0TypeColorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["#0000fe","#006634","#0099ff","#00ff33","#01ffff","#349800","#660066","#666666","#999999","#99ffff","#9a0000","#ccff9a","#e6e6e6","#fe0000","#ff6600","#ffff01","#ffffcd","#ffffff"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCharactersCharacterIdMailLabelsOKBodyLabelsItems0TypeColorPropEnum = append(getCharactersCharacterIdMailLabelsOKBodyLabelsItems0TypeColorPropEnum, v)
	}
}

const (

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag0000fe captures enum value "#0000fe"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag0000fe string = "#0000fe"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag006634 captures enum value "#006634"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag006634 string = "#006634"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag0099ff captures enum value "#0099ff"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag0099ff string = "#0099ff"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag00ff33 captures enum value "#00ff33"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag00ff33 string = "#00ff33"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag01ffff captures enum value "#01ffff"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag01ffff string = "#01ffff"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag349800 captures enum value "#349800"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag349800 string = "#349800"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag660066 captures enum value "#660066"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag660066 string = "#660066"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag666666 captures enum value "#666666"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag666666 string = "#666666"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag999999 captures enum value "#999999"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag999999 string = "#999999"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag99ffff captures enum value "#99ffff"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag99ffff string = "#99ffff"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag9a0000 captures enum value "#9a0000"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtag9a0000 string = "#9a0000"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagCcff9a captures enum value "#ccff9a"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagCcff9a string = "#ccff9a"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagE6e6e6 captures enum value "#e6e6e6"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagE6e6e6 string = "#e6e6e6"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagFe0000 captures enum value "#fe0000"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagFe0000 string = "#fe0000"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagFf6600 captures enum value "#ff6600"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagFf6600 string = "#ff6600"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagFfff01 captures enum value "#ffff01"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagFfff01 string = "#ffff01"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagFfffcd captures enum value "#ffffcd"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagFfffcd string = "#ffffcd"

	// GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagFfffff captures enum value "#ffffff"
	GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0ColorHashtagFfffff string = "#ffffff"
)

// prop value enum
func (o *GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0) validateColorEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCharactersCharacterIdMailLabelsOKBodyLabelsItems0TypeColorPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0) validateColor(formats strfmt.Registry) error {
	if swag.IsZero(o.Color) { // not required
		return nil
	}

	// value enum
	if err := o.validateColorEnum("color", "body", *o.Color); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0) validateLabelID(formats strfmt.Registry) error {
	if swag.IsZero(o.LabelID) { // not required
		return nil
	}

	if err := validate.MinimumInt("label_id", "body", int64(*o.LabelID), 0, false); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0) validateName(formats strfmt.Registry) error {
	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if err := validate.MaxLength("name", "body", o.Name, 40); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0) validateUnreadCount(formats strfmt.Registry) error {
	if swag.IsZero(o.UnreadCount) { // not required
		return nil
	}

	if err := validate.MinimumInt("unread_count", "body", int64(*o.UnreadCount), 0, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID mail labels o k body labels items0 based on context it is used
func (o *GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDMailLabelsOKBodyLabelsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
