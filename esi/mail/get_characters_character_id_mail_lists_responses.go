// Code generated by go-swagger; DO NOT EDIT.

package mail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCharactersCharacterIDMailListsReader is a Reader for the GetCharactersCharacterIDMailLists structure.
type GetCharactersCharacterIDMailListsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDMailListsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCharactersCharacterIDMailListsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCharactersCharacterIDMailListsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCharactersCharacterIDMailListsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCharactersCharacterIDMailListsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCharactersCharacterIDMailListsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCharactersCharacterIDMailListsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCharactersCharacterIDMailListsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCharactersCharacterIDMailListsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCharactersCharacterIDMailListsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCharactersCharacterIDMailListsOK creates a GetCharactersCharacterIDMailListsOK with default headers values
func NewGetCharactersCharacterIDMailListsOK() *GetCharactersCharacterIDMailListsOK {
	return &GetCharactersCharacterIDMailListsOK{}
}

/*
GetCharactersCharacterIDMailListsOK describes a response with status code 200, with default header values.

Mailing lists
*/
type GetCharactersCharacterIDMailListsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetCharactersCharacterIDMailListsOKBodyItems0
}

// IsSuccess returns true when this get characters character Id mail lists o k response has a 2xx status code
func (o *GetCharactersCharacterIDMailListsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get characters character Id mail lists o k response has a 3xx status code
func (o *GetCharactersCharacterIDMailListsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id mail lists o k response has a 4xx status code
func (o *GetCharactersCharacterIDMailListsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id mail lists o k response has a 5xx status code
func (o *GetCharactersCharacterIDMailListsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id mail lists o k response a status code equal to that given
func (o *GetCharactersCharacterIDMailListsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get characters character Id mail lists o k response
func (o *GetCharactersCharacterIDMailListsOK) Code() int {
	return 200
}

func (o *GetCharactersCharacterIDMailListsOK) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsOK) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsOK) GetPayload() []*GetCharactersCharacterIDMailListsOKBodyItems0 {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailListsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailListsNotModified creates a GetCharactersCharacterIDMailListsNotModified with default headers values
func NewGetCharactersCharacterIDMailListsNotModified() *GetCharactersCharacterIDMailListsNotModified {
	return &GetCharactersCharacterIDMailListsNotModified{}
}

/*
GetCharactersCharacterIDMailListsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCharactersCharacterIDMailListsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get characters character Id mail lists not modified response has a 2xx status code
func (o *GetCharactersCharacterIDMailListsNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id mail lists not modified response has a 3xx status code
func (o *GetCharactersCharacterIDMailListsNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get characters character Id mail lists not modified response has a 4xx status code
func (o *GetCharactersCharacterIDMailListsNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id mail lists not modified response has a 5xx status code
func (o *GetCharactersCharacterIDMailListsNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id mail lists not modified response a status code equal to that given
func (o *GetCharactersCharacterIDMailListsNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get characters character Id mail lists not modified response
func (o *GetCharactersCharacterIDMailListsNotModified) Code() int {
	return 304
}

func (o *GetCharactersCharacterIDMailListsNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsNotModified ", 304)
}

func (o *GetCharactersCharacterIDMailListsNotModified) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsNotModified ", 304)
}

func (o *GetCharactersCharacterIDMailListsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCharactersCharacterIDMailListsBadRequest creates a GetCharactersCharacterIDMailListsBadRequest with default headers values
func NewGetCharactersCharacterIDMailListsBadRequest() *GetCharactersCharacterIDMailListsBadRequest {
	return &GetCharactersCharacterIDMailListsBadRequest{}
}

/*
GetCharactersCharacterIDMailListsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCharactersCharacterIDMailListsBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get characters character Id mail lists bad request response has a 2xx status code
func (o *GetCharactersCharacterIDMailListsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id mail lists bad request response has a 3xx status code
func (o *GetCharactersCharacterIDMailListsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id mail lists bad request response has a 4xx status code
func (o *GetCharactersCharacterIDMailListsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id mail lists bad request response has a 5xx status code
func (o *GetCharactersCharacterIDMailListsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id mail lists bad request response a status code equal to that given
func (o *GetCharactersCharacterIDMailListsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get characters character Id mail lists bad request response
func (o *GetCharactersCharacterIDMailListsBadRequest) Code() int {
	return 400
}

func (o *GetCharactersCharacterIDMailListsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailListsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailListsUnauthorized creates a GetCharactersCharacterIDMailListsUnauthorized with default headers values
func NewGetCharactersCharacterIDMailListsUnauthorized() *GetCharactersCharacterIDMailListsUnauthorized {
	return &GetCharactersCharacterIDMailListsUnauthorized{}
}

/*
GetCharactersCharacterIDMailListsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCharactersCharacterIDMailListsUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get characters character Id mail lists unauthorized response has a 2xx status code
func (o *GetCharactersCharacterIDMailListsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id mail lists unauthorized response has a 3xx status code
func (o *GetCharactersCharacterIDMailListsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id mail lists unauthorized response has a 4xx status code
func (o *GetCharactersCharacterIDMailListsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id mail lists unauthorized response has a 5xx status code
func (o *GetCharactersCharacterIDMailListsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id mail lists unauthorized response a status code equal to that given
func (o *GetCharactersCharacterIDMailListsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get characters character Id mail lists unauthorized response
func (o *GetCharactersCharacterIDMailListsUnauthorized) Code() int {
	return 401
}

func (o *GetCharactersCharacterIDMailListsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailListsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailListsForbidden creates a GetCharactersCharacterIDMailListsForbidden with default headers values
func NewGetCharactersCharacterIDMailListsForbidden() *GetCharactersCharacterIDMailListsForbidden {
	return &GetCharactersCharacterIDMailListsForbidden{}
}

/*
GetCharactersCharacterIDMailListsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCharactersCharacterIDMailListsForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get characters character Id mail lists forbidden response has a 2xx status code
func (o *GetCharactersCharacterIDMailListsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id mail lists forbidden response has a 3xx status code
func (o *GetCharactersCharacterIDMailListsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id mail lists forbidden response has a 4xx status code
func (o *GetCharactersCharacterIDMailListsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id mail lists forbidden response has a 5xx status code
func (o *GetCharactersCharacterIDMailListsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id mail lists forbidden response a status code equal to that given
func (o *GetCharactersCharacterIDMailListsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get characters character Id mail lists forbidden response
func (o *GetCharactersCharacterIDMailListsForbidden) Code() int {
	return 403
}

func (o *GetCharactersCharacterIDMailListsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailListsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailListsEnhanceYourCalm creates a GetCharactersCharacterIDMailListsEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDMailListsEnhanceYourCalm() *GetCharactersCharacterIDMailListsEnhanceYourCalm {
	return &GetCharactersCharacterIDMailListsEnhanceYourCalm{}
}

/*
GetCharactersCharacterIDMailListsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCharactersCharacterIDMailListsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get characters character Id mail lists enhance your calm response has a 2xx status code
func (o *GetCharactersCharacterIDMailListsEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id mail lists enhance your calm response has a 3xx status code
func (o *GetCharactersCharacterIDMailListsEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id mail lists enhance your calm response has a 4xx status code
func (o *GetCharactersCharacterIDMailListsEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get characters character Id mail lists enhance your calm response has a 5xx status code
func (o *GetCharactersCharacterIDMailListsEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get characters character Id mail lists enhance your calm response a status code equal to that given
func (o *GetCharactersCharacterIDMailListsEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get characters character Id mail lists enhance your calm response
func (o *GetCharactersCharacterIDMailListsEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetCharactersCharacterIDMailListsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailListsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailListsInternalServerError creates a GetCharactersCharacterIDMailListsInternalServerError with default headers values
func NewGetCharactersCharacterIDMailListsInternalServerError() *GetCharactersCharacterIDMailListsInternalServerError {
	return &GetCharactersCharacterIDMailListsInternalServerError{}
}

/*
GetCharactersCharacterIDMailListsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCharactersCharacterIDMailListsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get characters character Id mail lists internal server error response has a 2xx status code
func (o *GetCharactersCharacterIDMailListsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id mail lists internal server error response has a 3xx status code
func (o *GetCharactersCharacterIDMailListsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id mail lists internal server error response has a 4xx status code
func (o *GetCharactersCharacterIDMailListsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id mail lists internal server error response has a 5xx status code
func (o *GetCharactersCharacterIDMailListsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id mail lists internal server error response a status code equal to that given
func (o *GetCharactersCharacterIDMailListsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get characters character Id mail lists internal server error response
func (o *GetCharactersCharacterIDMailListsInternalServerError) Code() int {
	return 500
}

func (o *GetCharactersCharacterIDMailListsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailListsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailListsServiceUnavailable creates a GetCharactersCharacterIDMailListsServiceUnavailable with default headers values
func NewGetCharactersCharacterIDMailListsServiceUnavailable() *GetCharactersCharacterIDMailListsServiceUnavailable {
	return &GetCharactersCharacterIDMailListsServiceUnavailable{}
}

/*
GetCharactersCharacterIDMailListsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCharactersCharacterIDMailListsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get characters character Id mail lists service unavailable response has a 2xx status code
func (o *GetCharactersCharacterIDMailListsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id mail lists service unavailable response has a 3xx status code
func (o *GetCharactersCharacterIDMailListsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id mail lists service unavailable response has a 4xx status code
func (o *GetCharactersCharacterIDMailListsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id mail lists service unavailable response has a 5xx status code
func (o *GetCharactersCharacterIDMailListsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id mail lists service unavailable response a status code equal to that given
func (o *GetCharactersCharacterIDMailListsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get characters character Id mail lists service unavailable response
func (o *GetCharactersCharacterIDMailListsServiceUnavailable) Code() int {
	return 503
}

func (o *GetCharactersCharacterIDMailListsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailListsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailListsGatewayTimeout creates a GetCharactersCharacterIDMailListsGatewayTimeout with default headers values
func NewGetCharactersCharacterIDMailListsGatewayTimeout() *GetCharactersCharacterIDMailListsGatewayTimeout {
	return &GetCharactersCharacterIDMailListsGatewayTimeout{}
}

/*
GetCharactersCharacterIDMailListsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDMailListsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get characters character Id mail lists gateway timeout response has a 2xx status code
func (o *GetCharactersCharacterIDMailListsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get characters character Id mail lists gateway timeout response has a 3xx status code
func (o *GetCharactersCharacterIDMailListsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get characters character Id mail lists gateway timeout response has a 4xx status code
func (o *GetCharactersCharacterIDMailListsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get characters character Id mail lists gateway timeout response has a 5xx status code
func (o *GetCharactersCharacterIDMailListsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get characters character Id mail lists gateway timeout response a status code equal to that given
func (o *GetCharactersCharacterIDMailListsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get characters character Id mail lists gateway timeout response
func (o *GetCharactersCharacterIDMailListsGatewayTimeout) Code() int {
	return 504
}

func (o *GetCharactersCharacterIDMailListsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailListsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCharactersCharacterIDMailListsOKBodyItems0 get_characters_character_id_mail_lists_200_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDMailListsOKBodyItems0
*/
type GetCharactersCharacterIDMailListsOKBodyItems0 struct {

	// get_characters_character_id_mail_lists_mailing_list_id
	//
	// Mailing list ID
	// Required: true
	MailingListID *int32 `json:"mailing_list_id"`

	// get_characters_character_id_mail_lists_name
	//
	// name string
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this get characters character ID mail lists o k body items0
func (o *GetCharactersCharacterIDMailListsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMailingListID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailListsOKBodyItems0) validateMailingListID(formats strfmt.Registry) error {

	if err := validate.Required("mailing_list_id", "body", o.MailingListID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDMailListsOKBodyItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID mail lists o k body items0 based on context it is used
func (o *GetCharactersCharacterIDMailListsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailListsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailListsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDMailListsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
