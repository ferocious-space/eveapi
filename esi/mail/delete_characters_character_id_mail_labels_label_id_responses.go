// Code generated by go-swagger; DO NOT EDIT.

package mail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/ferocious-space/eveapi/models"
)

// DeleteCharactersCharacterIDMailLabelsLabelIDReader is a Reader for the DeleteCharactersCharacterIDMailLabelsLabelID structure.
type DeleteCharactersCharacterIDMailLabelsLabelIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteCharactersCharacterIDMailLabelsLabelIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCharactersCharacterIDMailLabelsLabelIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCharactersCharacterIDMailLabelsLabelIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewDeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/] delete_characters_character_id_mail_labels_label_id", response, response.Code())
	}
}

// NewDeleteCharactersCharacterIDMailLabelsLabelIDNoContent creates a DeleteCharactersCharacterIDMailLabelsLabelIDNoContent with default headers values
func NewDeleteCharactersCharacterIDMailLabelsLabelIDNoContent() *DeleteCharactersCharacterIDMailLabelsLabelIDNoContent {
	return &DeleteCharactersCharacterIDMailLabelsLabelIDNoContent{}
}

/*
DeleteCharactersCharacterIDMailLabelsLabelIDNoContent describes a response with status code 204, with default header values.

Label deleted
*/
type DeleteCharactersCharacterIDMailLabelsLabelIDNoContent struct {
}

// IsSuccess returns true when this delete characters character Id mail labels label Id no content response has a 2xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete characters character Id mail labels label Id no content response has a 3xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id mail labels label Id no content response has a 4xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete characters character Id mail labels label Id no content response has a 5xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete characters character Id mail labels label Id no content response a status code equal to that given
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete characters character Id mail labels label Id no content response
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDNoContent) Code() int {
	return 204
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdNoContent ", 204)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdNoContent ", 204)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCharactersCharacterIDMailLabelsLabelIDBadRequest creates a DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest with default headers values
func NewDeleteCharactersCharacterIDMailLabelsLabelIDBadRequest() *DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest {
	return &DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest{}
}

/*
DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this delete characters character Id mail labels label Id bad request response has a 2xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id mail labels label Id bad request response has a 3xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id mail labels label Id bad request response has a 4xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete characters character Id mail labels label Id bad request response has a 5xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete characters character Id mail labels label Id bad request response a status code equal to that given
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete characters character Id mail labels label Id bad request response
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest) Code() int {
	return 400
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized creates a DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized with default headers values
func NewDeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized() *DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized {
	return &DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized{}
}

/*
DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this delete characters character Id mail labels label Id unauthorized response has a 2xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id mail labels label Id unauthorized response has a 3xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id mail labels label Id unauthorized response has a 4xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete characters character Id mail labels label Id unauthorized response has a 5xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete characters character Id mail labels label Id unauthorized response a status code equal to that given
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete characters character Id mail labels label Id unauthorized response
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDMailLabelsLabelIDForbidden creates a DeleteCharactersCharacterIDMailLabelsLabelIDForbidden with default headers values
func NewDeleteCharactersCharacterIDMailLabelsLabelIDForbidden() *DeleteCharactersCharacterIDMailLabelsLabelIDForbidden {
	return &DeleteCharactersCharacterIDMailLabelsLabelIDForbidden{}
}

/*
DeleteCharactersCharacterIDMailLabelsLabelIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteCharactersCharacterIDMailLabelsLabelIDForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this delete characters character Id mail labels label Id forbidden response has a 2xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id mail labels label Id forbidden response has a 3xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id mail labels label Id forbidden response has a 4xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete characters character Id mail labels label Id forbidden response has a 5xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete characters character Id mail labels label Id forbidden response a status code equal to that given
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete characters character Id mail labels label Id forbidden response
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDForbidden) Code() int {
	return 403
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm creates a DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm with default headers values
func NewDeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm() *DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm {
	return &DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm{}
}

/*
DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this delete characters character Id mail labels label Id enhance your calm response has a 2xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id mail labels label Id enhance your calm response has a 3xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id mail labels label Id enhance your calm response has a 4xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete characters character Id mail labels label Id enhance your calm response has a 5xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this delete characters character Id mail labels label Id enhance your calm response a status code equal to that given
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the delete characters character Id mail labels label Id enhance your calm response
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm) Code() int {
	return 420
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity creates a DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity with default headers values
func NewDeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity() *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity {
	return &DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity{}
}

/*
DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity describes a response with status code 422, with default header values.

Default labels cannot be deleted
*/
type DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity struct {
	Payload *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntityBody
}

// IsSuccess returns true when this delete characters character Id mail labels label Id unprocessable entity response has a 2xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id mail labels label Id unprocessable entity response has a 3xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id mail labels label Id unprocessable entity response has a 4xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete characters character Id mail labels label Id unprocessable entity response has a 5xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete characters character Id mail labels label Id unprocessable entity response a status code equal to that given
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete characters character Id mail labels label Id unprocessable entity response
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity) GetPayload() *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntityBody {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError creates a DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError with default headers values
func NewDeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError() *DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError {
	return &DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError{}
}

/*
DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this delete characters character Id mail labels label Id internal server error response has a 2xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id mail labels label Id internal server error response has a 3xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id mail labels label Id internal server error response has a 4xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete characters character Id mail labels label Id internal server error response has a 5xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete characters character Id mail labels label Id internal server error response a status code equal to that given
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete characters character Id mail labels label Id internal server error response
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError) Code() int {
	return 500
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable creates a DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable with default headers values
func NewDeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable() *DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable {
	return &DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable{}
}

/*
DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this delete characters character Id mail labels label Id service unavailable response has a 2xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id mail labels label Id service unavailable response has a 3xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id mail labels label Id service unavailable response has a 4xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete characters character Id mail labels label Id service unavailable response has a 5xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete characters character Id mail labels label Id service unavailable response a status code equal to that given
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the delete characters character Id mail labels label Id service unavailable response
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable) Code() int {
	return 503
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout creates a DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout with default headers values
func NewDeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout() *DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout {
	return &DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout{}
}

/*
DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this delete characters character Id mail labels label Id gateway timeout response has a 2xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id mail labels label Id gateway timeout response has a 3xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id mail labels label Id gateway timeout response has a 4xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete characters character Id mail labels label Id gateway timeout response has a 5xx status code
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete characters character Id mail labels label Id gateway timeout response a status code equal to that given
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the delete characters character Id mail labels label Id gateway timeout response
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout) Code() int {
	return 504
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/mail/labels/{label_id}/][%d] deleteCharactersCharacterIdMailLabelsLabelIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDMailLabelsLabelIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntityBody delete_characters_character_id_mail_labels_label_id_unprocessable_entity
//
// Unprocessable entity
swagger:model DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntityBody
*/
type DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntityBody struct {

	// delete_characters_character_id_mail_labels_label_id_422_unprocessable_entity
	//
	// Unprocessable entity message
	Error string `json:"error,omitempty"`
}

// Validate validates this delete characters character ID mail labels label ID unprocessable entity body
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete characters character ID mail labels label ID unprocessable entity body based on context it is used
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntityBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res DeleteCharactersCharacterIDMailLabelsLabelIDUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
