// Code generated by go-swagger; DO NOT EDIT.

package mail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCharactersCharacterIDMailMailIDReader is a Reader for the GetCharactersCharacterIDMailMailID structure.
type GetCharactersCharacterIDMailMailIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDMailMailIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCharactersCharacterIDMailMailIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCharactersCharacterIDMailMailIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCharactersCharacterIDMailMailIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCharactersCharacterIDMailMailIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCharactersCharacterIDMailMailIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCharactersCharacterIDMailMailIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCharactersCharacterIDMailMailIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCharactersCharacterIDMailMailIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCharactersCharacterIDMailMailIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCharactersCharacterIDMailMailIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCharactersCharacterIDMailMailIDOK creates a GetCharactersCharacterIDMailMailIDOK with default headers values
func NewGetCharactersCharacterIDMailMailIDOK() *GetCharactersCharacterIDMailMailIDOK {
	return &GetCharactersCharacterIDMailMailIDOK{}
}

/* GetCharactersCharacterIDMailMailIDOK describes a response with status code 200, with default header values.

Contents of a mail
*/
type GetCharactersCharacterIDMailMailIDOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetCharactersCharacterIDMailMailIDOKBody
}

func (o *GetCharactersCharacterIDMailMailIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/{mail_id}/][%d] getCharactersCharacterIdMailMailIdOK  %+v", 200, o.Payload)
}
func (o *GetCharactersCharacterIDMailMailIDOK) GetPayload() *GetCharactersCharacterIDMailMailIDOKBody {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailMailIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetCharactersCharacterIDMailMailIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailMailIDNotModified creates a GetCharactersCharacterIDMailMailIDNotModified with default headers values
func NewGetCharactersCharacterIDMailMailIDNotModified() *GetCharactersCharacterIDMailMailIDNotModified {
	return &GetCharactersCharacterIDMailMailIDNotModified{}
}

/* GetCharactersCharacterIDMailMailIDNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCharactersCharacterIDMailMailIDNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDMailMailIDNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/{mail_id}/][%d] getCharactersCharacterIdMailMailIdNotModified ", 304)
}

func (o *GetCharactersCharacterIDMailMailIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCharactersCharacterIDMailMailIDBadRequest creates a GetCharactersCharacterIDMailMailIDBadRequest with default headers values
func NewGetCharactersCharacterIDMailMailIDBadRequest() *GetCharactersCharacterIDMailMailIDBadRequest {
	return &GetCharactersCharacterIDMailMailIDBadRequest{}
}

/* GetCharactersCharacterIDMailMailIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCharactersCharacterIDMailMailIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDMailMailIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/{mail_id}/][%d] getCharactersCharacterIdMailMailIdBadRequest  %+v", 400, o.Payload)
}
func (o *GetCharactersCharacterIDMailMailIDBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailMailIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailMailIDUnauthorized creates a GetCharactersCharacterIDMailMailIDUnauthorized with default headers values
func NewGetCharactersCharacterIDMailMailIDUnauthorized() *GetCharactersCharacterIDMailMailIDUnauthorized {
	return &GetCharactersCharacterIDMailMailIDUnauthorized{}
}

/* GetCharactersCharacterIDMailMailIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCharactersCharacterIDMailMailIDUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDMailMailIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/{mail_id}/][%d] getCharactersCharacterIdMailMailIdUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCharactersCharacterIDMailMailIDUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailMailIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailMailIDForbidden creates a GetCharactersCharacterIDMailMailIDForbidden with default headers values
func NewGetCharactersCharacterIDMailMailIDForbidden() *GetCharactersCharacterIDMailMailIDForbidden {
	return &GetCharactersCharacterIDMailMailIDForbidden{}
}

/* GetCharactersCharacterIDMailMailIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCharactersCharacterIDMailMailIDForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDMailMailIDForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/{mail_id}/][%d] getCharactersCharacterIdMailMailIdForbidden  %+v", 403, o.Payload)
}
func (o *GetCharactersCharacterIDMailMailIDForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailMailIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailMailIDNotFound creates a GetCharactersCharacterIDMailMailIDNotFound with default headers values
func NewGetCharactersCharacterIDMailMailIDNotFound() *GetCharactersCharacterIDMailMailIDNotFound {
	return &GetCharactersCharacterIDMailMailIDNotFound{}
}

/* GetCharactersCharacterIDMailMailIDNotFound describes a response with status code 404, with default header values.

Mail not found
*/
type GetCharactersCharacterIDMailMailIDNotFound struct {
	Payload *GetCharactersCharacterIDMailMailIDNotFoundBody
}

func (o *GetCharactersCharacterIDMailMailIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/{mail_id}/][%d] getCharactersCharacterIdMailMailIdNotFound  %+v", 404, o.Payload)
}
func (o *GetCharactersCharacterIDMailMailIDNotFound) GetPayload() *GetCharactersCharacterIDMailMailIDNotFoundBody {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailMailIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCharactersCharacterIDMailMailIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailMailIDEnhanceYourCalm creates a GetCharactersCharacterIDMailMailIDEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDMailMailIDEnhanceYourCalm() *GetCharactersCharacterIDMailMailIDEnhanceYourCalm {
	return &GetCharactersCharacterIDMailMailIDEnhanceYourCalm{}
}

/* GetCharactersCharacterIDMailMailIDEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCharactersCharacterIDMailMailIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDMailMailIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/{mail_id}/][%d] getCharactersCharacterIdMailMailIdEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetCharactersCharacterIDMailMailIDEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailMailIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailMailIDInternalServerError creates a GetCharactersCharacterIDMailMailIDInternalServerError with default headers values
func NewGetCharactersCharacterIDMailMailIDInternalServerError() *GetCharactersCharacterIDMailMailIDInternalServerError {
	return &GetCharactersCharacterIDMailMailIDInternalServerError{}
}

/* GetCharactersCharacterIDMailMailIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCharactersCharacterIDMailMailIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDMailMailIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/{mail_id}/][%d] getCharactersCharacterIdMailMailIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCharactersCharacterIDMailMailIDInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailMailIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailMailIDServiceUnavailable creates a GetCharactersCharacterIDMailMailIDServiceUnavailable with default headers values
func NewGetCharactersCharacterIDMailMailIDServiceUnavailable() *GetCharactersCharacterIDMailMailIDServiceUnavailable {
	return &GetCharactersCharacterIDMailMailIDServiceUnavailable{}
}

/* GetCharactersCharacterIDMailMailIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCharactersCharacterIDMailMailIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDMailMailIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/{mail_id}/][%d] getCharactersCharacterIdMailMailIdServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetCharactersCharacterIDMailMailIDServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailMailIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailMailIDGatewayTimeout creates a GetCharactersCharacterIDMailMailIDGatewayTimeout with default headers values
func NewGetCharactersCharacterIDMailMailIDGatewayTimeout() *GetCharactersCharacterIDMailMailIDGatewayTimeout {
	return &GetCharactersCharacterIDMailMailIDGatewayTimeout{}
}

/* GetCharactersCharacterIDMailMailIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDMailMailIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDMailMailIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/mail/{mail_id}/][%d] getCharactersCharacterIdMailMailIdGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetCharactersCharacterIDMailMailIDGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCharactersCharacterIDMailMailIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDMailMailIDNotFoundBody get_characters_character_id_mail_mail_id_not_found
//
// Not found
swagger:model GetCharactersCharacterIDMailMailIDNotFoundBody
*/
type GetCharactersCharacterIDMailMailIDNotFoundBody struct {

	// get_characters_character_id_mail_mail_id_404_not_found
	//
	// Not found message
	Error string `json:"error,omitempty"`
}

// Validate validates this get characters character ID mail mail ID not found body
func (o *GetCharactersCharacterIDMailMailIDNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get characters character ID mail mail ID not found body based on context it is used
func (o *GetCharactersCharacterIDMailMailIDNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailMailIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailMailIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDMailMailIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCharactersCharacterIDMailMailIDOKBody get_characters_character_id_mail_mail_id_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDMailMailIDOKBody
*/
type GetCharactersCharacterIDMailMailIDOKBody struct {

	// get_characters_character_id_mail_mail_id_body
	//
	// Mail's body
	Body string `json:"body,omitempty"`

	// get_characters_character_id_mail_mail_id_from
	//
	// From whom the mail was sent
	From int32 `json:"from,omitempty"`

	// get_characters_character_id_mail_mail_id_labels
	//
	// Labels attached to the mail
	// Max Items: 25
	Labels []*int32 `json:"labels"`

	// get_characters_character_id_mail_mail_id_read
	//
	// Whether the mail is flagged as read
	Read bool `json:"read,omitempty"`

	// get_characters_character_id_mail_mail_id_recipients
	//
	// Recipients of the mail
	// Max Items: 52
	// Min Items: 0
	// Unique: true
	Recipients []*GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0 `json:"recipients"`

	// get_characters_character_id_mail_mail_id_subject
	//
	// Mail subject
	Subject string `json:"subject,omitempty"`

	// get_characters_character_id_mail_mail_id_timestamp
	//
	// When the mail was sent
	// Format: date-time
	Timestamp strfmt.DateTime `json:"timestamp,omitempty"`
}

// Validate validates this get characters character ID mail mail ID o k body
func (o *GetCharactersCharacterIDMailMailIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRecipients(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailMailIDOKBody) validateLabels(formats strfmt.Registry) error {
	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	iLabelsSize := int64(len(o.Labels))

	if err := validate.MaxItems("getCharactersCharacterIdMailMailIdOK"+"."+"labels", "body", iLabelsSize, 25); err != nil {
		return err
	}

	for i := 0; i < len(o.Labels); i++ {
		if swag.IsZero(o.Labels[i]) { // not required
			continue
		}

		if err := validate.MinimumInt("getCharactersCharacterIdMailMailIdOK"+"."+"labels"+"."+strconv.Itoa(i), "body", int64(*o.Labels[i]), 0, false); err != nil {
			return err
		}

	}

	return nil
}

func (o *GetCharactersCharacterIDMailMailIDOKBody) validateRecipients(formats strfmt.Registry) error {
	if swag.IsZero(o.Recipients) { // not required
		return nil
	}

	iRecipientsSize := int64(len(o.Recipients))

	if err := validate.MinItems("getCharactersCharacterIdMailMailIdOK"+"."+"recipients", "body", iRecipientsSize, 0); err != nil {
		return err
	}

	if err := validate.MaxItems("getCharactersCharacterIdMailMailIdOK"+"."+"recipients", "body", iRecipientsSize, 52); err != nil {
		return err
	}

	if err := validate.UniqueItems("getCharactersCharacterIdMailMailIdOK"+"."+"recipients", "body", o.Recipients); err != nil {
		return err
	}

	for i := 0; i < len(o.Recipients); i++ {
		if swag.IsZero(o.Recipients[i]) { // not required
			continue
		}

		if o.Recipients[i] != nil {
			if err := o.Recipients[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCharactersCharacterIdMailMailIdOK" + "." + "recipients" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetCharactersCharacterIDMailMailIDOKBody) validateTimestamp(formats strfmt.Registry) error {
	if swag.IsZero(o.Timestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("getCharactersCharacterIdMailMailIdOK"+"."+"timestamp", "body", "date-time", o.Timestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this get characters character ID mail mail ID o k body based on the context it is used
func (o *GetCharactersCharacterIDMailMailIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateRecipients(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailMailIDOKBody) contextValidateRecipients(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Recipients); i++ {

		if o.Recipients[i] != nil {
			if err := o.Recipients[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCharactersCharacterIdMailMailIdOK" + "." + "recipients" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailMailIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailMailIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDMailMailIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0 get_characters_character_id_mail_mail_id_recipient
//
// recipient object
swagger:model GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0
*/
type GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0 struct {

	// get_characters_character_id_mail_mail_id_recipient_id
	//
	// recipient_id integer
	// Required: true
	RecipientID *int32 `json:"recipient_id"`

	// get_characters_character_id_mail_mail_id_recipient_type
	//
	// recipient_type string
	// Required: true
	// Enum: [alliance character corporation mailing_list]
	RecipientType *string `json:"recipient_type"`
}

// Validate validates this get characters character ID mail mail ID o k body recipients items0
func (o *GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRecipientID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRecipientType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0) validateRecipientID(formats strfmt.Registry) error {

	if err := validate.Required("recipient_id", "body", o.RecipientID); err != nil {
		return err
	}

	return nil
}

var getCharactersCharacterIdMailMailIdOKBodyRecipientsItems0TypeRecipientTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["alliance","character","corporation","mailing_list"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCharactersCharacterIdMailMailIdOKBodyRecipientsItems0TypeRecipientTypePropEnum = append(getCharactersCharacterIdMailMailIdOKBodyRecipientsItems0TypeRecipientTypePropEnum, v)
	}
}

const (

	// GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0RecipientTypeAlliance captures enum value "alliance"
	GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0RecipientTypeAlliance string = "alliance"

	// GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0RecipientTypeCharacter captures enum value "character"
	GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0RecipientTypeCharacter string = "character"

	// GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0RecipientTypeCorporation captures enum value "corporation"
	GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0RecipientTypeCorporation string = "corporation"

	// GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0RecipientTypeMailingList captures enum value "mailing_list"
	GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0RecipientTypeMailingList string = "mailing_list"
)

// prop value enum
func (o *GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0) validateRecipientTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCharactersCharacterIdMailMailIdOKBodyRecipientsItems0TypeRecipientTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0) validateRecipientType(formats strfmt.Registry) error {

	if err := validate.Required("recipient_type", "body", o.RecipientType); err != nil {
		return err
	}

	// value enum
	if err := o.validateRecipientTypeEnum("recipient_type", "body", *o.RecipientType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID mail mail ID o k body recipients items0 based on context it is used
func (o *GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDMailMailIDOKBodyRecipientsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
