// Code generated by go-swagger; DO NOT EDIT.

package calendar

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCharactersCharacterIDCalendarReader is a Reader for the GetCharactersCharacterIDCalendar structure.
type GetCharactersCharacterIDCalendarReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDCalendarReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCharactersCharacterIDCalendarOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCharactersCharacterIDCalendarNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCharactersCharacterIDCalendarBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCharactersCharacterIDCalendarUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCharactersCharacterIDCalendarForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCharactersCharacterIDCalendarEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCharactersCharacterIDCalendarInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCharactersCharacterIDCalendarServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCharactersCharacterIDCalendarGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCharactersCharacterIDCalendarOK creates a GetCharactersCharacterIDCalendarOK with default headers values
func NewGetCharactersCharacterIDCalendarOK() *GetCharactersCharacterIDCalendarOK {
	return &GetCharactersCharacterIDCalendarOK{}
}

/* GetCharactersCharacterIDCalendarOK describes a response with status code 200, with default header values.

A collection of event summaries
*/
type GetCharactersCharacterIDCalendarOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetCharactersCharacterIDCalendarOKBodyItems0
}

func (o *GetCharactersCharacterIDCalendarOK) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarOK  %+v", 200, o.Payload)
}
func (o *GetCharactersCharacterIDCalendarOK) GetPayload() []*GetCharactersCharacterIDCalendarOKBodyItems0 {
	return o.Payload
}

func (o *GetCharactersCharacterIDCalendarOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarNotModified creates a GetCharactersCharacterIDCalendarNotModified with default headers values
func NewGetCharactersCharacterIDCalendarNotModified() *GetCharactersCharacterIDCalendarNotModified {
	return &GetCharactersCharacterIDCalendarNotModified{}
}

/* GetCharactersCharacterIDCalendarNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCharactersCharacterIDCalendarNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDCalendarNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarNotModified ", 304)
}

func (o *GetCharactersCharacterIDCalendarNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarBadRequest creates a GetCharactersCharacterIDCalendarBadRequest with default headers values
func NewGetCharactersCharacterIDCalendarBadRequest() *GetCharactersCharacterIDCalendarBadRequest {
	return &GetCharactersCharacterIDCalendarBadRequest{}
}

/* GetCharactersCharacterIDCalendarBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCharactersCharacterIDCalendarBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDCalendarBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarBadRequest  %+v", 400, o.Payload)
}
func (o *GetCharactersCharacterIDCalendarBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCharactersCharacterIDCalendarBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarUnauthorized creates a GetCharactersCharacterIDCalendarUnauthorized with default headers values
func NewGetCharactersCharacterIDCalendarUnauthorized() *GetCharactersCharacterIDCalendarUnauthorized {
	return &GetCharactersCharacterIDCalendarUnauthorized{}
}

/* GetCharactersCharacterIDCalendarUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCharactersCharacterIDCalendarUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDCalendarUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCharactersCharacterIDCalendarUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCharactersCharacterIDCalendarUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarForbidden creates a GetCharactersCharacterIDCalendarForbidden with default headers values
func NewGetCharactersCharacterIDCalendarForbidden() *GetCharactersCharacterIDCalendarForbidden {
	return &GetCharactersCharacterIDCalendarForbidden{}
}

/* GetCharactersCharacterIDCalendarForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCharactersCharacterIDCalendarForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDCalendarForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarForbidden  %+v", 403, o.Payload)
}
func (o *GetCharactersCharacterIDCalendarForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCharactersCharacterIDCalendarForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarEnhanceYourCalm creates a GetCharactersCharacterIDCalendarEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDCalendarEnhanceYourCalm() *GetCharactersCharacterIDCalendarEnhanceYourCalm {
	return &GetCharactersCharacterIDCalendarEnhanceYourCalm{}
}

/* GetCharactersCharacterIDCalendarEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCharactersCharacterIDCalendarEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDCalendarEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetCharactersCharacterIDCalendarEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCharactersCharacterIDCalendarEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarInternalServerError creates a GetCharactersCharacterIDCalendarInternalServerError with default headers values
func NewGetCharactersCharacterIDCalendarInternalServerError() *GetCharactersCharacterIDCalendarInternalServerError {
	return &GetCharactersCharacterIDCalendarInternalServerError{}
}

/* GetCharactersCharacterIDCalendarInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCharactersCharacterIDCalendarInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDCalendarInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCharactersCharacterIDCalendarInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCharactersCharacterIDCalendarInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarServiceUnavailable creates a GetCharactersCharacterIDCalendarServiceUnavailable with default headers values
func NewGetCharactersCharacterIDCalendarServiceUnavailable() *GetCharactersCharacterIDCalendarServiceUnavailable {
	return &GetCharactersCharacterIDCalendarServiceUnavailable{}
}

/* GetCharactersCharacterIDCalendarServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCharactersCharacterIDCalendarServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDCalendarServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetCharactersCharacterIDCalendarServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCharactersCharacterIDCalendarServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarGatewayTimeout creates a GetCharactersCharacterIDCalendarGatewayTimeout with default headers values
func NewGetCharactersCharacterIDCalendarGatewayTimeout() *GetCharactersCharacterIDCalendarGatewayTimeout {
	return &GetCharactersCharacterIDCalendarGatewayTimeout{}
}

/* GetCharactersCharacterIDCalendarGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDCalendarGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDCalendarGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetCharactersCharacterIDCalendarGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCharactersCharacterIDCalendarGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDCalendarOKBodyItems0 get_characters_character_id_calendar_200_ok
//
// event
swagger:model GetCharactersCharacterIDCalendarOKBodyItems0
*/
type GetCharactersCharacterIDCalendarOKBodyItems0 struct {

	// get_characters_character_id_calendar_event_date
	//
	// event_date string
	// Format: date-time
	EventDate strfmt.DateTime `json:"event_date,omitempty"`

	// get_characters_character_id_calendar_event_id
	//
	// event_id integer
	EventID int32 `json:"event_id,omitempty"`

	// get_characters_character_id_calendar_event_response
	//
	// event_response string
	// Enum: [declined not_responded accepted tentative]
	EventResponse string `json:"event_response,omitempty"`

	// get_characters_character_id_calendar_importance
	//
	// importance integer
	Importance int32 `json:"importance,omitempty"`

	// get_characters_character_id_calendar_title
	//
	// title string
	Title string `json:"title,omitempty"`
}

// Validate validates this get characters character ID calendar o k body items0
func (o *GetCharactersCharacterIDCalendarOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEventDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEventResponse(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDCalendarOKBodyItems0) validateEventDate(formats strfmt.Registry) error {
	if swag.IsZero(o.EventDate) { // not required
		return nil
	}

	if err := validate.FormatOf("event_date", "body", "date-time", o.EventDate.String(), formats); err != nil {
		return err
	}

	return nil
}

var getCharactersCharacterIdCalendarOKBodyItems0TypeEventResponsePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["declined","not_responded","accepted","tentative"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCharactersCharacterIdCalendarOKBodyItems0TypeEventResponsePropEnum = append(getCharactersCharacterIdCalendarOKBodyItems0TypeEventResponsePropEnum, v)
	}
}

const (

	// GetCharactersCharacterIDCalendarOKBodyItems0EventResponseDeclined captures enum value "declined"
	GetCharactersCharacterIDCalendarOKBodyItems0EventResponseDeclined string = "declined"

	// GetCharactersCharacterIDCalendarOKBodyItems0EventResponseNotResponded captures enum value "not_responded"
	GetCharactersCharacterIDCalendarOKBodyItems0EventResponseNotResponded string = "not_responded"

	// GetCharactersCharacterIDCalendarOKBodyItems0EventResponseAccepted captures enum value "accepted"
	GetCharactersCharacterIDCalendarOKBodyItems0EventResponseAccepted string = "accepted"

	// GetCharactersCharacterIDCalendarOKBodyItems0EventResponseTentative captures enum value "tentative"
	GetCharactersCharacterIDCalendarOKBodyItems0EventResponseTentative string = "tentative"
)

// prop value enum
func (o *GetCharactersCharacterIDCalendarOKBodyItems0) validateEventResponseEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCharactersCharacterIdCalendarOKBodyItems0TypeEventResponsePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCharactersCharacterIDCalendarOKBodyItems0) validateEventResponse(formats strfmt.Registry) error {
	if swag.IsZero(o.EventResponse) { // not required
		return nil
	}

	// value enum
	if err := o.validateEventResponseEnum("event_response", "body", o.EventResponse); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get characters character ID calendar o k body items0 based on context it is used
func (o *GetCharactersCharacterIDCalendarOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDCalendarOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDCalendarOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDCalendarOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
