// Code generated by go-swagger; DO NOT EDIT.

package fittings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ferocious-space/eveapi/models"
)

// DeleteCharactersCharacterIDFittingsFittingIDReader is a Reader for the DeleteCharactersCharacterIDFittingsFittingID structure.
type DeleteCharactersCharacterIDFittingsFittingIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCharactersCharacterIDFittingsFittingIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteCharactersCharacterIDFittingsFittingIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCharactersCharacterIDFittingsFittingIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteCharactersCharacterIDFittingsFittingIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCharactersCharacterIDFittingsFittingIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewDeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCharactersCharacterIDFittingsFittingIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteCharactersCharacterIDFittingsFittingIDNoContent creates a DeleteCharactersCharacterIDFittingsFittingIDNoContent with default headers values
func NewDeleteCharactersCharacterIDFittingsFittingIDNoContent() *DeleteCharactersCharacterIDFittingsFittingIDNoContent {
	return &DeleteCharactersCharacterIDFittingsFittingIDNoContent{}
}

/*
DeleteCharactersCharacterIDFittingsFittingIDNoContent describes a response with status code 204, with default header values.

Fitting deleted
*/
type DeleteCharactersCharacterIDFittingsFittingIDNoContent struct {
}

// IsSuccess returns true when this delete characters character Id fittings fitting Id no content response has a 2xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete characters character Id fittings fitting Id no content response has a 3xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id fittings fitting Id no content response has a 4xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete characters character Id fittings fitting Id no content response has a 5xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete characters character Id fittings fitting Id no content response a status code equal to that given
func (o *DeleteCharactersCharacterIDFittingsFittingIDNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdNoContent ", 204)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdNoContent ", 204)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCharactersCharacterIDFittingsFittingIDBadRequest creates a DeleteCharactersCharacterIDFittingsFittingIDBadRequest with default headers values
func NewDeleteCharactersCharacterIDFittingsFittingIDBadRequest() *DeleteCharactersCharacterIDFittingsFittingIDBadRequest {
	return &DeleteCharactersCharacterIDFittingsFittingIDBadRequest{}
}

/*
DeleteCharactersCharacterIDFittingsFittingIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteCharactersCharacterIDFittingsFittingIDBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this delete characters character Id fittings fitting Id bad request response has a 2xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id fittings fitting Id bad request response has a 3xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id fittings fitting Id bad request response has a 4xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete characters character Id fittings fitting Id bad request response has a 5xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete characters character Id fittings fitting Id bad request response a status code equal to that given
func (o *DeleteCharactersCharacterIDFittingsFittingIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDFittingsFittingIDUnauthorized creates a DeleteCharactersCharacterIDFittingsFittingIDUnauthorized with default headers values
func NewDeleteCharactersCharacterIDFittingsFittingIDUnauthorized() *DeleteCharactersCharacterIDFittingsFittingIDUnauthorized {
	return &DeleteCharactersCharacterIDFittingsFittingIDUnauthorized{}
}

/*
DeleteCharactersCharacterIDFittingsFittingIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteCharactersCharacterIDFittingsFittingIDUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this delete characters character Id fittings fitting Id unauthorized response has a 2xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id fittings fitting Id unauthorized response has a 3xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id fittings fitting Id unauthorized response has a 4xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete characters character Id fittings fitting Id unauthorized response has a 5xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete characters character Id fittings fitting Id unauthorized response a status code equal to that given
func (o *DeleteCharactersCharacterIDFittingsFittingIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDFittingsFittingIDForbidden creates a DeleteCharactersCharacterIDFittingsFittingIDForbidden with default headers values
func NewDeleteCharactersCharacterIDFittingsFittingIDForbidden() *DeleteCharactersCharacterIDFittingsFittingIDForbidden {
	return &DeleteCharactersCharacterIDFittingsFittingIDForbidden{}
}

/*
DeleteCharactersCharacterIDFittingsFittingIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteCharactersCharacterIDFittingsFittingIDForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this delete characters character Id fittings fitting Id forbidden response has a 2xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id fittings fitting Id forbidden response has a 3xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id fittings fitting Id forbidden response has a 4xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete characters character Id fittings fitting Id forbidden response has a 5xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete characters character Id fittings fitting Id forbidden response a status code equal to that given
func (o *DeleteCharactersCharacterIDFittingsFittingIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm creates a DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm with default headers values
func NewDeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm() *DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm {
	return &DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm{}
}

/*
DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this delete characters character Id fittings fitting Id enhance your calm response has a 2xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id fittings fitting Id enhance your calm response has a 3xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id fittings fitting Id enhance your calm response has a 4xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete characters character Id fittings fitting Id enhance your calm response has a 5xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this delete characters character Id fittings fitting Id enhance your calm response a status code equal to that given
func (o *DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDFittingsFittingIDInternalServerError creates a DeleteCharactersCharacterIDFittingsFittingIDInternalServerError with default headers values
func NewDeleteCharactersCharacterIDFittingsFittingIDInternalServerError() *DeleteCharactersCharacterIDFittingsFittingIDInternalServerError {
	return &DeleteCharactersCharacterIDFittingsFittingIDInternalServerError{}
}

/*
DeleteCharactersCharacterIDFittingsFittingIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteCharactersCharacterIDFittingsFittingIDInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this delete characters character Id fittings fitting Id internal server error response has a 2xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id fittings fitting Id internal server error response has a 3xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id fittings fitting Id internal server error response has a 4xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete characters character Id fittings fitting Id internal server error response has a 5xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete characters character Id fittings fitting Id internal server error response a status code equal to that given
func (o *DeleteCharactersCharacterIDFittingsFittingIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable creates a DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable with default headers values
func NewDeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable() *DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable {
	return &DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable{}
}

/*
DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this delete characters character Id fittings fitting Id service unavailable response has a 2xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id fittings fitting Id service unavailable response has a 3xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id fittings fitting Id service unavailable response has a 4xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete characters character Id fittings fitting Id service unavailable response has a 5xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete characters character Id fittings fitting Id service unavailable response a status code equal to that given
func (o *DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout creates a DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout with default headers values
func NewDeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout() *DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout {
	return &DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout{}
}

/*
DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this delete characters character Id fittings fitting Id gateway timeout response has a 2xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete characters character Id fittings fitting Id gateway timeout response has a 3xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete characters character Id fittings fitting Id gateway timeout response has a 4xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete characters character Id fittings fitting Id gateway timeout response has a 5xx status code
func (o *DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this delete characters character Id fittings fitting Id gateway timeout response a status code equal to that given
func (o *DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /v1/characters/{character_id}/fittings/{fitting_id}/][%d] deleteCharactersCharacterIdFittingsFittingIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *DeleteCharactersCharacterIDFittingsFittingIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
