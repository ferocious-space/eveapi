// Code generated by go-swagger; DO NOT EDIT.

package contracts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetContractsPublicItemsContractIDReader is a Reader for the GetContractsPublicItemsContractID structure.
type GetContractsPublicItemsContractIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContractsPublicItemsContractIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContractsPublicItemsContractIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetContractsPublicItemsContractIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetContractsPublicItemsContractIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetContractsPublicItemsContractIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContractsPublicItemsContractIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContractsPublicItemsContractIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetContractsPublicItemsContractIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContractsPublicItemsContractIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetContractsPublicItemsContractIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetContractsPublicItemsContractIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContractsPublicItemsContractIDOK creates a GetContractsPublicItemsContractIDOK with default headers values
func NewGetContractsPublicItemsContractIDOK() *GetContractsPublicItemsContractIDOK {
	var (
		// initialize headers with default values
		xPagesDefault = int32(1)
	)

	return &GetContractsPublicItemsContractIDOK{

		XPages: xPagesDefault,
	}
}

/*
GetContractsPublicItemsContractIDOK describes a response with status code 200, with default header values.

A list of items in this contract
*/
type GetContractsPublicItemsContractIDOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	/* Maximum page number

	   Format: int32
	   Default: 1
	*/
	XPages int32

	Payload []*GetContractsPublicItemsContractIDOKBodyItems0
}

// IsSuccess returns true when this get contracts public items contract Id o k response has a 2xx status code
func (o *GetContractsPublicItemsContractIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get contracts public items contract Id o k response has a 3xx status code
func (o *GetContractsPublicItemsContractIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contracts public items contract Id o k response has a 4xx status code
func (o *GetContractsPublicItemsContractIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contracts public items contract Id o k response has a 5xx status code
func (o *GetContractsPublicItemsContractIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get contracts public items contract Id o k response a status code equal to that given
func (o *GetContractsPublicItemsContractIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get contracts public items contract Id o k response
func (o *GetContractsPublicItemsContractIDOK) Code() int {
	return 200
}

func (o *GetContractsPublicItemsContractIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdOK  %+v", 200, o.Payload)
}

func (o *GetContractsPublicItemsContractIDOK) String() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdOK  %+v", 200, o.Payload)
}

func (o *GetContractsPublicItemsContractIDOK) GetPayload() []*GetContractsPublicItemsContractIDOKBodyItems0 {
	return o.Payload
}

func (o *GetContractsPublicItemsContractIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header X-Pages
	hdrXPages := response.GetHeader("X-Pages")

	if hdrXPages != "" {
		valxPages, err := swag.ConvertInt32(hdrXPages)
		if err != nil {
			return errors.InvalidType("X-Pages", "header", "int32", hdrXPages)
		}
		o.XPages = valxPages
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicItemsContractIDNoContent creates a GetContractsPublicItemsContractIDNoContent with default headers values
func NewGetContractsPublicItemsContractIDNoContent() *GetContractsPublicItemsContractIDNoContent {
	return &GetContractsPublicItemsContractIDNoContent{}
}

/*
GetContractsPublicItemsContractIDNoContent describes a response with status code 204, with default header values.

Contract expired or recently accepted by player
*/
type GetContractsPublicItemsContractIDNoContent struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get contracts public items contract Id no content response has a 2xx status code
func (o *GetContractsPublicItemsContractIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get contracts public items contract Id no content response has a 3xx status code
func (o *GetContractsPublicItemsContractIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contracts public items contract Id no content response has a 4xx status code
func (o *GetContractsPublicItemsContractIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contracts public items contract Id no content response has a 5xx status code
func (o *GetContractsPublicItemsContractIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this get contracts public items contract Id no content response a status code equal to that given
func (o *GetContractsPublicItemsContractIDNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the get contracts public items contract Id no content response
func (o *GetContractsPublicItemsContractIDNoContent) Code() int {
	return 204
}

func (o *GetContractsPublicItemsContractIDNoContent) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdNoContent ", 204)
}

func (o *GetContractsPublicItemsContractIDNoContent) String() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdNoContent ", 204)
}

func (o *GetContractsPublicItemsContractIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetContractsPublicItemsContractIDNotModified creates a GetContractsPublicItemsContractIDNotModified with default headers values
func NewGetContractsPublicItemsContractIDNotModified() *GetContractsPublicItemsContractIDNotModified {
	return &GetContractsPublicItemsContractIDNotModified{}
}

/*
GetContractsPublicItemsContractIDNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetContractsPublicItemsContractIDNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get contracts public items contract Id not modified response has a 2xx status code
func (o *GetContractsPublicItemsContractIDNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contracts public items contract Id not modified response has a 3xx status code
func (o *GetContractsPublicItemsContractIDNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get contracts public items contract Id not modified response has a 4xx status code
func (o *GetContractsPublicItemsContractIDNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contracts public items contract Id not modified response has a 5xx status code
func (o *GetContractsPublicItemsContractIDNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get contracts public items contract Id not modified response a status code equal to that given
func (o *GetContractsPublicItemsContractIDNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get contracts public items contract Id not modified response
func (o *GetContractsPublicItemsContractIDNotModified) Code() int {
	return 304
}

func (o *GetContractsPublicItemsContractIDNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdNotModified ", 304)
}

func (o *GetContractsPublicItemsContractIDNotModified) String() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdNotModified ", 304)
}

func (o *GetContractsPublicItemsContractIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetContractsPublicItemsContractIDBadRequest creates a GetContractsPublicItemsContractIDBadRequest with default headers values
func NewGetContractsPublicItemsContractIDBadRequest() *GetContractsPublicItemsContractIDBadRequest {
	return &GetContractsPublicItemsContractIDBadRequest{}
}

/*
GetContractsPublicItemsContractIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetContractsPublicItemsContractIDBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get contracts public items contract Id bad request response has a 2xx status code
func (o *GetContractsPublicItemsContractIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contracts public items contract Id bad request response has a 3xx status code
func (o *GetContractsPublicItemsContractIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contracts public items contract Id bad request response has a 4xx status code
func (o *GetContractsPublicItemsContractIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contracts public items contract Id bad request response has a 5xx status code
func (o *GetContractsPublicItemsContractIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get contracts public items contract Id bad request response a status code equal to that given
func (o *GetContractsPublicItemsContractIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get contracts public items contract Id bad request response
func (o *GetContractsPublicItemsContractIDBadRequest) Code() int {
	return 400
}

func (o *GetContractsPublicItemsContractIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetContractsPublicItemsContractIDBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetContractsPublicItemsContractIDBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetContractsPublicItemsContractIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicItemsContractIDForbidden creates a GetContractsPublicItemsContractIDForbidden with default headers values
func NewGetContractsPublicItemsContractIDForbidden() *GetContractsPublicItemsContractIDForbidden {
	return &GetContractsPublicItemsContractIDForbidden{}
}

/*
GetContractsPublicItemsContractIDForbidden describes a response with status code 403, with default header values.

Not Authorized to see contract
*/
type GetContractsPublicItemsContractIDForbidden struct {
	Payload *GetContractsPublicItemsContractIDForbiddenBody
}

// IsSuccess returns true when this get contracts public items contract Id forbidden response has a 2xx status code
func (o *GetContractsPublicItemsContractIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contracts public items contract Id forbidden response has a 3xx status code
func (o *GetContractsPublicItemsContractIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contracts public items contract Id forbidden response has a 4xx status code
func (o *GetContractsPublicItemsContractIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contracts public items contract Id forbidden response has a 5xx status code
func (o *GetContractsPublicItemsContractIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get contracts public items contract Id forbidden response a status code equal to that given
func (o *GetContractsPublicItemsContractIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get contracts public items contract Id forbidden response
func (o *GetContractsPublicItemsContractIDForbidden) Code() int {
	return 403
}

func (o *GetContractsPublicItemsContractIDForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdForbidden  %+v", 403, o.Payload)
}

func (o *GetContractsPublicItemsContractIDForbidden) String() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdForbidden  %+v", 403, o.Payload)
}

func (o *GetContractsPublicItemsContractIDForbidden) GetPayload() *GetContractsPublicItemsContractIDForbiddenBody {
	return o.Payload
}

func (o *GetContractsPublicItemsContractIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetContractsPublicItemsContractIDForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicItemsContractIDNotFound creates a GetContractsPublicItemsContractIDNotFound with default headers values
func NewGetContractsPublicItemsContractIDNotFound() *GetContractsPublicItemsContractIDNotFound {
	return &GetContractsPublicItemsContractIDNotFound{}
}

/*
GetContractsPublicItemsContractIDNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetContractsPublicItemsContractIDNotFound struct {
	Payload *GetContractsPublicItemsContractIDNotFoundBody
}

// IsSuccess returns true when this get contracts public items contract Id not found response has a 2xx status code
func (o *GetContractsPublicItemsContractIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contracts public items contract Id not found response has a 3xx status code
func (o *GetContractsPublicItemsContractIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contracts public items contract Id not found response has a 4xx status code
func (o *GetContractsPublicItemsContractIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contracts public items contract Id not found response has a 5xx status code
func (o *GetContractsPublicItemsContractIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get contracts public items contract Id not found response a status code equal to that given
func (o *GetContractsPublicItemsContractIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get contracts public items contract Id not found response
func (o *GetContractsPublicItemsContractIDNotFound) Code() int {
	return 404
}

func (o *GetContractsPublicItemsContractIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdNotFound  %+v", 404, o.Payload)
}

func (o *GetContractsPublicItemsContractIDNotFound) String() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdNotFound  %+v", 404, o.Payload)
}

func (o *GetContractsPublicItemsContractIDNotFound) GetPayload() *GetContractsPublicItemsContractIDNotFoundBody {
	return o.Payload
}

func (o *GetContractsPublicItemsContractIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetContractsPublicItemsContractIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicItemsContractIDEnhanceYourCalm creates a GetContractsPublicItemsContractIDEnhanceYourCalm with default headers values
func NewGetContractsPublicItemsContractIDEnhanceYourCalm() *GetContractsPublicItemsContractIDEnhanceYourCalm {
	return &GetContractsPublicItemsContractIDEnhanceYourCalm{}
}

/*
GetContractsPublicItemsContractIDEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetContractsPublicItemsContractIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get contracts public items contract Id enhance your calm response has a 2xx status code
func (o *GetContractsPublicItemsContractIDEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contracts public items contract Id enhance your calm response has a 3xx status code
func (o *GetContractsPublicItemsContractIDEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contracts public items contract Id enhance your calm response has a 4xx status code
func (o *GetContractsPublicItemsContractIDEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contracts public items contract Id enhance your calm response has a 5xx status code
func (o *GetContractsPublicItemsContractIDEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get contracts public items contract Id enhance your calm response a status code equal to that given
func (o *GetContractsPublicItemsContractIDEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

// Code gets the status code for the get contracts public items contract Id enhance your calm response
func (o *GetContractsPublicItemsContractIDEnhanceYourCalm) Code() int {
	return 420
}

func (o *GetContractsPublicItemsContractIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetContractsPublicItemsContractIDEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetContractsPublicItemsContractIDEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetContractsPublicItemsContractIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicItemsContractIDInternalServerError creates a GetContractsPublicItemsContractIDInternalServerError with default headers values
func NewGetContractsPublicItemsContractIDInternalServerError() *GetContractsPublicItemsContractIDInternalServerError {
	return &GetContractsPublicItemsContractIDInternalServerError{}
}

/*
GetContractsPublicItemsContractIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetContractsPublicItemsContractIDInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get contracts public items contract Id internal server error response has a 2xx status code
func (o *GetContractsPublicItemsContractIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contracts public items contract Id internal server error response has a 3xx status code
func (o *GetContractsPublicItemsContractIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contracts public items contract Id internal server error response has a 4xx status code
func (o *GetContractsPublicItemsContractIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contracts public items contract Id internal server error response has a 5xx status code
func (o *GetContractsPublicItemsContractIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get contracts public items contract Id internal server error response a status code equal to that given
func (o *GetContractsPublicItemsContractIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get contracts public items contract Id internal server error response
func (o *GetContractsPublicItemsContractIDInternalServerError) Code() int {
	return 500
}

func (o *GetContractsPublicItemsContractIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContractsPublicItemsContractIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetContractsPublicItemsContractIDInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetContractsPublicItemsContractIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicItemsContractIDServiceUnavailable creates a GetContractsPublicItemsContractIDServiceUnavailable with default headers values
func NewGetContractsPublicItemsContractIDServiceUnavailable() *GetContractsPublicItemsContractIDServiceUnavailable {
	return &GetContractsPublicItemsContractIDServiceUnavailable{}
}

/*
GetContractsPublicItemsContractIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetContractsPublicItemsContractIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get contracts public items contract Id service unavailable response has a 2xx status code
func (o *GetContractsPublicItemsContractIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contracts public items contract Id service unavailable response has a 3xx status code
func (o *GetContractsPublicItemsContractIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contracts public items contract Id service unavailable response has a 4xx status code
func (o *GetContractsPublicItemsContractIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contracts public items contract Id service unavailable response has a 5xx status code
func (o *GetContractsPublicItemsContractIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get contracts public items contract Id service unavailable response a status code equal to that given
func (o *GetContractsPublicItemsContractIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get contracts public items contract Id service unavailable response
func (o *GetContractsPublicItemsContractIDServiceUnavailable) Code() int {
	return 503
}

func (o *GetContractsPublicItemsContractIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContractsPublicItemsContractIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetContractsPublicItemsContractIDServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetContractsPublicItemsContractIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicItemsContractIDGatewayTimeout creates a GetContractsPublicItemsContractIDGatewayTimeout with default headers values
func NewGetContractsPublicItemsContractIDGatewayTimeout() *GetContractsPublicItemsContractIDGatewayTimeout {
	return &GetContractsPublicItemsContractIDGatewayTimeout{}
}

/*
GetContractsPublicItemsContractIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetContractsPublicItemsContractIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get contracts public items contract Id gateway timeout response has a 2xx status code
func (o *GetContractsPublicItemsContractIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contracts public items contract Id gateway timeout response has a 3xx status code
func (o *GetContractsPublicItemsContractIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contracts public items contract Id gateway timeout response has a 4xx status code
func (o *GetContractsPublicItemsContractIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contracts public items contract Id gateway timeout response has a 5xx status code
func (o *GetContractsPublicItemsContractIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get contracts public items contract Id gateway timeout response a status code equal to that given
func (o *GetContractsPublicItemsContractIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the get contracts public items contract Id gateway timeout response
func (o *GetContractsPublicItemsContractIDGatewayTimeout) Code() int {
	return 504
}

func (o *GetContractsPublicItemsContractIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContractsPublicItemsContractIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/contracts/public/items/{contract_id}/][%d] getContractsPublicItemsContractIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetContractsPublicItemsContractIDGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetContractsPublicItemsContractIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetContractsPublicItemsContractIDForbiddenBody get_contracts_public_items_contract_id_forbidden
//
// Forbidden
swagger:model GetContractsPublicItemsContractIDForbiddenBody
*/
type GetContractsPublicItemsContractIDForbiddenBody struct {

	// get_contracts_public_items_contract_id_403_forbidden
	//
	// Forbidden message
	Error string `json:"error,omitempty"`
}

// Validate validates this get contracts public items contract ID forbidden body
func (o *GetContractsPublicItemsContractIDForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get contracts public items contract ID forbidden body based on context it is used
func (o *GetContractsPublicItemsContractIDForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetContractsPublicItemsContractIDForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetContractsPublicItemsContractIDForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetContractsPublicItemsContractIDForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetContractsPublicItemsContractIDNotFoundBody get_contracts_public_items_contract_id_not_found
//
// Not found
swagger:model GetContractsPublicItemsContractIDNotFoundBody
*/
type GetContractsPublicItemsContractIDNotFoundBody struct {

	// get_contracts_public_items_contract_id_404_not_found
	//
	// Not found message
	Error string `json:"error,omitempty"`
}

// Validate validates this get contracts public items contract ID not found body
func (o *GetContractsPublicItemsContractIDNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get contracts public items contract ID not found body based on context it is used
func (o *GetContractsPublicItemsContractIDNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetContractsPublicItemsContractIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetContractsPublicItemsContractIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetContractsPublicItemsContractIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetContractsPublicItemsContractIDOKBodyItems0 get_contracts_public_items_contract_id_200_ok
//
// 200 ok object
swagger:model GetContractsPublicItemsContractIDOKBodyItems0
*/
type GetContractsPublicItemsContractIDOKBodyItems0 struct {

	// get_contracts_public_items_contract_id_is_blueprint_copy
	//
	// is_blueprint_copy boolean
	IsBlueprintCopy bool `json:"is_blueprint_copy,omitempty"`

	// get_contracts_public_items_contract_id_is_included
	//
	// true if the contract issuer has submitted this item with the contract, false if the isser is asking for this item in the contract
	// Required: true
	IsIncluded *bool `json:"is_included"`

	// get_contracts_public_items_contract_id_item_id
	//
	// Unique ID for the item being sold. Not present if item is being requested by contract rather than sold with contract
	ItemID int64 `json:"item_id,omitempty"`

	// get_contracts_public_items_contract_id_material_efficiency
	//
	// Material Efficiency Level of the blueprint
	// Maximum: 25
	// Minimum: 0
	MaterialEfficiency *int32 `json:"material_efficiency,omitempty"`

	// get_contracts_public_items_contract_id_quantity
	//
	// Number of items in the stack
	// Required: true
	Quantity *int32 `json:"quantity"`

	// get_contracts_public_items_contract_id_record_id
	//
	// Unique ID for the item, used by the contract system
	// Required: true
	RecordID *int64 `json:"record_id"`

	// get_contracts_public_items_contract_id_runs
	//
	// Number of runs remaining if the blueprint is a copy, -1 if it is an original
	// Minimum: -1
	Runs int32 `json:"runs,omitempty"`

	// get_contracts_public_items_contract_id_time_efficiency
	//
	// Time Efficiency Level of the blueprint
	// Maximum: 20
	// Minimum: 0
	TimeEfficiency *int32 `json:"time_efficiency,omitempty"`

	// get_contracts_public_items_contract_id_type_id
	//
	// Type ID for item
	// Required: true
	TypeID *int32 `json:"type_id"`
}

// Validate validates this get contracts public items contract ID o k body items0
func (o *GetContractsPublicItemsContractIDOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateIsIncluded(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMaterialEfficiency(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateQuantity(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRecordID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRuns(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTimeEfficiency(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTypeID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetContractsPublicItemsContractIDOKBodyItems0) validateIsIncluded(formats strfmt.Registry) error {

	if err := validate.Required("is_included", "body", o.IsIncluded); err != nil {
		return err
	}

	return nil
}

func (o *GetContractsPublicItemsContractIDOKBodyItems0) validateMaterialEfficiency(formats strfmt.Registry) error {
	if swag.IsZero(o.MaterialEfficiency) { // not required
		return nil
	}

	if err := validate.MinimumInt("material_efficiency", "body", int64(*o.MaterialEfficiency), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("material_efficiency", "body", int64(*o.MaterialEfficiency), 25, false); err != nil {
		return err
	}

	return nil
}

func (o *GetContractsPublicItemsContractIDOKBodyItems0) validateQuantity(formats strfmt.Registry) error {

	if err := validate.Required("quantity", "body", o.Quantity); err != nil {
		return err
	}

	return nil
}

func (o *GetContractsPublicItemsContractIDOKBodyItems0) validateRecordID(formats strfmt.Registry) error {

	if err := validate.Required("record_id", "body", o.RecordID); err != nil {
		return err
	}

	return nil
}

func (o *GetContractsPublicItemsContractIDOKBodyItems0) validateRuns(formats strfmt.Registry) error {
	if swag.IsZero(o.Runs) { // not required
		return nil
	}

	if err := validate.MinimumInt("runs", "body", int64(o.Runs), -1, false); err != nil {
		return err
	}

	return nil
}

func (o *GetContractsPublicItemsContractIDOKBodyItems0) validateTimeEfficiency(formats strfmt.Registry) error {
	if swag.IsZero(o.TimeEfficiency) { // not required
		return nil
	}

	if err := validate.MinimumInt("time_efficiency", "body", int64(*o.TimeEfficiency), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("time_efficiency", "body", int64(*o.TimeEfficiency), 20, false); err != nil {
		return err
	}

	return nil
}

func (o *GetContractsPublicItemsContractIDOKBodyItems0) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("type_id", "body", o.TypeID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get contracts public items contract ID o k body items0 based on context it is used
func (o *GetContractsPublicItemsContractIDOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetContractsPublicItemsContractIDOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetContractsPublicItemsContractIDOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetContractsPublicItemsContractIDOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
