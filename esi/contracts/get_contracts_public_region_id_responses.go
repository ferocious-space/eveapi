// Code generated by go-swagger; DO NOT EDIT.

package contracts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetContractsPublicRegionIDReader is a Reader for the GetContractsPublicRegionID structure.
type GetContractsPublicRegionIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContractsPublicRegionIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContractsPublicRegionIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetContractsPublicRegionIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetContractsPublicRegionIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContractsPublicRegionIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetContractsPublicRegionIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContractsPublicRegionIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetContractsPublicRegionIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetContractsPublicRegionIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContractsPublicRegionIDOK creates a GetContractsPublicRegionIDOK with default headers values
func NewGetContractsPublicRegionIDOK() *GetContractsPublicRegionIDOK {
	var (
		// initialize headers with default values
		xPagesDefault = int32(1)
	)

	return &GetContractsPublicRegionIDOK{

		XPages: xPagesDefault,
	}
}

/* GetContractsPublicRegionIDOK describes a response with status code 200, with default header values.

A list of contracts
*/
type GetContractsPublicRegionIDOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	/* Maximum page number

	   Format: int32
	   Default: 1
	*/
	XPages int32

	Payload []*GetContractsPublicRegionIDOKBodyItems0
}

func (o *GetContractsPublicRegionIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/{region_id}/][%d] getContractsPublicRegionIdOK  %+v", 200, o.Payload)
}
func (o *GetContractsPublicRegionIDOK) GetPayload() []*GetContractsPublicRegionIDOKBodyItems0 {
	return o.Payload
}

func (o *GetContractsPublicRegionIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header X-Pages
	hdrXPages := response.GetHeader("X-Pages")

	if hdrXPages != "" {
		valxPages, err := swag.ConvertInt32(hdrXPages)
		if err != nil {
			return errors.InvalidType("X-Pages", "header", "int32", hdrXPages)
		}
		o.XPages = valxPages
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicRegionIDNotModified creates a GetContractsPublicRegionIDNotModified with default headers values
func NewGetContractsPublicRegionIDNotModified() *GetContractsPublicRegionIDNotModified {
	return &GetContractsPublicRegionIDNotModified{}
}

/* GetContractsPublicRegionIDNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetContractsPublicRegionIDNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetContractsPublicRegionIDNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/{region_id}/][%d] getContractsPublicRegionIdNotModified ", 304)
}

func (o *GetContractsPublicRegionIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetContractsPublicRegionIDBadRequest creates a GetContractsPublicRegionIDBadRequest with default headers values
func NewGetContractsPublicRegionIDBadRequest() *GetContractsPublicRegionIDBadRequest {
	return &GetContractsPublicRegionIDBadRequest{}
}

/* GetContractsPublicRegionIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetContractsPublicRegionIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetContractsPublicRegionIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/{region_id}/][%d] getContractsPublicRegionIdBadRequest  %+v", 400, o.Payload)
}
func (o *GetContractsPublicRegionIDBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetContractsPublicRegionIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicRegionIDNotFound creates a GetContractsPublicRegionIDNotFound with default headers values
func NewGetContractsPublicRegionIDNotFound() *GetContractsPublicRegionIDNotFound {
	return &GetContractsPublicRegionIDNotFound{}
}

/* GetContractsPublicRegionIDNotFound describes a response with status code 404, with default header values.

Region not found
*/
type GetContractsPublicRegionIDNotFound struct {
	Payload *GetContractsPublicRegionIDNotFoundBody
}

func (o *GetContractsPublicRegionIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/{region_id}/][%d] getContractsPublicRegionIdNotFound  %+v", 404, o.Payload)
}
func (o *GetContractsPublicRegionIDNotFound) GetPayload() *GetContractsPublicRegionIDNotFoundBody {
	return o.Payload
}

func (o *GetContractsPublicRegionIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetContractsPublicRegionIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicRegionIDEnhanceYourCalm creates a GetContractsPublicRegionIDEnhanceYourCalm with default headers values
func NewGetContractsPublicRegionIDEnhanceYourCalm() *GetContractsPublicRegionIDEnhanceYourCalm {
	return &GetContractsPublicRegionIDEnhanceYourCalm{}
}

/* GetContractsPublicRegionIDEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetContractsPublicRegionIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetContractsPublicRegionIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/{region_id}/][%d] getContractsPublicRegionIdEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetContractsPublicRegionIDEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetContractsPublicRegionIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicRegionIDInternalServerError creates a GetContractsPublicRegionIDInternalServerError with default headers values
func NewGetContractsPublicRegionIDInternalServerError() *GetContractsPublicRegionIDInternalServerError {
	return &GetContractsPublicRegionIDInternalServerError{}
}

/* GetContractsPublicRegionIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetContractsPublicRegionIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetContractsPublicRegionIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/{region_id}/][%d] getContractsPublicRegionIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetContractsPublicRegionIDInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetContractsPublicRegionIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicRegionIDServiceUnavailable creates a GetContractsPublicRegionIDServiceUnavailable with default headers values
func NewGetContractsPublicRegionIDServiceUnavailable() *GetContractsPublicRegionIDServiceUnavailable {
	return &GetContractsPublicRegionIDServiceUnavailable{}
}

/* GetContractsPublicRegionIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetContractsPublicRegionIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetContractsPublicRegionIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/{region_id}/][%d] getContractsPublicRegionIdServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetContractsPublicRegionIDServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetContractsPublicRegionIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicRegionIDGatewayTimeout creates a GetContractsPublicRegionIDGatewayTimeout with default headers values
func NewGetContractsPublicRegionIDGatewayTimeout() *GetContractsPublicRegionIDGatewayTimeout {
	return &GetContractsPublicRegionIDGatewayTimeout{}
}

/* GetContractsPublicRegionIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetContractsPublicRegionIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetContractsPublicRegionIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/{region_id}/][%d] getContractsPublicRegionIdGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetContractsPublicRegionIDGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetContractsPublicRegionIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetContractsPublicRegionIDNotFoundBody get_contracts_public_region_id_not_found
//
// Not found
swagger:model GetContractsPublicRegionIDNotFoundBody
*/
type GetContractsPublicRegionIDNotFoundBody struct {

	// get_contracts_public_region_id_404_not_found
	//
	// Not found message
	Error string `json:"error,omitempty"`
}

// Validate validates this get contracts public region ID not found body
func (o *GetContractsPublicRegionIDNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get contracts public region ID not found body based on context it is used
func (o *GetContractsPublicRegionIDNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetContractsPublicRegionIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetContractsPublicRegionIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetContractsPublicRegionIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetContractsPublicRegionIDOKBodyItems0 get_contracts_public_region_id_200_ok
//
// 200 ok object
swagger:model GetContractsPublicRegionIDOKBodyItems0
*/
type GetContractsPublicRegionIDOKBodyItems0 struct {

	// get_contracts_public_region_id_buyout
	//
	// Buyout price (for Auctions only)
	Buyout float64 `json:"buyout,omitempty"`

	// get_contracts_public_region_id_collateral
	//
	// Collateral price (for Couriers only)
	Collateral float64 `json:"collateral,omitempty"`

	// get_contracts_public_region_id_contract_id
	//
	// contract_id integer
	// Required: true
	ContractID *int32 `json:"contract_id"`

	// get_contracts_public_region_id_date_expired
	//
	// Expiration date of the contract
	// Required: true
	// Format: date-time
	DateExpired *strfmt.DateTime `json:"date_expired"`

	// get_contracts_public_region_id_date_issued
	//
	// Сreation date of the contract
	// Required: true
	// Format: date-time
	DateIssued *strfmt.DateTime `json:"date_issued"`

	// get_contracts_public_region_id_days_to_complete
	//
	// Number of days to perform the contract
	DaysToComplete int32 `json:"days_to_complete,omitempty"`

	// get_contracts_public_region_id_end_location_id
	//
	// End location ID (for Couriers contract)
	EndLocationID int64 `json:"end_location_id,omitempty"`

	// get_contracts_public_region_id_for_corporation
	//
	// true if the contract was issued on behalf of the issuer's corporation
	ForCorporation bool `json:"for_corporation,omitempty"`

	// get_contracts_public_region_id_issuer_corporation_id
	//
	// Character's corporation ID for the issuer
	// Required: true
	IssuerCorporationID *int32 `json:"issuer_corporation_id"`

	// get_contracts_public_region_id_issuer_id
	//
	// Character ID for the issuer
	// Required: true
	IssuerID *int32 `json:"issuer_id"`

	// get_contracts_public_region_id_price
	//
	// Price of contract (for ItemsExchange and Auctions)
	Price float64 `json:"price,omitempty"`

	// get_contracts_public_region_id_reward
	//
	// Remuneration for contract (for Couriers only)
	Reward float64 `json:"reward,omitempty"`

	// get_contracts_public_region_id_start_location_id
	//
	// Start location ID (for Couriers contract)
	StartLocationID int64 `json:"start_location_id,omitempty"`

	// get_contracts_public_region_id_title
	//
	// Title of the contract
	Title string `json:"title,omitempty"`

	// get_contracts_public_region_id_type
	//
	// Type of the contract
	// Required: true
	// Enum: [unknown item_exchange auction courier loan]
	Type *string `json:"type"`

	// get_contracts_public_region_id_volume
	//
	// Volume of items in the contract
	Volume float64 `json:"volume,omitempty"`
}

// Validate validates this get contracts public region ID o k body items0
func (o *GetContractsPublicRegionIDOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateContractID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDateExpired(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDateIssued(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIssuerCorporationID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIssuerID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetContractsPublicRegionIDOKBodyItems0) validateContractID(formats strfmt.Registry) error {

	if err := validate.Required("contract_id", "body", o.ContractID); err != nil {
		return err
	}

	return nil
}

func (o *GetContractsPublicRegionIDOKBodyItems0) validateDateExpired(formats strfmt.Registry) error {

	if err := validate.Required("date_expired", "body", o.DateExpired); err != nil {
		return err
	}

	if err := validate.FormatOf("date_expired", "body", "date-time", o.DateExpired.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetContractsPublicRegionIDOKBodyItems0) validateDateIssued(formats strfmt.Registry) error {

	if err := validate.Required("date_issued", "body", o.DateIssued); err != nil {
		return err
	}

	if err := validate.FormatOf("date_issued", "body", "date-time", o.DateIssued.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetContractsPublicRegionIDOKBodyItems0) validateIssuerCorporationID(formats strfmt.Registry) error {

	if err := validate.Required("issuer_corporation_id", "body", o.IssuerCorporationID); err != nil {
		return err
	}

	return nil
}

func (o *GetContractsPublicRegionIDOKBodyItems0) validateIssuerID(formats strfmt.Registry) error {

	if err := validate.Required("issuer_id", "body", o.IssuerID); err != nil {
		return err
	}

	return nil
}

var getContractsPublicRegionIdOKBodyItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["unknown","item_exchange","auction","courier","loan"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getContractsPublicRegionIdOKBodyItems0TypeTypePropEnum = append(getContractsPublicRegionIdOKBodyItems0TypeTypePropEnum, v)
	}
}

const (

	// GetContractsPublicRegionIDOKBodyItems0TypeUnknown captures enum value "unknown"
	GetContractsPublicRegionIDOKBodyItems0TypeUnknown string = "unknown"

	// GetContractsPublicRegionIDOKBodyItems0TypeItemExchange captures enum value "item_exchange"
	GetContractsPublicRegionIDOKBodyItems0TypeItemExchange string = "item_exchange"

	// GetContractsPublicRegionIDOKBodyItems0TypeAuction captures enum value "auction"
	GetContractsPublicRegionIDOKBodyItems0TypeAuction string = "auction"

	// GetContractsPublicRegionIDOKBodyItems0TypeCourier captures enum value "courier"
	GetContractsPublicRegionIDOKBodyItems0TypeCourier string = "courier"

	// GetContractsPublicRegionIDOKBodyItems0TypeLoan captures enum value "loan"
	GetContractsPublicRegionIDOKBodyItems0TypeLoan string = "loan"
)

// prop value enum
func (o *GetContractsPublicRegionIDOKBodyItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getContractsPublicRegionIdOKBodyItems0TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetContractsPublicRegionIDOKBodyItems0) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get contracts public region ID o k body items0 based on context it is used
func (o *GetContractsPublicRegionIDOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetContractsPublicRegionIDOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetContractsPublicRegionIDOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetContractsPublicRegionIDOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
