// Code generated by go-swagger; DO NOT EDIT.

package contracts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetContractsPublicBidsContractIDReader is a Reader for the GetContractsPublicBidsContractID structure.
type GetContractsPublicBidsContractIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContractsPublicBidsContractIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContractsPublicBidsContractIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetContractsPublicBidsContractIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetContractsPublicBidsContractIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetContractsPublicBidsContractIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContractsPublicBidsContractIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContractsPublicBidsContractIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetContractsPublicBidsContractIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContractsPublicBidsContractIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetContractsPublicBidsContractIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetContractsPublicBidsContractIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContractsPublicBidsContractIDOK creates a GetContractsPublicBidsContractIDOK with default headers values
func NewGetContractsPublicBidsContractIDOK() *GetContractsPublicBidsContractIDOK {
	var (
		// initialize headers with default values
		xPagesDefault = int32(1)
	)

	return &GetContractsPublicBidsContractIDOK{

		XPages: xPagesDefault,
	}
}

/* GetContractsPublicBidsContractIDOK describes a response with status code 200, with default header values.

A list of bids
*/
type GetContractsPublicBidsContractIDOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	/* Maximum page number

	   Format: int32
	   Default: 1
	*/
	XPages int32

	Payload []*GetContractsPublicBidsContractIDOKBodyItems0
}

func (o *GetContractsPublicBidsContractIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/bids/{contract_id}/][%d] getContractsPublicBidsContractIdOK  %+v", 200, o.Payload)
}
func (o *GetContractsPublicBidsContractIDOK) GetPayload() []*GetContractsPublicBidsContractIDOKBodyItems0 {
	return o.Payload
}

func (o *GetContractsPublicBidsContractIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header X-Pages
	hdrXPages := response.GetHeader("X-Pages")

	if hdrXPages != "" {
		valxPages, err := swag.ConvertInt32(hdrXPages)
		if err != nil {
			return errors.InvalidType("X-Pages", "header", "int32", hdrXPages)
		}
		o.XPages = valxPages
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicBidsContractIDNoContent creates a GetContractsPublicBidsContractIDNoContent with default headers values
func NewGetContractsPublicBidsContractIDNoContent() *GetContractsPublicBidsContractIDNoContent {
	return &GetContractsPublicBidsContractIDNoContent{}
}

/* GetContractsPublicBidsContractIDNoContent describes a response with status code 204, with default header values.

Contract expired or recently accepted by player
*/
type GetContractsPublicBidsContractIDNoContent struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetContractsPublicBidsContractIDNoContent) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/bids/{contract_id}/][%d] getContractsPublicBidsContractIdNoContent ", 204)
}

func (o *GetContractsPublicBidsContractIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetContractsPublicBidsContractIDNotModified creates a GetContractsPublicBidsContractIDNotModified with default headers values
func NewGetContractsPublicBidsContractIDNotModified() *GetContractsPublicBidsContractIDNotModified {
	return &GetContractsPublicBidsContractIDNotModified{}
}

/* GetContractsPublicBidsContractIDNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetContractsPublicBidsContractIDNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetContractsPublicBidsContractIDNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/bids/{contract_id}/][%d] getContractsPublicBidsContractIdNotModified ", 304)
}

func (o *GetContractsPublicBidsContractIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetContractsPublicBidsContractIDBadRequest creates a GetContractsPublicBidsContractIDBadRequest with default headers values
func NewGetContractsPublicBidsContractIDBadRequest() *GetContractsPublicBidsContractIDBadRequest {
	return &GetContractsPublicBidsContractIDBadRequest{}
}

/* GetContractsPublicBidsContractIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetContractsPublicBidsContractIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetContractsPublicBidsContractIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/bids/{contract_id}/][%d] getContractsPublicBidsContractIdBadRequest  %+v", 400, o.Payload)
}
func (o *GetContractsPublicBidsContractIDBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetContractsPublicBidsContractIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicBidsContractIDForbidden creates a GetContractsPublicBidsContractIDForbidden with default headers values
func NewGetContractsPublicBidsContractIDForbidden() *GetContractsPublicBidsContractIDForbidden {
	return &GetContractsPublicBidsContractIDForbidden{}
}

/* GetContractsPublicBidsContractIDForbidden describes a response with status code 403, with default header values.

Not Authorized to see contract
*/
type GetContractsPublicBidsContractIDForbidden struct {
	Payload *GetContractsPublicBidsContractIDForbiddenBody
}

func (o *GetContractsPublicBidsContractIDForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/bids/{contract_id}/][%d] getContractsPublicBidsContractIdForbidden  %+v", 403, o.Payload)
}
func (o *GetContractsPublicBidsContractIDForbidden) GetPayload() *GetContractsPublicBidsContractIDForbiddenBody {
	return o.Payload
}

func (o *GetContractsPublicBidsContractIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetContractsPublicBidsContractIDForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicBidsContractIDNotFound creates a GetContractsPublicBidsContractIDNotFound with default headers values
func NewGetContractsPublicBidsContractIDNotFound() *GetContractsPublicBidsContractIDNotFound {
	return &GetContractsPublicBidsContractIDNotFound{}
}

/* GetContractsPublicBidsContractIDNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetContractsPublicBidsContractIDNotFound struct {
	Payload *GetContractsPublicBidsContractIDNotFoundBody
}

func (o *GetContractsPublicBidsContractIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/bids/{contract_id}/][%d] getContractsPublicBidsContractIdNotFound  %+v", 404, o.Payload)
}
func (o *GetContractsPublicBidsContractIDNotFound) GetPayload() *GetContractsPublicBidsContractIDNotFoundBody {
	return o.Payload
}

func (o *GetContractsPublicBidsContractIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetContractsPublicBidsContractIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicBidsContractIDEnhanceYourCalm creates a GetContractsPublicBidsContractIDEnhanceYourCalm with default headers values
func NewGetContractsPublicBidsContractIDEnhanceYourCalm() *GetContractsPublicBidsContractIDEnhanceYourCalm {
	return &GetContractsPublicBidsContractIDEnhanceYourCalm{}
}

/* GetContractsPublicBidsContractIDEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetContractsPublicBidsContractIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetContractsPublicBidsContractIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/bids/{contract_id}/][%d] getContractsPublicBidsContractIdEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetContractsPublicBidsContractIDEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetContractsPublicBidsContractIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicBidsContractIDInternalServerError creates a GetContractsPublicBidsContractIDInternalServerError with default headers values
func NewGetContractsPublicBidsContractIDInternalServerError() *GetContractsPublicBidsContractIDInternalServerError {
	return &GetContractsPublicBidsContractIDInternalServerError{}
}

/* GetContractsPublicBidsContractIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetContractsPublicBidsContractIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetContractsPublicBidsContractIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/bids/{contract_id}/][%d] getContractsPublicBidsContractIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetContractsPublicBidsContractIDInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetContractsPublicBidsContractIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicBidsContractIDServiceUnavailable creates a GetContractsPublicBidsContractIDServiceUnavailable with default headers values
func NewGetContractsPublicBidsContractIDServiceUnavailable() *GetContractsPublicBidsContractIDServiceUnavailable {
	return &GetContractsPublicBidsContractIDServiceUnavailable{}
}

/* GetContractsPublicBidsContractIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetContractsPublicBidsContractIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetContractsPublicBidsContractIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/bids/{contract_id}/][%d] getContractsPublicBidsContractIdServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetContractsPublicBidsContractIDServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetContractsPublicBidsContractIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContractsPublicBidsContractIDGatewayTimeout creates a GetContractsPublicBidsContractIDGatewayTimeout with default headers values
func NewGetContractsPublicBidsContractIDGatewayTimeout() *GetContractsPublicBidsContractIDGatewayTimeout {
	return &GetContractsPublicBidsContractIDGatewayTimeout{}
}

/* GetContractsPublicBidsContractIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetContractsPublicBidsContractIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetContractsPublicBidsContractIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/contracts/public/bids/{contract_id}/][%d] getContractsPublicBidsContractIdGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetContractsPublicBidsContractIDGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetContractsPublicBidsContractIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetContractsPublicBidsContractIDForbiddenBody get_contracts_public_bids_contract_id_forbidden
//
// Forbidden
swagger:model GetContractsPublicBidsContractIDForbiddenBody
*/
type GetContractsPublicBidsContractIDForbiddenBody struct {

	// get_contracts_public_bids_contract_id_403_forbidden
	//
	// Forbidden message
	Error string `json:"error,omitempty"`
}

// Validate validates this get contracts public bids contract ID forbidden body
func (o *GetContractsPublicBidsContractIDForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get contracts public bids contract ID forbidden body based on context it is used
func (o *GetContractsPublicBidsContractIDForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetContractsPublicBidsContractIDForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetContractsPublicBidsContractIDForbiddenBody) UnmarshalBinary(b []byte) error {
	var res GetContractsPublicBidsContractIDForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetContractsPublicBidsContractIDNotFoundBody get_contracts_public_bids_contract_id_not_found
//
// Not found
swagger:model GetContractsPublicBidsContractIDNotFoundBody
*/
type GetContractsPublicBidsContractIDNotFoundBody struct {

	// get_contracts_public_bids_contract_id_404_not_found
	//
	// Not found message
	Error string `json:"error,omitempty"`
}

// Validate validates this get contracts public bids contract ID not found body
func (o *GetContractsPublicBidsContractIDNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get contracts public bids contract ID not found body based on context it is used
func (o *GetContractsPublicBidsContractIDNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetContractsPublicBidsContractIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetContractsPublicBidsContractIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetContractsPublicBidsContractIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetContractsPublicBidsContractIDOKBodyItems0 get_contracts_public_bids_contract_id_200_ok
//
// 200 ok object
swagger:model GetContractsPublicBidsContractIDOKBodyItems0
*/
type GetContractsPublicBidsContractIDOKBodyItems0 struct {

	// get_contracts_public_bids_contract_id_amount
	//
	// The amount bid, in ISK
	// Required: true
	Amount *float32 `json:"amount"`

	// get_contracts_public_bids_contract_id_bid_id
	//
	// Unique ID for the bid
	// Required: true
	BidID *int32 `json:"bid_id"`

	// get_contracts_public_bids_contract_id_date_bid
	//
	// Datetime when the bid was placed
	// Required: true
	// Format: date-time
	DateBid *strfmt.DateTime `json:"date_bid"`
}

// Validate validates this get contracts public bids contract ID o k body items0
func (o *GetContractsPublicBidsContractIDOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBidID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDateBid(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetContractsPublicBidsContractIDOKBodyItems0) validateAmount(formats strfmt.Registry) error {

	if err := validate.Required("amount", "body", o.Amount); err != nil {
		return err
	}

	return nil
}

func (o *GetContractsPublicBidsContractIDOKBodyItems0) validateBidID(formats strfmt.Registry) error {

	if err := validate.Required("bid_id", "body", o.BidID); err != nil {
		return err
	}

	return nil
}

func (o *GetContractsPublicBidsContractIDOKBodyItems0) validateDateBid(formats strfmt.Registry) error {

	if err := validate.Required("date_bid", "body", o.DateBid); err != nil {
		return err
	}

	if err := validate.FormatOf("date_bid", "body", "date-time", o.DateBid.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get contracts public bids contract ID o k body items0 based on context it is used
func (o *GetContractsPublicBidsContractIDOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetContractsPublicBidsContractIDOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetContractsPublicBidsContractIDOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetContractsPublicBidsContractIDOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
