// Code generated by go-swagger; DO NOT EDIT.

package industry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCorporationCorporationIDMiningExtractionsReader is a Reader for the GetCorporationCorporationIDMiningExtractions structure.
type GetCorporationCorporationIDMiningExtractionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationCorporationIDMiningExtractionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCorporationCorporationIDMiningExtractionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCorporationCorporationIDMiningExtractionsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCorporationCorporationIDMiningExtractionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCorporationCorporationIDMiningExtractionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCorporationCorporationIDMiningExtractionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCorporationCorporationIDMiningExtractionsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCorporationCorporationIDMiningExtractionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCorporationCorporationIDMiningExtractionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCorporationCorporationIDMiningExtractionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCorporationCorporationIDMiningExtractionsOK creates a GetCorporationCorporationIDMiningExtractionsOK with default headers values
func NewGetCorporationCorporationIDMiningExtractionsOK() *GetCorporationCorporationIDMiningExtractionsOK {
	var (
		// initialize headers with default values
		xPagesDefault = int32(1)
	)

	return &GetCorporationCorporationIDMiningExtractionsOK{

		XPages: xPagesDefault,
	}
}

/*
GetCorporationCorporationIDMiningExtractionsOK describes a response with status code 200, with default header values.

A list of chunk timers
*/
type GetCorporationCorporationIDMiningExtractionsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	/* Maximum page number

	   Format: int32
	   Default: 1
	*/
	XPages int32

	Payload []*GetCorporationCorporationIDMiningExtractionsOKBodyItems0
}

// IsSuccess returns true when this get corporation corporation Id mining extractions o k response has a 2xx status code
func (o *GetCorporationCorporationIDMiningExtractionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get corporation corporation Id mining extractions o k response has a 3xx status code
func (o *GetCorporationCorporationIDMiningExtractionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporation corporation Id mining extractions o k response has a 4xx status code
func (o *GetCorporationCorporationIDMiningExtractionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporation corporation Id mining extractions o k response has a 5xx status code
func (o *GetCorporationCorporationIDMiningExtractionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporation corporation Id mining extractions o k response a status code equal to that given
func (o *GetCorporationCorporationIDMiningExtractionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCorporationCorporationIDMiningExtractionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsOK  %+v", 200, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsOK) String() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsOK  %+v", 200, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsOK) GetPayload() []*GetCorporationCorporationIDMiningExtractionsOKBodyItems0 {
	return o.Payload
}

func (o *GetCorporationCorporationIDMiningExtractionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header X-Pages
	hdrXPages := response.GetHeader("X-Pages")

	if hdrXPages != "" {
		valxPages, err := swag.ConvertInt32(hdrXPages)
		if err != nil {
			return errors.InvalidType("X-Pages", "header", "int32", hdrXPages)
		}
		o.XPages = valxPages
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsNotModified creates a GetCorporationCorporationIDMiningExtractionsNotModified with default headers values
func NewGetCorporationCorporationIDMiningExtractionsNotModified() *GetCorporationCorporationIDMiningExtractionsNotModified {
	return &GetCorporationCorporationIDMiningExtractionsNotModified{}
}

/*
GetCorporationCorporationIDMiningExtractionsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCorporationCorporationIDMiningExtractionsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get corporation corporation Id mining extractions not modified response has a 2xx status code
func (o *GetCorporationCorporationIDMiningExtractionsNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporation corporation Id mining extractions not modified response has a 3xx status code
func (o *GetCorporationCorporationIDMiningExtractionsNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get corporation corporation Id mining extractions not modified response has a 4xx status code
func (o *GetCorporationCorporationIDMiningExtractionsNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporation corporation Id mining extractions not modified response has a 5xx status code
func (o *GetCorporationCorporationIDMiningExtractionsNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporation corporation Id mining extractions not modified response a status code equal to that given
func (o *GetCorporationCorporationIDMiningExtractionsNotModified) IsCode(code int) bool {
	return code == 304
}

func (o *GetCorporationCorporationIDMiningExtractionsNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsNotModified ", 304)
}

func (o *GetCorporationCorporationIDMiningExtractionsNotModified) String() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsNotModified ", 304)
}

func (o *GetCorporationCorporationIDMiningExtractionsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsBadRequest creates a GetCorporationCorporationIDMiningExtractionsBadRequest with default headers values
func NewGetCorporationCorporationIDMiningExtractionsBadRequest() *GetCorporationCorporationIDMiningExtractionsBadRequest {
	return &GetCorporationCorporationIDMiningExtractionsBadRequest{}
}

/*
GetCorporationCorporationIDMiningExtractionsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCorporationCorporationIDMiningExtractionsBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get corporation corporation Id mining extractions bad request response has a 2xx status code
func (o *GetCorporationCorporationIDMiningExtractionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporation corporation Id mining extractions bad request response has a 3xx status code
func (o *GetCorporationCorporationIDMiningExtractionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporation corporation Id mining extractions bad request response has a 4xx status code
func (o *GetCorporationCorporationIDMiningExtractionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporation corporation Id mining extractions bad request response has a 5xx status code
func (o *GetCorporationCorporationIDMiningExtractionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporation corporation Id mining extractions bad request response a status code equal to that given
func (o *GetCorporationCorporationIDMiningExtractionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetCorporationCorporationIDMiningExtractionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCorporationCorporationIDMiningExtractionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsUnauthorized creates a GetCorporationCorporationIDMiningExtractionsUnauthorized with default headers values
func NewGetCorporationCorporationIDMiningExtractionsUnauthorized() *GetCorporationCorporationIDMiningExtractionsUnauthorized {
	return &GetCorporationCorporationIDMiningExtractionsUnauthorized{}
}

/*
GetCorporationCorporationIDMiningExtractionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCorporationCorporationIDMiningExtractionsUnauthorized struct {
	Payload *models.Unauthorized
}

// IsSuccess returns true when this get corporation corporation Id mining extractions unauthorized response has a 2xx status code
func (o *GetCorporationCorporationIDMiningExtractionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporation corporation Id mining extractions unauthorized response has a 3xx status code
func (o *GetCorporationCorporationIDMiningExtractionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporation corporation Id mining extractions unauthorized response has a 4xx status code
func (o *GetCorporationCorporationIDMiningExtractionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporation corporation Id mining extractions unauthorized response has a 5xx status code
func (o *GetCorporationCorporationIDMiningExtractionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporation corporation Id mining extractions unauthorized response a status code equal to that given
func (o *GetCorporationCorporationIDMiningExtractionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetCorporationCorporationIDMiningExtractionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCorporationCorporationIDMiningExtractionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsForbidden creates a GetCorporationCorporationIDMiningExtractionsForbidden with default headers values
func NewGetCorporationCorporationIDMiningExtractionsForbidden() *GetCorporationCorporationIDMiningExtractionsForbidden {
	return &GetCorporationCorporationIDMiningExtractionsForbidden{}
}

/*
GetCorporationCorporationIDMiningExtractionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCorporationCorporationIDMiningExtractionsForbidden struct {
	Payload *models.Forbidden
}

// IsSuccess returns true when this get corporation corporation Id mining extractions forbidden response has a 2xx status code
func (o *GetCorporationCorporationIDMiningExtractionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporation corporation Id mining extractions forbidden response has a 3xx status code
func (o *GetCorporationCorporationIDMiningExtractionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporation corporation Id mining extractions forbidden response has a 4xx status code
func (o *GetCorporationCorporationIDMiningExtractionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporation corporation Id mining extractions forbidden response has a 5xx status code
func (o *GetCorporationCorporationIDMiningExtractionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporation corporation Id mining extractions forbidden response a status code equal to that given
func (o *GetCorporationCorporationIDMiningExtractionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetCorporationCorporationIDMiningExtractionsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCorporationCorporationIDMiningExtractionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsEnhanceYourCalm creates a GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm with default headers values
func NewGetCorporationCorporationIDMiningExtractionsEnhanceYourCalm() *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm {
	return &GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm{}
}

/*
GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get corporation corporation Id mining extractions enhance your calm response has a 2xx status code
func (o *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporation corporation Id mining extractions enhance your calm response has a 3xx status code
func (o *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporation corporation Id mining extractions enhance your calm response has a 4xx status code
func (o *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get corporation corporation Id mining extractions enhance your calm response has a 5xx status code
func (o *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get corporation corporation Id mining extractions enhance your calm response a status code equal to that given
func (o *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

func (o *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsInternalServerError creates a GetCorporationCorporationIDMiningExtractionsInternalServerError with default headers values
func NewGetCorporationCorporationIDMiningExtractionsInternalServerError() *GetCorporationCorporationIDMiningExtractionsInternalServerError {
	return &GetCorporationCorporationIDMiningExtractionsInternalServerError{}
}

/*
GetCorporationCorporationIDMiningExtractionsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCorporationCorporationIDMiningExtractionsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get corporation corporation Id mining extractions internal server error response has a 2xx status code
func (o *GetCorporationCorporationIDMiningExtractionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporation corporation Id mining extractions internal server error response has a 3xx status code
func (o *GetCorporationCorporationIDMiningExtractionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporation corporation Id mining extractions internal server error response has a 4xx status code
func (o *GetCorporationCorporationIDMiningExtractionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporation corporation Id mining extractions internal server error response has a 5xx status code
func (o *GetCorporationCorporationIDMiningExtractionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporation corporation Id mining extractions internal server error response a status code equal to that given
func (o *GetCorporationCorporationIDMiningExtractionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCorporationCorporationIDMiningExtractionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCorporationCorporationIDMiningExtractionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsServiceUnavailable creates a GetCorporationCorporationIDMiningExtractionsServiceUnavailable with default headers values
func NewGetCorporationCorporationIDMiningExtractionsServiceUnavailable() *GetCorporationCorporationIDMiningExtractionsServiceUnavailable {
	return &GetCorporationCorporationIDMiningExtractionsServiceUnavailable{}
}

/*
GetCorporationCorporationIDMiningExtractionsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCorporationCorporationIDMiningExtractionsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get corporation corporation Id mining extractions service unavailable response has a 2xx status code
func (o *GetCorporationCorporationIDMiningExtractionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporation corporation Id mining extractions service unavailable response has a 3xx status code
func (o *GetCorporationCorporationIDMiningExtractionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporation corporation Id mining extractions service unavailable response has a 4xx status code
func (o *GetCorporationCorporationIDMiningExtractionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporation corporation Id mining extractions service unavailable response has a 5xx status code
func (o *GetCorporationCorporationIDMiningExtractionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporation corporation Id mining extractions service unavailable response a status code equal to that given
func (o *GetCorporationCorporationIDMiningExtractionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetCorporationCorporationIDMiningExtractionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCorporationCorporationIDMiningExtractionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsGatewayTimeout creates a GetCorporationCorporationIDMiningExtractionsGatewayTimeout with default headers values
func NewGetCorporationCorporationIDMiningExtractionsGatewayTimeout() *GetCorporationCorporationIDMiningExtractionsGatewayTimeout {
	return &GetCorporationCorporationIDMiningExtractionsGatewayTimeout{}
}

/*
GetCorporationCorporationIDMiningExtractionsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCorporationCorporationIDMiningExtractionsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get corporation corporation Id mining extractions gateway timeout response has a 2xx status code
func (o *GetCorporationCorporationIDMiningExtractionsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get corporation corporation Id mining extractions gateway timeout response has a 3xx status code
func (o *GetCorporationCorporationIDMiningExtractionsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get corporation corporation Id mining extractions gateway timeout response has a 4xx status code
func (o *GetCorporationCorporationIDMiningExtractionsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get corporation corporation Id mining extractions gateway timeout response has a 5xx status code
func (o *GetCorporationCorporationIDMiningExtractionsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get corporation corporation Id mining extractions gateway timeout response a status code equal to that given
func (o *GetCorporationCorporationIDMiningExtractionsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetCorporationCorporationIDMiningExtractionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCorporationCorporationIDMiningExtractionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCorporationCorporationIDMiningExtractionsOKBodyItems0 get_corporation_corporation_id_mining_extractions_200_ok
//
// 200 ok object
swagger:model GetCorporationCorporationIDMiningExtractionsOKBodyItems0
*/
type GetCorporationCorporationIDMiningExtractionsOKBodyItems0 struct {

	// get_corporation_corporation_id_mining_extractions_chunk_arrival_time
	//
	// The time at which the chunk being extracted will arrive and can be fractured by the moon mining drill.
	//
	// Required: true
	// Format: date-time
	ChunkArrivalTime *strfmt.DateTime `json:"chunk_arrival_time"`

	// get_corporation_corporation_id_mining_extractions_extraction_start_time
	//
	// The time at which the current extraction was initiated.
	//
	// Required: true
	// Format: date-time
	ExtractionStartTime *strfmt.DateTime `json:"extraction_start_time"`

	// get_corporation_corporation_id_mining_extractions_moon_id
	//
	// moon_id integer
	// Required: true
	MoonID *int32 `json:"moon_id"`

	// get_corporation_corporation_id_mining_extractions_natural_decay_time
	//
	// The time at which the chunk being extracted will naturally fracture if it is not first fractured by the moon mining drill.
	//
	// Required: true
	// Format: date-time
	NaturalDecayTime *strfmt.DateTime `json:"natural_decay_time"`

	// get_corporation_corporation_id_mining_extractions_structure_id
	//
	// structure_id integer
	// Required: true
	StructureID *int64 `json:"structure_id"`
}

// Validate validates this get corporation corporation ID mining extractions o k body items0
func (o *GetCorporationCorporationIDMiningExtractionsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateChunkArrivalTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExtractionStartTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMoonID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNaturalDecayTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStructureID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationCorporationIDMiningExtractionsOKBodyItems0) validateChunkArrivalTime(formats strfmt.Registry) error {

	if err := validate.Required("chunk_arrival_time", "body", o.ChunkArrivalTime); err != nil {
		return err
	}

	if err := validate.FormatOf("chunk_arrival_time", "body", "date-time", o.ChunkArrivalTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationCorporationIDMiningExtractionsOKBodyItems0) validateExtractionStartTime(formats strfmt.Registry) error {

	if err := validate.Required("extraction_start_time", "body", o.ExtractionStartTime); err != nil {
		return err
	}

	if err := validate.FormatOf("extraction_start_time", "body", "date-time", o.ExtractionStartTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationCorporationIDMiningExtractionsOKBodyItems0) validateMoonID(formats strfmt.Registry) error {

	if err := validate.Required("moon_id", "body", o.MoonID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationCorporationIDMiningExtractionsOKBodyItems0) validateNaturalDecayTime(formats strfmt.Registry) error {

	if err := validate.Required("natural_decay_time", "body", o.NaturalDecayTime); err != nil {
		return err
	}

	if err := validate.FormatOf("natural_decay_time", "body", "date-time", o.NaturalDecayTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationCorporationIDMiningExtractionsOKBodyItems0) validateStructureID(formats strfmt.Registry) error {

	if err := validate.Required("structure_id", "body", o.StructureID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get corporation corporation ID mining extractions o k body items0 based on context it is used
func (o *GetCorporationCorporationIDMiningExtractionsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationCorporationIDMiningExtractionsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationCorporationIDMiningExtractionsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCorporationCorporationIDMiningExtractionsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
