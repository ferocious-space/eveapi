// Code generated by go-swagger; DO NOT EDIT.

package industry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetCorporationsCorporationIDIndustryJobsReader is a Reader for the GetCorporationsCorporationIDIndustryJobs structure.
type GetCorporationsCorporationIDIndustryJobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDIndustryJobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCorporationsCorporationIDIndustryJobsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCorporationsCorporationIDIndustryJobsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCorporationsCorporationIDIndustryJobsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCorporationsCorporationIDIndustryJobsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCorporationsCorporationIDIndustryJobsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetCorporationsCorporationIDIndustryJobsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCorporationsCorporationIDIndustryJobsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCorporationsCorporationIDIndustryJobsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetCorporationsCorporationIDIndustryJobsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDIndustryJobsOK creates a GetCorporationsCorporationIDIndustryJobsOK with default headers values
func NewGetCorporationsCorporationIDIndustryJobsOK() *GetCorporationsCorporationIDIndustryJobsOK {
	var (
		// initialize headers with default values
		xPagesDefault = int32(1)
	)

	return &GetCorporationsCorporationIDIndustryJobsOK{

		XPages: xPagesDefault,
	}
}

/* GetCorporationsCorporationIDIndustryJobsOK describes a response with status code 200, with default header values.

A list of corporation industry jobs
*/
type GetCorporationsCorporationIDIndustryJobsOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	/* Maximum page number

	   Format: int32
	   Default: 1
	*/
	XPages int32

	Payload []*GetCorporationsCorporationIDIndustryJobsOKBodyItems0
}

func (o *GetCorporationsCorporationIDIndustryJobsOK) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/industry/jobs/][%d] getCorporationsCorporationIdIndustryJobsOK  %+v", 200, o.Payload)
}
func (o *GetCorporationsCorporationIDIndustryJobsOK) GetPayload() []*GetCorporationsCorporationIDIndustryJobsOKBodyItems0 {
	return o.Payload
}

func (o *GetCorporationsCorporationIDIndustryJobsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header X-Pages
	hdrXPages := response.GetHeader("X-Pages")

	if hdrXPages != "" {
		valxPages, err := swag.ConvertInt32(hdrXPages)
		if err != nil {
			return errors.InvalidType("X-Pages", "header", "int32", hdrXPages)
		}
		o.XPages = valxPages
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDIndustryJobsNotModified creates a GetCorporationsCorporationIDIndustryJobsNotModified with default headers values
func NewGetCorporationsCorporationIDIndustryJobsNotModified() *GetCorporationsCorporationIDIndustryJobsNotModified {
	return &GetCorporationsCorporationIDIndustryJobsNotModified{}
}

/* GetCorporationsCorporationIDIndustryJobsNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetCorporationsCorporationIDIndustryJobsNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationsCorporationIDIndustryJobsNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/industry/jobs/][%d] getCorporationsCorporationIdIndustryJobsNotModified ", 304)
}

func (o *GetCorporationsCorporationIDIndustryJobsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetCorporationsCorporationIDIndustryJobsBadRequest creates a GetCorporationsCorporationIDIndustryJobsBadRequest with default headers values
func NewGetCorporationsCorporationIDIndustryJobsBadRequest() *GetCorporationsCorporationIDIndustryJobsBadRequest {
	return &GetCorporationsCorporationIDIndustryJobsBadRequest{}
}

/* GetCorporationsCorporationIDIndustryJobsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCorporationsCorporationIDIndustryJobsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationsCorporationIDIndustryJobsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/industry/jobs/][%d] getCorporationsCorporationIdIndustryJobsBadRequest  %+v", 400, o.Payload)
}
func (o *GetCorporationsCorporationIDIndustryJobsBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetCorporationsCorporationIDIndustryJobsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDIndustryJobsUnauthorized creates a GetCorporationsCorporationIDIndustryJobsUnauthorized with default headers values
func NewGetCorporationsCorporationIDIndustryJobsUnauthorized() *GetCorporationsCorporationIDIndustryJobsUnauthorized {
	return &GetCorporationsCorporationIDIndustryJobsUnauthorized{}
}

/* GetCorporationsCorporationIDIndustryJobsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDIndustryJobsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCorporationsCorporationIDIndustryJobsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/industry/jobs/][%d] getCorporationsCorporationIdIndustryJobsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCorporationsCorporationIDIndustryJobsUnauthorized) GetPayload() *models.Unauthorized {
	return o.Payload
}

func (o *GetCorporationsCorporationIDIndustryJobsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDIndustryJobsForbidden creates a GetCorporationsCorporationIDIndustryJobsForbidden with default headers values
func NewGetCorporationsCorporationIDIndustryJobsForbidden() *GetCorporationsCorporationIDIndustryJobsForbidden {
	return &GetCorporationsCorporationIDIndustryJobsForbidden{}
}

/* GetCorporationsCorporationIDIndustryJobsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCorporationsCorporationIDIndustryJobsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCorporationsCorporationIDIndustryJobsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/industry/jobs/][%d] getCorporationsCorporationIdIndustryJobsForbidden  %+v", 403, o.Payload)
}
func (o *GetCorporationsCorporationIDIndustryJobsForbidden) GetPayload() *models.Forbidden {
	return o.Payload
}

func (o *GetCorporationsCorporationIDIndustryJobsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDIndustryJobsEnhanceYourCalm creates a GetCorporationsCorporationIDIndustryJobsEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDIndustryJobsEnhanceYourCalm() *GetCorporationsCorporationIDIndustryJobsEnhanceYourCalm {
	return &GetCorporationsCorporationIDIndustryJobsEnhanceYourCalm{}
}

/* GetCorporationsCorporationIDIndustryJobsEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetCorporationsCorporationIDIndustryJobsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationsCorporationIDIndustryJobsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/industry/jobs/][%d] getCorporationsCorporationIdIndustryJobsEnhanceYourCalm  %+v", 420, o.Payload)
}
func (o *GetCorporationsCorporationIDIndustryJobsEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetCorporationsCorporationIDIndustryJobsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDIndustryJobsInternalServerError creates a GetCorporationsCorporationIDIndustryJobsInternalServerError with default headers values
func NewGetCorporationsCorporationIDIndustryJobsInternalServerError() *GetCorporationsCorporationIDIndustryJobsInternalServerError {
	return &GetCorporationsCorporationIDIndustryJobsInternalServerError{}
}

/* GetCorporationsCorporationIDIndustryJobsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCorporationsCorporationIDIndustryJobsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationsCorporationIDIndustryJobsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/industry/jobs/][%d] getCorporationsCorporationIdIndustryJobsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCorporationsCorporationIDIndustryJobsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCorporationsCorporationIDIndustryJobsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDIndustryJobsServiceUnavailable creates a GetCorporationsCorporationIDIndustryJobsServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDIndustryJobsServiceUnavailable() *GetCorporationsCorporationIDIndustryJobsServiceUnavailable {
	return &GetCorporationsCorporationIDIndustryJobsServiceUnavailable{}
}

/* GetCorporationsCorporationIDIndustryJobsServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDIndustryJobsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationsCorporationIDIndustryJobsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/industry/jobs/][%d] getCorporationsCorporationIdIndustryJobsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetCorporationsCorporationIDIndustryJobsServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetCorporationsCorporationIDIndustryJobsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDIndustryJobsGatewayTimeout creates a GetCorporationsCorporationIDIndustryJobsGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDIndustryJobsGatewayTimeout() *GetCorporationsCorporationIDIndustryJobsGatewayTimeout {
	return &GetCorporationsCorporationIDIndustryJobsGatewayTimeout{}
}

/* GetCorporationsCorporationIDIndustryJobsGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDIndustryJobsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationsCorporationIDIndustryJobsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/corporations/{corporation_id}/industry/jobs/][%d] getCorporationsCorporationIdIndustryJobsGatewayTimeout  %+v", 504, o.Payload)
}
func (o *GetCorporationsCorporationIDIndustryJobsGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetCorporationsCorporationIDIndustryJobsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCorporationsCorporationIDIndustryJobsOKBodyItems0 get_corporations_corporation_id_industry_jobs_200_ok
//
// 200 ok object
swagger:model GetCorporationsCorporationIDIndustryJobsOKBodyItems0
*/
type GetCorporationsCorporationIDIndustryJobsOKBodyItems0 struct {

	// get_corporations_corporation_id_industry_jobs_activity_id
	//
	// Job activity ID
	// Required: true
	ActivityID *int32 `json:"activity_id"`

	// get_corporations_corporation_id_industry_jobs_blueprint_id
	//
	// blueprint_id integer
	// Required: true
	BlueprintID *int64 `json:"blueprint_id"`

	// get_corporations_corporation_id_industry_jobs_blueprint_location_id
	//
	// Location ID of the location from which the blueprint was installed. Normally a station ID, but can also be an asset (e.g. container) or corporation facility
	// Required: true
	BlueprintLocationID *int64 `json:"blueprint_location_id"`

	// get_corporations_corporation_id_industry_jobs_blueprint_type_id
	//
	// blueprint_type_id integer
	// Required: true
	BlueprintTypeID *int32 `json:"blueprint_type_id"`

	// get_corporations_corporation_id_industry_jobs_completed_character_id
	//
	// ID of the character which completed this job
	CompletedCharacterID int32 `json:"completed_character_id,omitempty"`

	// get_corporations_corporation_id_industry_jobs_completed_date
	//
	// Date and time when this job was completed
	// Format: date-time
	CompletedDate strfmt.DateTime `json:"completed_date,omitempty"`

	// get_corporations_corporation_id_industry_jobs_cost
	//
	// The sume of job installation fee and industry facility tax
	Cost float64 `json:"cost,omitempty"`

	// get_corporations_corporation_id_industry_jobs_duration
	//
	// Job duration in seconds
	// Required: true
	Duration *int32 `json:"duration"`

	// get_corporations_corporation_id_industry_jobs_end_date
	//
	// Date and time when this job finished
	// Required: true
	// Format: date-time
	EndDate *strfmt.DateTime `json:"end_date"`

	// get_corporations_corporation_id_industry_jobs_facility_id
	//
	// ID of the facility where this job is running
	// Required: true
	FacilityID *int64 `json:"facility_id"`

	// get_corporations_corporation_id_industry_jobs_installer_id
	//
	// ID of the character which installed this job
	// Required: true
	InstallerID *int32 `json:"installer_id"`

	// get_corporations_corporation_id_industry_jobs_job_id
	//
	// Unique job ID
	// Required: true
	JobID *int32 `json:"job_id"`

	// get_corporations_corporation_id_industry_jobs_licensed_runs
	//
	// Number of runs blueprint is licensed for
	LicensedRuns int32 `json:"licensed_runs,omitempty"`

	// get_corporations_corporation_id_industry_jobs_location_id
	//
	// ID of the location for the industry facility
	// Required: true
	LocationID *int64 `json:"location_id"`

	// get_corporations_corporation_id_industry_jobs_output_location_id
	//
	// Location ID of the location to which the output of the job will be delivered. Normally a station ID, but can also be a corporation facility
	// Required: true
	OutputLocationID *int64 `json:"output_location_id"`

	// get_corporations_corporation_id_industry_jobs_pause_date
	//
	// Date and time when this job was paused (i.e. time when the facility where this job was installed went offline)
	// Format: date-time
	PauseDate strfmt.DateTime `json:"pause_date,omitempty"`

	// get_corporations_corporation_id_industry_jobs_probability
	//
	// Chance of success for invention
	Probability float32 `json:"probability,omitempty"`

	// get_corporations_corporation_id_industry_jobs_product_type_id
	//
	// Type ID of product (manufactured, copied or invented)
	ProductTypeID int32 `json:"product_type_id,omitempty"`

	// get_corporations_corporation_id_industry_jobs_runs
	//
	// Number of runs for a manufacturing job, or number of copies to make for a blueprint copy
	// Required: true
	Runs *int32 `json:"runs"`

	// get_corporations_corporation_id_industry_jobs_start_date
	//
	// Date and time when this job started
	// Required: true
	// Format: date-time
	StartDate *strfmt.DateTime `json:"start_date"`

	// get_corporations_corporation_id_industry_jobs_status
	//
	// status string
	// Required: true
	// Enum: [active cancelled delivered paused ready reverted]
	Status *string `json:"status"`

	// get_corporations_corporation_id_industry_jobs_successful_runs
	//
	// Number of successful runs for this job. Equal to runs unless this is an invention job
	SuccessfulRuns int32 `json:"successful_runs,omitempty"`
}

// Validate validates this get corporations corporation ID industry jobs o k body items0
func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActivityID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBlueprintID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBlueprintLocationID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBlueprintTypeID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCompletedDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDuration(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEndDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFacilityID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateInstallerID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateJobID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocationID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOutputLocationID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePauseDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRuns(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateActivityID(formats strfmt.Registry) error {

	if err := validate.Required("activity_id", "body", o.ActivityID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateBlueprintID(formats strfmt.Registry) error {

	if err := validate.Required("blueprint_id", "body", o.BlueprintID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateBlueprintLocationID(formats strfmt.Registry) error {

	if err := validate.Required("blueprint_location_id", "body", o.BlueprintLocationID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateBlueprintTypeID(formats strfmt.Registry) error {

	if err := validate.Required("blueprint_type_id", "body", o.BlueprintTypeID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateCompletedDate(formats strfmt.Registry) error {
	if swag.IsZero(o.CompletedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("completed_date", "body", "date-time", o.CompletedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateDuration(formats strfmt.Registry) error {

	if err := validate.Required("duration", "body", o.Duration); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateEndDate(formats strfmt.Registry) error {

	if err := validate.Required("end_date", "body", o.EndDate); err != nil {
		return err
	}

	if err := validate.FormatOf("end_date", "body", "date-time", o.EndDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateFacilityID(formats strfmt.Registry) error {

	if err := validate.Required("facility_id", "body", o.FacilityID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateInstallerID(formats strfmt.Registry) error {

	if err := validate.Required("installer_id", "body", o.InstallerID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateJobID(formats strfmt.Registry) error {

	if err := validate.Required("job_id", "body", o.JobID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateLocationID(formats strfmt.Registry) error {

	if err := validate.Required("location_id", "body", o.LocationID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateOutputLocationID(formats strfmt.Registry) error {

	if err := validate.Required("output_location_id", "body", o.OutputLocationID); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validatePauseDate(formats strfmt.Registry) error {
	if swag.IsZero(o.PauseDate) { // not required
		return nil
	}

	if err := validate.FormatOf("pause_date", "body", "date-time", o.PauseDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateRuns(formats strfmt.Registry) error {

	if err := validate.Required("runs", "body", o.Runs); err != nil {
		return err
	}

	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateStartDate(formats strfmt.Registry) error {

	if err := validate.Required("start_date", "body", o.StartDate); err != nil {
		return err
	}

	if err := validate.FormatOf("start_date", "body", "date-time", o.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

var getCorporationsCorporationIdIndustryJobsOKBodyItems0TypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["active","cancelled","delivered","paused","ready","reverted"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdIndustryJobsOKBodyItems0TypeStatusPropEnum = append(getCorporationsCorporationIdIndustryJobsOKBodyItems0TypeStatusPropEnum, v)
	}
}

const (

	// GetCorporationsCorporationIDIndustryJobsOKBodyItems0StatusActive captures enum value "active"
	GetCorporationsCorporationIDIndustryJobsOKBodyItems0StatusActive string = "active"

	// GetCorporationsCorporationIDIndustryJobsOKBodyItems0StatusCancelled captures enum value "cancelled"
	GetCorporationsCorporationIDIndustryJobsOKBodyItems0StatusCancelled string = "cancelled"

	// GetCorporationsCorporationIDIndustryJobsOKBodyItems0StatusDelivered captures enum value "delivered"
	GetCorporationsCorporationIDIndustryJobsOKBodyItems0StatusDelivered string = "delivered"

	// GetCorporationsCorporationIDIndustryJobsOKBodyItems0StatusPaused captures enum value "paused"
	GetCorporationsCorporationIDIndustryJobsOKBodyItems0StatusPaused string = "paused"

	// GetCorporationsCorporationIDIndustryJobsOKBodyItems0StatusReady captures enum value "ready"
	GetCorporationsCorporationIDIndustryJobsOKBodyItems0StatusReady string = "ready"

	// GetCorporationsCorporationIDIndustryJobsOKBodyItems0StatusReverted captures enum value "reverted"
	GetCorporationsCorporationIDIndustryJobsOKBodyItems0StatusReverted string = "reverted"
)

// prop value enum
func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getCorporationsCorporationIdIndustryJobsOKBodyItems0TypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", o.Status); err != nil {
		return err
	}

	// value enum
	if err := o.validateStatusEnum("status", "body", *o.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get corporations corporation ID industry jobs o k body items0 based on context it is used
func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCorporationsCorporationIDIndustryJobsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDIndustryJobsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
