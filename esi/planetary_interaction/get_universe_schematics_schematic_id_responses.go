// Code generated by go-swagger; DO NOT EDIT.

package planetary_interaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ferocious-space/eveapi/models"
)

// GetUniverseSchematicsSchematicIDReader is a Reader for the GetUniverseSchematicsSchematicID structure.
type GetUniverseSchematicsSchematicIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseSchematicsSchematicIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUniverseSchematicsSchematicIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetUniverseSchematicsSchematicIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetUniverseSchematicsSchematicIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUniverseSchematicsSchematicIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 420:
		result := NewGetUniverseSchematicsSchematicIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUniverseSchematicsSchematicIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUniverseSchematicsSchematicIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetUniverseSchematicsSchematicIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUniverseSchematicsSchematicIDOK creates a GetUniverseSchematicsSchematicIDOK with default headers values
func NewGetUniverseSchematicsSchematicIDOK() *GetUniverseSchematicsSchematicIDOK {
	return &GetUniverseSchematicsSchematicIDOK{}
}

/*
GetUniverseSchematicsSchematicIDOK describes a response with status code 200, with default header values.

Public data about a schematic
*/
type GetUniverseSchematicsSchematicIDOK struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *GetUniverseSchematicsSchematicIDOKBody
}

// IsSuccess returns true when this get universe schematics schematic Id o k response has a 2xx status code
func (o *GetUniverseSchematicsSchematicIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get universe schematics schematic Id o k response has a 3xx status code
func (o *GetUniverseSchematicsSchematicIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe schematics schematic Id o k response has a 4xx status code
func (o *GetUniverseSchematicsSchematicIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe schematics schematic Id o k response has a 5xx status code
func (o *GetUniverseSchematicsSchematicIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe schematics schematic Id o k response a status code equal to that given
func (o *GetUniverseSchematicsSchematicIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUniverseSchematicsSchematicIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdOK  %+v", 200, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDOK) String() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdOK  %+v", 200, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDOK) GetPayload() *GetUniverseSchematicsSchematicIDOKBody {
	return o.Payload
}

func (o *GetUniverseSchematicsSchematicIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	o.Payload = new(GetUniverseSchematicsSchematicIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDNotModified creates a GetUniverseSchematicsSchematicIDNotModified with default headers values
func NewGetUniverseSchematicsSchematicIDNotModified() *GetUniverseSchematicsSchematicIDNotModified {
	return &GetUniverseSchematicsSchematicIDNotModified{}
}

/*
GetUniverseSchematicsSchematicIDNotModified describes a response with status code 304, with default header values.

Not modified
*/
type GetUniverseSchematicsSchematicIDNotModified struct {

	/* The caching mechanism used
	 */
	CacheControl string

	/* RFC7232 compliant entity tag
	 */
	ETag string

	/* RFC7231 formatted datetime string
	 */
	Expires string

	/* RFC7231 formatted datetime string
	 */
	LastModified string
}

// IsSuccess returns true when this get universe schematics schematic Id not modified response has a 2xx status code
func (o *GetUniverseSchematicsSchematicIDNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe schematics schematic Id not modified response has a 3xx status code
func (o *GetUniverseSchematicsSchematicIDNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get universe schematics schematic Id not modified response has a 4xx status code
func (o *GetUniverseSchematicsSchematicIDNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe schematics schematic Id not modified response has a 5xx status code
func (o *GetUniverseSchematicsSchematicIDNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe schematics schematic Id not modified response a status code equal to that given
func (o *GetUniverseSchematicsSchematicIDNotModified) IsCode(code int) bool {
	return code == 304
}

func (o *GetUniverseSchematicsSchematicIDNotModified) Error() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdNotModified ", 304)
}

func (o *GetUniverseSchematicsSchematicIDNotModified) String() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdNotModified ", 304)
}

func (o *GetUniverseSchematicsSchematicIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Expires
	hdrExpires := response.GetHeader("Expires")

	if hdrExpires != "" {
		o.Expires = hdrExpires
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDBadRequest creates a GetUniverseSchematicsSchematicIDBadRequest with default headers values
func NewGetUniverseSchematicsSchematicIDBadRequest() *GetUniverseSchematicsSchematicIDBadRequest {
	return &GetUniverseSchematicsSchematicIDBadRequest{}
}

/*
GetUniverseSchematicsSchematicIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetUniverseSchematicsSchematicIDBadRequest struct {
	Payload *models.BadRequest
}

// IsSuccess returns true when this get universe schematics schematic Id bad request response has a 2xx status code
func (o *GetUniverseSchematicsSchematicIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe schematics schematic Id bad request response has a 3xx status code
func (o *GetUniverseSchematicsSchematicIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe schematics schematic Id bad request response has a 4xx status code
func (o *GetUniverseSchematicsSchematicIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get universe schematics schematic Id bad request response has a 5xx status code
func (o *GetUniverseSchematicsSchematicIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe schematics schematic Id bad request response a status code equal to that given
func (o *GetUniverseSchematicsSchematicIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetUniverseSchematicsSchematicIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDBadRequest) GetPayload() *models.BadRequest {
	return o.Payload
}

func (o *GetUniverseSchematicsSchematicIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDNotFound creates a GetUniverseSchematicsSchematicIDNotFound with default headers values
func NewGetUniverseSchematicsSchematicIDNotFound() *GetUniverseSchematicsSchematicIDNotFound {
	return &GetUniverseSchematicsSchematicIDNotFound{}
}

/*
GetUniverseSchematicsSchematicIDNotFound describes a response with status code 404, with default header values.

Schematic not found
*/
type GetUniverseSchematicsSchematicIDNotFound struct {
	Payload *GetUniverseSchematicsSchematicIDNotFoundBody
}

// IsSuccess returns true when this get universe schematics schematic Id not found response has a 2xx status code
func (o *GetUniverseSchematicsSchematicIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe schematics schematic Id not found response has a 3xx status code
func (o *GetUniverseSchematicsSchematicIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe schematics schematic Id not found response has a 4xx status code
func (o *GetUniverseSchematicsSchematicIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get universe schematics schematic Id not found response has a 5xx status code
func (o *GetUniverseSchematicsSchematicIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe schematics schematic Id not found response a status code equal to that given
func (o *GetUniverseSchematicsSchematicIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUniverseSchematicsSchematicIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDNotFound) String() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDNotFound) GetPayload() *GetUniverseSchematicsSchematicIDNotFoundBody {
	return o.Payload
}

func (o *GetUniverseSchematicsSchematicIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUniverseSchematicsSchematicIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDEnhanceYourCalm creates a GetUniverseSchematicsSchematicIDEnhanceYourCalm with default headers values
func NewGetUniverseSchematicsSchematicIDEnhanceYourCalm() *GetUniverseSchematicsSchematicIDEnhanceYourCalm {
	return &GetUniverseSchematicsSchematicIDEnhanceYourCalm{}
}

/*
GetUniverseSchematicsSchematicIDEnhanceYourCalm describes a response with status code 420, with default header values.

Error limited
*/
type GetUniverseSchematicsSchematicIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

// IsSuccess returns true when this get universe schematics schematic Id enhance your calm response has a 2xx status code
func (o *GetUniverseSchematicsSchematicIDEnhanceYourCalm) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe schematics schematic Id enhance your calm response has a 3xx status code
func (o *GetUniverseSchematicsSchematicIDEnhanceYourCalm) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe schematics schematic Id enhance your calm response has a 4xx status code
func (o *GetUniverseSchematicsSchematicIDEnhanceYourCalm) IsClientError() bool {
	return true
}

// IsServerError returns true when this get universe schematics schematic Id enhance your calm response has a 5xx status code
func (o *GetUniverseSchematicsSchematicIDEnhanceYourCalm) IsServerError() bool {
	return false
}

// IsCode returns true when this get universe schematics schematic Id enhance your calm response a status code equal to that given
func (o *GetUniverseSchematicsSchematicIDEnhanceYourCalm) IsCode(code int) bool {
	return code == 420
}

func (o *GetUniverseSchematicsSchematicIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDEnhanceYourCalm) String() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDEnhanceYourCalm) GetPayload() *models.ErrorLimited {
	return o.Payload
}

func (o *GetUniverseSchematicsSchematicIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDInternalServerError creates a GetUniverseSchematicsSchematicIDInternalServerError with default headers values
func NewGetUniverseSchematicsSchematicIDInternalServerError() *GetUniverseSchematicsSchematicIDInternalServerError {
	return &GetUniverseSchematicsSchematicIDInternalServerError{}
}

/*
GetUniverseSchematicsSchematicIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetUniverseSchematicsSchematicIDInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get universe schematics schematic Id internal server error response has a 2xx status code
func (o *GetUniverseSchematicsSchematicIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe schematics schematic Id internal server error response has a 3xx status code
func (o *GetUniverseSchematicsSchematicIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe schematics schematic Id internal server error response has a 4xx status code
func (o *GetUniverseSchematicsSchematicIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe schematics schematic Id internal server error response has a 5xx status code
func (o *GetUniverseSchematicsSchematicIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get universe schematics schematic Id internal server error response a status code equal to that given
func (o *GetUniverseSchematicsSchematicIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUniverseSchematicsSchematicIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetUniverseSchematicsSchematicIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDServiceUnavailable creates a GetUniverseSchematicsSchematicIDServiceUnavailable with default headers values
func NewGetUniverseSchematicsSchematicIDServiceUnavailable() *GetUniverseSchematicsSchematicIDServiceUnavailable {
	return &GetUniverseSchematicsSchematicIDServiceUnavailable{}
}

/*
GetUniverseSchematicsSchematicIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetUniverseSchematicsSchematicIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

// IsSuccess returns true when this get universe schematics schematic Id service unavailable response has a 2xx status code
func (o *GetUniverseSchematicsSchematicIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe schematics schematic Id service unavailable response has a 3xx status code
func (o *GetUniverseSchematicsSchematicIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe schematics schematic Id service unavailable response has a 4xx status code
func (o *GetUniverseSchematicsSchematicIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe schematics schematic Id service unavailable response has a 5xx status code
func (o *GetUniverseSchematicsSchematicIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get universe schematics schematic Id service unavailable response a status code equal to that given
func (o *GetUniverseSchematicsSchematicIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetUniverseSchematicsSchematicIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDServiceUnavailable) GetPayload() *models.ServiceUnavailable {
	return o.Payload
}

func (o *GetUniverseSchematicsSchematicIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDGatewayTimeout creates a GetUniverseSchematicsSchematicIDGatewayTimeout with default headers values
func NewGetUniverseSchematicsSchematicIDGatewayTimeout() *GetUniverseSchematicsSchematicIDGatewayTimeout {
	return &GetUniverseSchematicsSchematicIDGatewayTimeout{}
}

/*
GetUniverseSchematicsSchematicIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway timeout
*/
type GetUniverseSchematicsSchematicIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

// IsSuccess returns true when this get universe schematics schematic Id gateway timeout response has a 2xx status code
func (o *GetUniverseSchematicsSchematicIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get universe schematics schematic Id gateway timeout response has a 3xx status code
func (o *GetUniverseSchematicsSchematicIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get universe schematics schematic Id gateway timeout response has a 4xx status code
func (o *GetUniverseSchematicsSchematicIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get universe schematics schematic Id gateway timeout response has a 5xx status code
func (o *GetUniverseSchematicsSchematicIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get universe schematics schematic Id gateway timeout response a status code equal to that given
func (o *GetUniverseSchematicsSchematicIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetUniverseSchematicsSchematicIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDGatewayTimeout) GetPayload() *models.GatewayTimeout {
	return o.Payload
}

func (o *GetUniverseSchematicsSchematicIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetUniverseSchematicsSchematicIDNotFoundBody get_universe_schematics_schematic_id_not_found
//
// Schematic not found
swagger:model GetUniverseSchematicsSchematicIDNotFoundBody
*/
type GetUniverseSchematicsSchematicIDNotFoundBody struct {

	// get_universe_schematics_schematic_id_error
	//
	// error message
	Error string `json:"error,omitempty"`
}

// Validate validates this get universe schematics schematic ID not found body
func (o *GetUniverseSchematicsSchematicIDNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get universe schematics schematic ID not found body based on context it is used
func (o *GetUniverseSchematicsSchematicIDNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUniverseSchematicsSchematicIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUniverseSchematicsSchematicIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetUniverseSchematicsSchematicIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetUniverseSchematicsSchematicIDOKBody get_universe_schematics_schematic_id_ok
//
// 200 ok object
swagger:model GetUniverseSchematicsSchematicIDOKBody
*/
type GetUniverseSchematicsSchematicIDOKBody struct {

	// get_universe_schematics_schematic_id_cycle_time
	//
	// Time in seconds to process a run
	// Required: true
	CycleTime *int32 `json:"cycle_time"`

	// get_universe_schematics_schematic_id_schematic_name
	//
	// schematic_name string
	// Required: true
	SchematicName *string `json:"schematic_name"`
}

// Validate validates this get universe schematics schematic ID o k body
func (o *GetUniverseSchematicsSchematicIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCycleTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSchematicName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniverseSchematicsSchematicIDOKBody) validateCycleTime(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseSchematicsSchematicIdOK"+"."+"cycle_time", "body", o.CycleTime); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseSchematicsSchematicIDOKBody) validateSchematicName(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseSchematicsSchematicIdOK"+"."+"schematic_name", "body", o.SchematicName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get universe schematics schematic ID o k body based on context it is used
func (o *GetUniverseSchematicsSchematicIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUniverseSchematicsSchematicIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUniverseSchematicsSchematicIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetUniverseSchematicsSchematicIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
